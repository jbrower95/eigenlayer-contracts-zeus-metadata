{
  "abi": [
    {
      "type": "constructor",
      "inputs": [
        {
          "name": "_delegation",
          "type": "address",
          "internalType": "contract IDelegationManager"
        },
        {
          "name": "_pauserRegistry",
          "type": "address",
          "internalType": "contract IPauserRegistry"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "OPERATOR_AVS_REGISTRATION_TYPEHASH",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "OPERATOR_SET_FORCE_DEREGISTRATION_TYPEHASH",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "OPERATOR_SET_REGISTRATION_TYPEHASH",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "avsOperatorStatus",
      "inputs": [
        {
          "name": "avs",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint8",
          "internalType": "enum IAVSDirectoryTypes.OperatorAVSRegistrationStatus"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "calculateOperatorAVSRegistrationDigestHash",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "avs",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "salt",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "expiry",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "cancelSalt",
      "inputs": [
        {
          "name": "salt",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "delegation",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract IDelegationManager"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "deregisterOperatorFromAVS",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "domainSeparator",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "initialize",
      "inputs": [
        {
          "name": "initialOwner",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "initialPausedStatus",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "operatorSaltIsSpent",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "salt",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "outputs": [
        {
          "name": "isSpent",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "owner",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "pause",
      "inputs": [
        {
          "name": "newPausedStatus",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "pauseAll",
      "inputs": [],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "paused",
      "inputs": [
        {
          "name": "index",
          "type": "uint8",
          "internalType": "uint8"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "paused",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "pauserRegistry",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract IPauserRegistry"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "registerOperatorToAVS",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "operatorSignature",
          "type": "tuple",
          "internalType": "struct ISignatureUtils.SignatureWithSaltAndExpiry",
          "components": [
            {
              "name": "signature",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "salt",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "expiry",
              "type": "uint256",
              "internalType": "uint256"
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "renounceOwnership",
      "inputs": [],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "transferOwnership",
      "inputs": [
        {
          "name": "newOwner",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "unpause",
      "inputs": [
        {
          "name": "newPausedStatus",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "updateAVSMetadataURI",
      "inputs": [
        {
          "name": "metadataURI",
          "type": "string",
          "internalType": "string"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "event",
      "name": "AVSMetadataURIUpdated",
      "inputs": [
        {
          "name": "avs",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "metadataURI",
          "type": "string",
          "indexed": false,
          "internalType": "string"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Initialized",
      "inputs": [
        {
          "name": "version",
          "type": "uint8",
          "indexed": false,
          "internalType": "uint8"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "OperatorAVSRegistrationStatusUpdated",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "avs",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "status",
          "type": "uint8",
          "indexed": false,
          "internalType": "enum IAVSDirectoryTypes.OperatorAVSRegistrationStatus"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "OwnershipTransferred",
      "inputs": [
        {
          "name": "previousOwner",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "newOwner",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Paused",
      "inputs": [
        {
          "name": "account",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "newPausedStatus",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Unpaused",
      "inputs": [
        {
          "name": "account",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "newPausedStatus",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "error",
      "name": "CurrentlyPaused",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InputAddressZero",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidNewPausedStatus",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidSignature",
      "inputs": []
    },
    {
      "type": "error",
      "name": "OnlyPauser",
      "inputs": []
    },
    {
      "type": "error",
      "name": "OnlyUnpauser",
      "inputs": []
    },
    {
      "type": "error",
      "name": "OperatorAlreadyRegisteredToAVS",
      "inputs": []
    },
    {
      "type": "error",
      "name": "OperatorNotRegisteredToAVS",
      "inputs": []
    },
    {
      "type": "error",
      "name": "OperatorNotRegisteredToEigenLayer",
      "inputs": []
    },
    {
      "type": "error",
      "name": "SaltSpent",
      "inputs": []
    },
    {
      "type": "error",
      "name": "SignatureExpired",
      "inputs": []
    }
  ],
  "bytecode": {
    "object": "0x610100604052348015610010575f5ffd5b5060405161170438038061170483398101604081905261002f916101ed565b81816001600160a01b038116610058576040516339b190bb60e11b815260040160405180910390fd5b6001600160a01b039081166080521660a0524660c052610108604080518082018252600a81526922b4b3b2b72630bcb2b960b11b60209182015281517f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866818301527f71b625cfad44bac63b13dba07f2e1d6084ee04b6f8752101ece6126d584ee6ea81840152466060820152306080808301919091528351808303909101815260a0909101909252815191012090565b60e05261011361011a565b5050610225565b5f54610100900460ff16156101855760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b5f5460ff908116146101d4575f805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b6001600160a01b03811681146101ea575f5ffd5b50565b5f5f604083850312156101fe575f5ffd5b8251610209816101d6565b602084015190925061021a816101d6565b809150509250929050565b60805160a05160c05160e0516114906102745f395f610b7a01525f610aba01525f8181610340015261063d01525f818161021c015281816103d8015281816104ad0152610b9e01526114905ff3fe608060405234801561000f575f5ffd5b506004361061013d575f3560e01c8063a364f4da116100b4578063dce974b911610079578063dce974b914610314578063df5cf7231461033b578063ec76f44214610362578063f2fde38b14610395578063f698da25146103a8578063fabc1cbc146103b0575f5ffd5b8063a364f4da1461028d578063a98fb355146102a0578063c825fe68146102b3578063cd6dc687146102da578063d79aceab146102ed575f5ffd5b80635c975abb116101055780635c975abb146101fd578063715018a61461020f578063886f1195146102175780638da5cb5b146102565780639926ee7d14610267578063a1060c881461027a575f5ffd5b8063136439dd14610141578063374823b51461015657806349075da314610198578063595c6a67146101d25780635ac86ab7146101da575b5f5ffd5b61015461014f366004611075565b6103c3565b005b6101836101643660046110a0565b609960209081525f928352604080842090915290825290205460ff1681565b60405190151581526020015b60405180910390f35b6101c56101a63660046110ca565b609860209081525f928352604080842090915290825290205460ff1681565b60405161018f9190611115565b610154610498565b6101836101e836600461113b565b606654600160ff9092169190911b9081161490565b6066545b60405190815260200161018f565b610154610547565b61023e7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200161018f565b6033546001600160a01b031661023e565b6101546102753660046111d0565b610558565b6102016102883660046112bd565b610777565b61015461029b366004611300565b6107f6565b6101546102ae36600461131b565b6108db565b6102017f809c5ac049c45b7a7f050a20f00c16cf63797efbf8b1eb8d749fdfa39ff8f92981565b6101546102e83660046110a0565b610922565b6102017fda2c89bafdd34776a2b8bb9c83c82f419e20cc8c67207f70edd58249b92661bd81565b6102017f4ee65f64218c67b68da66fd0db16560040a6b973290b9e71912d661ee53fe49581565b61023e7f000000000000000000000000000000000000000000000000000000000000000081565b610154610370366004611075565b335f90815260996020908152604080832093835292905220805460ff19166001179055565b6101546103a3366004611300565b610a3e565b610201610ab7565b6101546103be366004611075565b610b9c565b60405163237dfb4760e11b81523360048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906346fbf68e90602401602060405180830381865afa158015610425573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104499190611389565b61046657604051631d77d47760e21b815260040160405180910390fd5b606654818116811461048b5760405163c61dca5d60e01b815260040160405180910390fd5b61049482610cab565b5050565b60405163237dfb4760e11b81523360048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906346fbf68e90602401602060405180830381865afa1580156104fa573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061051e9190611389565b61053b57604051631d77d47760e21b815260040160405180910390fd5b6105455f19610cab565b565b61054f610ce8565b6105455f610d42565b6066545f906001908116036105805760405163840a48d560e01b815260040160405180910390fd5b6001335f9081526098602090815260408083206001600160a01b038816845290915290205460ff1660018111156105b9576105b9611101565b036105d757604051631aa528bb60e11b815260040160405180910390fd5b6001600160a01b0383165f90815260996020908152604080832085830151845290915290205460ff161561061e57604051630d4c4c9160e21b815260040160405180910390fd5b6040516336b87bd760e11b81526001600160a01b0384811660048301527f00000000000000000000000000000000000000000000000000000000000000001690636d70f7ae90602401602060405180830381865afa158015610682573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106a69190611389565b6106c357604051639f88c8af60e01b815260040160405180910390fd5b6106e7836106db853386602001518760400151610777565b84516040860151610d93565b6001600160a01b0383165f81815260996020908152604080832086830151845282528083208054600160ff19918216811790925533808652609885528386208787529094529382902080549094168117909355519092917ff0952b1c65271d819d39983d2abb044b9cace59bcc4d4dd389f586ebdcb15b419161076a9190611115565b60405180910390a3505050565b604080517fda2c89bafdd34776a2b8bb9c83c82f419e20cc8c67207f70edd58249b92661bd60208201526001600160a01b038087169282019290925290841660608201526080810183905260a081018290525f906107ed9060c00160405160208183030381529060405280519060200120610deb565b95945050505050565b6066545f9060019081160361081e5760405163840a48d560e01b815260040160405180910390fd5b6001335f9081526098602090815260408083206001600160a01b038716845290915290205460ff16600181111561085757610857611101565b14610875576040516352df45c960e01b815260040160405180910390fd5b335f8181526098602090815260408083206001600160a01b0387168085529252808320805460ff191690555190917ff0952b1c65271d819d39983d2abb044b9cace59bcc4d4dd389f586ebdcb15b41916108cf9190611115565b60405180910390a35050565b336001600160a01b03167fa89c1dc243d8908a96dd84944bcc97d6bc6ac00dd78e20621576be6a3c94371383836040516109169291906113a8565b60405180910390a25050565b5f54610100900460ff161580801561094057505f54600160ff909116105b806109595750303b15801561095957505f5460ff166001145b6109c15760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b5f805460ff1916600117905580156109e2575f805461ff0019166101001790555b6109eb82610cab565b6109f483610d42565b8015610a39575f805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050565b610a46610ce8565b6001600160a01b038116610aab5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016109b8565b610ab481610d42565b50565b5f7f00000000000000000000000000000000000000000000000000000000000000004614610b775750604080518082018252600a81526922b4b3b2b72630bcb2b960b11b60209182015281517f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866818301527f71b625cfad44bac63b13dba07f2e1d6084ee04b6f8752101ece6126d584ee6ea81840152466060820152306080808301919091528351808303909101815260a0909101909252815191012090565b507f000000000000000000000000000000000000000000000000000000000000000090565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663eab66d7a6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610bf8573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610c1c91906113d6565b6001600160a01b0316336001600160a01b031614610c4d5760405163794821ff60e01b815260040160405180910390fd5b60665480198219811614610c745760405163c61dca5d60e01b815260040160405180910390fd5b606682905560405182815233907f3582d1828e26bf56bd801502bc021ac0bc8afb57c826e4986b45593c8fad389c90602001610916565b606681905560405181815233907fab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d9060200160405180910390a250565b6033546001600160a01b031633146105455760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016109b8565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b42811015610db457604051630819bdcd60e01b815260040160405180910390fd5b610dc86001600160a01b0385168484610e31565b610de557604051638baa579f60e01b815260040160405180910390fd5b50505050565b5f610df4610ab7565b60405161190160f01b6020820152602281019190915260428101839052606201604051602081830303815290604052805190602001209050919050565b5f5f5f610e3e8585610e8f565b90925090505f816004811115610e5657610e56611101565b148015610e745750856001600160a01b0316826001600160a01b0316145b80610e855750610e85868686610ed1565b9695505050505050565b5f5f8251604103610ec3576020830151604084015160608501515f1a610eb787828585610fb8565b94509450505050610eca565b505f905060025b9250929050565b5f5f5f856001600160a01b0316631626ba7e60e01b8686604051602401610ef99291906113f1565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b0319909416939093179092529051610f37919061142d565b5f60405180830381855afa9150503d805f8114610f6f576040519150601f19603f3d011682016040523d82523d5f602084013e610f74565b606091505b5091509150818015610f8857506020815110155b8015610e8557508051630b135d3f60e11b90610fad9083016020908101908401611443565b149695505050505050565b5f807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115610fed57505f9050600361106c565b604080515f8082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa15801561103e573d5f5f3e3d5ffd5b5050604051601f1901519150506001600160a01b038116611066575f6001925092505061106c565b91505f90505b94509492505050565b5f60208284031215611085575f5ffd5b5035919050565b6001600160a01b0381168114610ab4575f5ffd5b5f5f604083850312156110b1575f5ffd5b82356110bc8161108c565b946020939093013593505050565b5f5f604083850312156110db575f5ffd5b82356110e68161108c565b915060208301356110f68161108c565b809150509250929050565b634e487b7160e01b5f52602160045260245ffd5b602081016002831061113557634e487b7160e01b5f52602160045260245ffd5b91905290565b5f6020828403121561114b575f5ffd5b813560ff8116811461115b575f5ffd5b9392505050565b634e487b7160e01b5f52604160045260245ffd5b6040516060810167ffffffffffffffff8111828210171561119957611199611162565b60405290565b604051601f8201601f1916810167ffffffffffffffff811182821017156111c8576111c8611162565b604052919050565b5f5f604083850312156111e1575f5ffd5b82356111ec8161108c565b9150602083013567ffffffffffffffff811115611207575f5ffd5b830160608186031215611218575f5ffd5b611220611176565b813567ffffffffffffffff811115611236575f5ffd5b8201601f81018713611246575f5ffd5b803567ffffffffffffffff81111561126057611260611162565b611273601f8201601f191660200161119f565b818152886020838501011115611287575f5ffd5b816020840160208301375f6020928201830152835283810135908301525060409182013591810191909152919491935090915050565b5f5f5f5f608085870312156112d0575f5ffd5b84356112db8161108c565b935060208501356112eb8161108c565b93969395505050506040820135916060013590565b5f60208284031215611310575f5ffd5b813561115b8161108c565b5f5f6020838503121561132c575f5ffd5b823567ffffffffffffffff811115611342575f5ffd5b8301601f81018513611352575f5ffd5b803567ffffffffffffffff811115611368575f5ffd5b856020828401011115611379575f5ffd5b6020919091019590945092505050565b5f60208284031215611399575f5ffd5b8151801515811461115b575f5ffd5b60208152816020820152818360408301375f818301604090810191909152601f909201601f19160101919050565b5f602082840312156113e6575f5ffd5b815161115b8161108c565b828152604060208201525f82518060408401528060208501606085015e5f606082850101526060601f19601f8301168401019150509392505050565b5f82518060208501845e5f920191825250919050565b5f60208284031215611453575f5ffd5b505191905056fea2646970667358221220eac7145307728a76d1079ccd48811af0518b362dd395a46e8ca1aaa77b2c34ac64736f6c634300081b0033",
    "sourceMap": "407:4377:145:-:0;;;802:197;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;921:11;943:15;-1:-1:-1;;;;;3224:38:182;;3216:67;;;;-1:-1:-1;;;3216:67:182;;;;;;;;;;;;-1:-1:-1;;;;;3293:32:182;;;;;2207:24:146;;;1041:13:181;1021:33;;1092:27;2373:19;;;;;;;;;;;-1:-1:-1;;;2373:19:181;;;;;2286:197;;602:80;2286:197;;;884:25:281;2363:30:181;925:18:281;;;918:34;2416:13:181;968:18:281;;;961:34;2460:4:181;1011:18:281;;;;1004:60;;;;2286:197:181;;;;;;;;;;856:19:281;;;;2286:197:181;;;2259:238;;;;;;2120:384;1092:27;1064:55;;970:22:145::2;:20;:22::i;:::-;802:197:::0;;407:4377;;5939:280:30;6007:13;;;;;;;6006:14;5998:66;;;;-1:-1:-1;;;5998:66:30;;1277:2:281;5998:66:30;;;1259:21:281;1316:2;1296:18;;;1289:30;1355:34;1335:18;;;1328:62;-1:-1:-1;;;1406:18:281;;;1399:37;1453:19;;5998:66:30;;;;;;;;6078:12;;6094:15;6078:12;;;:31;6074:139;;6125:12;:30;;-1:-1:-1;;6125:30:30;6140:15;6125:30;;;;;;6174:28;;1625:36:281;;;6174:28:30;;1613:2:281;1598:18;6174:28:30;;;;;;;6074:139;5939:280::o;14:151:281:-;-1:-1:-1;;;;;109:31:281;;99:42;;89:70;;155:1;152;145:12;89:70;14:151;:::o;170:478::-;302:6;310;363:2;351:9;342:7;338:23;334:32;331:52;;;379:1;376;369:12;331:52;411:9;405:16;430:51;475:5;430:51;:::i;:::-;550:2;535:18;;529:25;500:5;;-1:-1:-1;563:53:281;529:25;563:53;:::i;:::-;635:7;625:17;;;170:478;;;;;:::o;1483:184::-;407:4377:145;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "407:4377:145:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3368:401:182;;;;;;:::i;:::-;;:::i;:::-;;2018:93:146;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;918:14:281;;911:22;893:41;;881:2;866:18;2018:93:146;;;;;;;;1826:107;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;3805:85:182:-;;;:::i;4539:163::-;;;;;;:::i;:::-;4671:7;;4642:1;:10;;;;;;;;4671:14;;;4670:24;;4539:163;4416:87;4489:7;;4416:87;;;2258:25:281;;;2246:2;2231:18;4416:87:182;2112:177:281;2064:101:24;;;:::i;1964:47:182:-;;;;;;;;-1:-1:-1;;;;;2483:32:281;;;2465:51;;2453:2;2438:18;1964:47:182;2294:228:281;1441:85:24;1513:6;;-1:-1:-1;;;;;1513:6:24;1441:85;;1920:1721:145;;;;;;:::i;:::-;;:::i;4434:348::-;;;;;;:::i;:::-;;:::i;3681:636::-;;;;;;:::i;:::-;;:::i;1343:159::-;;;;;;:::i;:::-;;:::i;589:170:146:-;;658:101;589:170;;1039:188:145;;;;;;:::i;:::-;;:::i;320:163:146:-;;389:94;320:163;;863:185;;940:108;863:185;;1481:46;;;;;1542:205:145;;;;;;:::i;:::-;1716:10;1696:31;;;;:19;:31;;;;;;;;:37;;;;;;;:44;;-1:-1:-1;;1696:44:145;1736:4;1696:44;;;1542:205;2314:198:24;;;;;;:::i;:::-;;:::i;1614:405:181:-;;;:::i;3926:454:182:-;;;;;;:::i;:::-;;:::i;3368:401::-;2398:35;;-1:-1:-1;;;2398:35:182;;2422:10;2398:35;;;2465:51:281;2398:14:182;-1:-1:-1;;;;;2398:23:182;;;;2438:18:281;;2398:35:182;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2390:58;;;;-1:-1:-1;;;2390:58:182;;;;;;;;;;;;3482:7:::1;::::0;3631:37;;::::1;3630:62:::0;::::1;3622:97;;;;-1:-1:-1::0;;;3622:97:182::1;;;;;;;;;;;;3729:33;3746:15;3729:16;:33::i;:::-;3442:327;3368:401:::0;:::o;3805:85::-;2398:35;;-1:-1:-1;;;2398:35:182;;2422:10;2398:35;;;2465:51:281;2398:14:182;-1:-1:-1;;;;;2398:23:182;;;;2438:18:281;;2398:35:182;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2390:58;;;;-1:-1:-1;;;2390:58:182;;;;;;;;;;;;3855:28:::1;-1:-1:-1::0;;3855:16:182::1;:28::i;:::-;3805:85::o:0;2064:101:24:-;1334:13;:11;:13::i;:::-;2128:30:::1;2155:1;2128:18;:30::i;1920:1721:145:-:0;4671:7:182;;1210:1:146;;4642::182;4671:14;;;4670:24;3059:42;;;;-1:-1:-1;;;3059:42:182;;;;;;;;;;;;2291:40:145::1;2266:10;2248:29;::::0;;;:17:::1;:29;::::0;;;;;;;-1:-1:-1;;;;;2248:39:145;::::1;::::0;;;;;;;;::::1;;::::0;:83;::::1;;;;;;:::i;:::-;::::0;2227:160:::1;;;;-1:-1:-1::0;;;2227:160:145::1;;;;;;;;;;;;-1:-1:-1::0;;;;;2484:29:145;::::1;;::::0;;;:19:::1;:29;::::0;;;;;;;2514:22;;::::1;::::0;2484:53;;;;;;;;::::1;;2483:54;2475:76;;;;-1:-1:-1::0;;;2475:76:145::1;;;;;;;;;;;;2625:31;::::0;-1:-1:-1;;;2625:31:145;;-1:-1:-1;;;;;2483:32:281;;;2625:31:145::1;::::0;::::1;2465:51:281::0;2625:10:145::1;:21;::::0;::::1;::::0;2438:18:281;;2625:31:145::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2617:77;;;;-1:-1:-1::0;;;2617:77:145::1;;;;;;;;;;;;2814:418;2862:8;2900:223;2971:8;3002:10;3036:17;:22;;;3084:17;:24;;;2900:42;:223::i;:::-;3148:27:::0;;3197:24:::1;::::0;::::1;::::0;2814:25:::1;:418::i;:::-;-1:-1:-1::0;;;;;3323:29:145;::::1;;::::0;;;:19:::1;:29;::::0;;;;;;;3353:22;;::::1;::::0;3323:53;;;;;;;:60;;3379:4:::1;-1:-1:-1::0;;3323:60:145;;::::1;::::0;::::1;::::0;;;3454:10:::1;3436:29:::0;;;:17:::1;:29:::0;;;;;:39;;;;;;;;;;:82;;;;::::1;::::0;::::1;::::0;;;3534:100;3454:10;;3323:29;3534:100:::1;::::0;::::1;::::0;3379:4;3534:100:::1;:::i;:::-;;;;;;;;1920:1721:::0;;;:::o;4434:348::-;4689:75;;;389:94:146;4689:75:145;;;7883:25:281;-1:-1:-1;;;;;7944:32:281;;;7924:18;;;7917:60;;;;8013:32;;;7993:18;;;7986:60;8062:18;;;8055:34;;;8105:19;;;8098:35;;;4615:7:145;;4641:134;;7855:19:281;;4689:75:145;;;;;;;;;;;;4679:86;;;;;;4641:24;:134::i;:::-;4634:141;4434:348;-1:-1:-1;;;;;4434:348:145:o;3681:636::-;4671:7:182;;1210:1:146;;4642::182;4671:14;;;4670:24;3059:42;;;;-1:-1:-1;;;3059:42:182;;;;;;;;;;;;3961:40:145::1;3936:10;3918:29;::::0;;;:17:::1;:29;::::0;;;;;;;-1:-1:-1;;;;;3918:39:145;::::1;::::0;;;;;;;;::::1;;::::0;:83;::::1;;;;;;:::i;:::-;;3897:156;;;;-1:-1:-1::0;;;3897:156:145::1;;;;;;;;;;;;4126:10;4150:42;4108:29:::0;;;:17:::1;:29;::::0;;;;;;;-1:-1:-1;;;;;4108:39:145;::::1;::::0;;;;;;;;:84;;-1:-1:-1;;4108:84:145::1;::::0;;4208:102;4108:39;;4208:102:::1;::::0;::::1;::::0;4150:42;4208:102:::1;:::i;:::-;;;;;;;;3681:636:::0;;:::o;1343:159::-;1471:10;-1:-1:-1;;;;;1449:46:145;;1483:11;;1449:46;;;;;;;:::i;:::-;;;;;;;;1343:159;;:::o;1039:188::-;3279:19:30;3302:13;;;;;;3301:14;;3347:34;;;;-1:-1:-1;3365:12:30;;3380:1;3365:12;;;;:16;3347:34;3346:108;;;-1:-1:-1;3426:4:30;1713:19:38;:23;;;3387:66:30;;-1:-1:-1;3436:12:30;;;;;:17;3387:66;3325:201;;;;-1:-1:-1;;;3325:201:30;;8741:2:281;3325:201:30;;;8723:21:281;8780:2;8760:18;;;8753:30;8819:34;8799:18;;;8792:62;-1:-1:-1;;;8870:18:281;;;8863:44;8924:19;;3325:201:30;;;;;;;;;3536:12;:16;;-1:-1:-1;;3536:16:30;3551:1;3536:16;;;3562:65;;;;3596:13;:20;;-1:-1:-1;;3596:20:30;;;;;3562:65;1141:37:145::1;1158:19;1141:16;:37::i;:::-;1188:32;1207:12;1188:18;:32::i;:::-;3651:14:30::0;3647:99;;;3697:5;3681:21;;-1:-1:-1;;3681:21:30;;;3721:14;;-1:-1:-1;9106:36:281;;3721:14:30;;9094:2:281;9079:18;3721:14:30;;;;;;;3647:99;3269:483;1039:188:145;;:::o;2314:198:24:-;1334:13;:11;:13::i;:::-;-1:-1:-1;;;;;2402:22:24;::::1;2394:73;;;::::0;-1:-1:-1;;;2394:73:24;;9355:2:281;2394:73:24::1;::::0;::::1;9337:21:281::0;9394:2;9374:18;;;9367:30;9433:34;9413:18;;;9406:62;-1:-1:-1;;;9484:18:281;;;9477:36;9530:19;;2394:73:24::1;9153:402:281::0;2394:73:24::1;2477:28;2496:8;2477:18;:28::i;:::-;2314:198:::0;:::o;1614:405:181:-;1670:7;1753:17;1736:13;:34;:276;;-1:-1:-1;2373:19:181;;;;;;;;;;;-1:-1:-1;;;2373:19:181;;;;;2286:197;;602:80;2286:197;;;10805:25:281;2363:30:181;10846:18:281;;;10839:34;2416:13:181;10889:18:281;;;10882:34;2460:4:181;10932:18:281;;;;10925:60;;;;2286:197:181;;;;;;;;;;10777:19:281;;;;2286:197:181;;;2259:238;;;;;;1614:405::o;1736:276::-;-1:-1:-1;1867:25:181;;1614:405::o;3926:454:182:-;2620:14;-1:-1:-1;;;;;2620:23:182;;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2606:39:182;:10;-1:-1:-1;;;;;2606:39:182;;2598:64;;;;-1:-1:-1;;;2598:64:182;;;;;;;;;;;;4044:7:::1;::::0;4238:20;::::1;4215:16:::0;::::1;4189:43:::0;::::1;4188:71;4180:106;;;;-1:-1:-1::0;;;4180:106:182::1;;;;;;;;;;;;4296:7;:25:::0;;;4336:37:::1;::::0;2258:25:281;;;4345:10:182::1;::::0;4336:37:::1;::::0;2246:2:281;2231:18;4336:37:182::1;2112:177:281::0;4806:157:182;4887:7;:22;;;4924:32;;2258:25:281;;;4931:10:182;;4924:32;;2246:2:281;2231:18;4924:32:182;;;;;;;4806:157;:::o;1599:130:24:-;1513:6;;-1:-1:-1;;;;;1513:6:24;929:10:39;1662:23:24;1654:68;;;;-1:-1:-1;;;1654:68:24;;10018:2:281;1654:68:24;;;10000:21:281;;;10037:18;;;10030:30;10096:34;10076:18;;;10069:62;10148:18;;1654:68:24;9816:356:281;2666:187:24;2758:6;;;-1:-1:-1;;;;;2774:17:24;;;-1:-1:-1;;;;;;2774:17:24;;;;;;;2806:40;;2758:6;;;2774:17;2758:6;;2806:40;;2739:16;;2806:40;2729:124;2666:187;:::o;2843:330:181:-;3038:15;3028:6;:25;;3020:54;;;;-1:-1:-1;;;3020:54:181;;;;;;;;;;;;3092:53;-1:-1:-1;;;;;3092:26:181;;3119:14;3135:9;3092:26;:53::i;:::-;3084:82;;;;-1:-1:-1;;;3084:82:181;;;;;;;;;;;;2843:330;;;;:::o;2575:182::-;2660:7;2725:17;:15;:17::i;:::-;2696:53;;-1:-1:-1;;;2696:53:181;;;10435:27:281;10478:11;;;10471:27;;;;10514:12;;;10507:28;;;10551:12;;2696:53:181;;;;;;;;;;;;2686:64;;;;;;2679:71;;2575:182;;;:::o;1047:399:44:-;1153:4;1170:17;1189:35;1228:44;1256:4;1262:9;1228:27;:44::i;:::-;1169:103;;-1:-1:-1;1169:103:44;-1:-1:-1;1311:37:44;1302:5;:46;;;;;;;;:::i;:::-;;:69;;;;;1365:6;-1:-1:-1;;;;;1352:19:44;:9;-1:-1:-1;;;;;1352:19:44;;1302:69;1301:138;;;;1388:51;1415:6;1423:4;1429:9;1388:26;:51::i;:::-;1282:157;1047:399;-1:-1:-1;;;;;;1047:399:44:o;2167:730:42:-;2248:7;2257:12;2285:9;:16;2305:2;2285:22;2281:610;;2621:4;2606:20;;2600:27;2670:4;2655:20;;2649:27;2727:4;2712:20;;2706:27;2323:9;2698:36;2768:25;2779:4;2698:36;2600:27;2649;2768:10;:25::i;:::-;2761:32;;;;;;;;;2281:610;-1:-1:-1;2840:1:42;;-1:-1:-1;2844:35:42;2281:610;2167:730;;;;;:::o;1852:495:44:-;1995:4;2012:12;2026:19;2049:6;-1:-1:-1;;;;;2049:17:44;2103:45;;;2150:4;2156:9;2080:86;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;2080:86:44;;;;;;;;;;;;;;-1:-1:-1;;;;;2080:86:44;-1:-1:-1;;;;;;2080:86:44;;;;;;;;;;2049:127;;;;2080:86;2049:127;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2011:165;;;;2194:7;:42;;;;;2234:2;2217:6;:13;:19;;2194:42;:145;;;;-1:-1:-1;2252:29:44;;-1:-1:-1;;;2293:45:44;2252:29;;;;;;;;;;;;:::i;:::-;:87;;1852:495;-1:-1:-1;;;;;;1852:495:44:o;5031:1456:42:-;5119:7;;6043:66;6030:79;;6026:161;;;-1:-1:-1;6141:1:42;;-1:-1:-1;6145:30:42;6125:51;;6026:161;6298:24;;;6281:14;6298:24;;;;;;;;;12210:25:281;;;12283:4;12271:17;;12251:18;;;12244:45;;;;12305:18;;;12298:34;;;12348:18;;;12341:34;;;6298:24:42;;12182:19:281;;6298:24:42;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6298:24:42;;-1:-1:-1;;6298:24:42;;;-1:-1:-1;;;;;;;6336:20:42;;6332:101;;6388:1;6392:29;6372:50;;;;;;;6332:101;6451:6;-1:-1:-1;6459:20:42;;-1:-1:-1;5031:1456:42;;;;;;;;:::o;14:226:281:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;187:23:281;;14:226;-1:-1:-1;14:226:281:o;245:131::-;-1:-1:-1;;;;;320:31:281;;310:42;;300:70;;366:1;363;356:12;381:367;449:6;457;510:2;498:9;489:7;485:23;481:32;478:52;;;526:1;523;516:12;478:52;565:9;552:23;584:31;609:5;584:31;:::i;:::-;634:5;712:2;697:18;;;;684:32;;-1:-1:-1;;;381:367:281:o;945:388::-;1013:6;1021;1074:2;1062:9;1053:7;1049:23;1045:32;1042:52;;;1090:1;1087;1080:12;1042:52;1129:9;1116:23;1148:31;1173:5;1148:31;:::i;:::-;1198:5;-1:-1:-1;1255:2:281;1240:18;;1227:32;1268:33;1227:32;1268:33;:::i;:::-;1320:7;1310:17;;;945:388;;;;;:::o;1338:127::-;1399:10;1394:3;1390:20;1387:1;1380:31;1430:4;1427:1;1420:15;1454:4;1451:1;1444:15;1470:363;1637:2;1622:18;;1670:1;1659:13;;1649:144;;1715:10;1710:3;1706:20;1703:1;1696:31;1750:4;1747:1;1740:15;1778:4;1775:1;1768:15;1649:144;1802:25;;;1470:363;:::o;1838:269::-;1895:6;1948:2;1936:9;1927:7;1923:23;1919:32;1916:52;;;1964:1;1961;1954:12;1916:52;2003:9;1990:23;2053:4;2046:5;2042:16;2035:5;2032:27;2022:55;;2073:1;2070;2063:12;2022:55;2096:5;1838:269;-1:-1:-1;;;1838:269:281:o;2735:127::-;2796:10;2791:3;2787:20;2784:1;2777:31;2827:4;2824:1;2817:15;2851:4;2848:1;2841:15;2867:253;2939:2;2933:9;2981:4;2969:17;;3016:18;3001:34;;3037:22;;;2998:62;2995:88;;;3063:18;;:::i;:::-;3099:2;3092:22;2867:253;:::o;3125:275::-;3196:2;3190:9;3261:2;3242:13;;-1:-1:-1;;3238:27:281;3226:40;;3296:18;3281:34;;3317:22;;;3278:62;3275:88;;;3343:18;;:::i;:::-;3379:2;3372:22;3125:275;;-1:-1:-1;3125:275:281:o;3405:1433::-;3518:6;3526;3579:2;3567:9;3558:7;3554:23;3550:32;3547:52;;;3595:1;3592;3585:12;3547:52;3634:9;3621:23;3653:31;3678:5;3653:31;:::i;:::-;3703:5;-1:-1:-1;3759:2:281;3744:18;;3731:32;3786:18;3775:30;;3772:50;;;3818:1;3815;3808:12;3772:50;3841:22;;3897:4;3879:16;;;3875:27;3872:47;;;3915:1;3912;3905:12;3872:47;3943:22;;:::i;:::-;4003:2;3990:16;4031:18;4021:8;4018:32;4015:52;;;4063:1;4060;4053:12;4015:52;4086:17;;4134:4;4126:13;;4122:27;-1:-1:-1;4112:55:281;;4163:1;4160;4153:12;4112:55;4203:2;4190:16;4229:18;4221:6;4218:30;4215:56;;;4251:18;;:::i;:::-;4293:57;4340:2;4317:17;;-1:-1:-1;;4313:31:281;4346:2;4309:40;4293:57;:::i;:::-;4373:6;4366:5;4359:21;4421:7;4416:2;4407:6;4403:2;4399:15;4395:24;4392:37;4389:57;;;4442:1;4439;4432:12;4389:57;4497:6;4492:2;4488;4484:11;4479:2;4472:5;4468:14;4455:49;4549:1;4544:2;4524:18;;;4520:27;;4513:38;4560:22;;4640:11;;;4627:25;4668:16;;;4661:33;-1:-1:-1;4760:2:281;4752:11;;;4739:25;4780:16;;;4773:33;;;;3405:1433;;4560:22;;-1:-1:-1;3405:1433:281;;-1:-1:-1;;3405:1433:281:o;4843:629::-;4929:6;4937;4945;4953;5006:3;4994:9;4985:7;4981:23;4977:33;4974:53;;;5023:1;5020;5013:12;4974:53;5062:9;5049:23;5081:31;5106:5;5081:31;:::i;:::-;5131:5;-1:-1:-1;5188:2:281;5173:18;;5160:32;5201:33;5160:32;5201:33;:::i;:::-;4843:629;;5253:7;;-1:-1:-1;;;;5333:2:281;5318:18;;5305:32;;5436:2;5421:18;5408:32;;4843:629::o;5659:247::-;5718:6;5771:2;5759:9;5750:7;5746:23;5742:32;5739:52;;;5787:1;5784;5777:12;5739:52;5826:9;5813:23;5845:31;5870:5;5845:31;:::i;5911:587::-;5982:6;5990;6043:2;6031:9;6022:7;6018:23;6014:32;6011:52;;;6059:1;6056;6049:12;6011:52;6099:9;6086:23;6132:18;6124:6;6121:30;6118:50;;;6164:1;6161;6154:12;6118:50;6187:22;;6240:4;6232:13;;6228:27;-1:-1:-1;6218:55:281;;6269:1;6266;6259:12;6218:55;6309:2;6296:16;6335:18;6327:6;6324:30;6321:50;;;6367:1;6364;6357:12;6321:50;6412:7;6407:2;6398:6;6394:2;6390:15;6386:24;6383:37;6380:57;;;6433:1;6430;6423:12;6380:57;6464:2;6456:11;;;;;6486:6;;-1:-1:-1;5911:587:281;-1:-1:-1;;;5911:587:281:o;7342:277::-;7409:6;7462:2;7450:9;7441:7;7437:23;7433:32;7430:52;;;7478:1;7475;7468:12;7430:52;7510:9;7504:16;7563:5;7556:13;7549:21;7542:5;7539:32;7529:60;;7585:1;7582;7575:12;8144:390;8303:2;8292:9;8285:21;8342:6;8337:2;8326:9;8322:18;8315:34;8399:6;8391;8386:2;8375:9;8371:18;8358:48;8455:1;8426:22;;;8450:2;8422:31;;;8415:42;;;;8518:2;8497:15;;;-1:-1:-1;;8493:29:281;8478:45;8474:54;;8144:390;-1:-1:-1;8144:390:281:o;9560:251::-;9630:6;9683:2;9671:9;9662:7;9658:23;9654:32;9651:52;;;9699:1;9696;9689:12;9651:52;9731:9;9725:16;9750:31;9775:5;9750:31;:::i;10996:487::-;11171:6;11160:9;11153:25;11214:2;11209;11198:9;11194:18;11187:30;11134:4;11246:6;11240:13;11289:6;11284:2;11273:9;11269:18;11262:34;11348:6;11343:2;11335:6;11331:15;11326:2;11315:9;11311:18;11305:50;11404:1;11399:2;11390:6;11379:9;11375:22;11371:31;11364:42;11474:2;11467;11463:7;11458:2;11450:6;11446:15;11442:29;11431:9;11427:45;11423:54;11415:62;;;10996:487;;;;;:::o;11488:301::-;11617:3;11655:6;11649:13;11701:6;11694:4;11686:6;11682:17;11677:3;11671:37;11763:1;11727:16;;11752:13;;;-1:-1:-1;11727:16:281;11488:301;-1:-1:-1;11488:301:281:o;11794:184::-;11864:6;11917:2;11905:9;11896:7;11892:23;11888:32;11885:52;;;11933:1;11930;11923:12;11885:52;-1:-1:-1;11956:16:281;;11794:184;-1:-1:-1;11794:184:281:o",
    "linkReferences": {},
    "immutableReferences": {
      "85342": [
        {
          "start": 832,
          "length": 32
        },
        {
          "start": 1597,
          "length": 32
        }
      ],
      "100302": [
        {
          "start": 2746,
          "length": 32
        }
      ],
      "100305": [
        {
          "start": 2938,
          "length": 32
        }
      ],
      "100435": [
        {
          "start": 540,
          "length": 32
        },
        {
          "start": 984,
          "length": 32
        },
        {
          "start": 1197,
          "length": 32
        },
        {
          "start": 2974,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "OPERATOR_AVS_REGISTRATION_TYPEHASH()": "d79aceab",
    "OPERATOR_SET_FORCE_DEREGISTRATION_TYPEHASH()": "dce974b9",
    "OPERATOR_SET_REGISTRATION_TYPEHASH()": "c825fe68",
    "avsOperatorStatus(address,address)": "49075da3",
    "calculateOperatorAVSRegistrationDigestHash(address,address,bytes32,uint256)": "a1060c88",
    "cancelSalt(bytes32)": "ec76f442",
    "delegation()": "df5cf723",
    "deregisterOperatorFromAVS(address)": "a364f4da",
    "domainSeparator()": "f698da25",
    "initialize(address,uint256)": "cd6dc687",
    "operatorSaltIsSpent(address,bytes32)": "374823b5",
    "owner()": "8da5cb5b",
    "pause(uint256)": "136439dd",
    "pauseAll()": "595c6a67",
    "paused()": "5c975abb",
    "paused(uint8)": "5ac86ab7",
    "pauserRegistry()": "886f1195",
    "registerOperatorToAVS(address,(bytes,bytes32,uint256))": "9926ee7d",
    "renounceOwnership()": "715018a6",
    "transferOwnership(address)": "f2fde38b",
    "unpause(uint256)": "fabc1cbc",
    "updateAVSMetadataURI(string)": "a98fb355"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IDelegationManager\",\"name\":\"_delegation\",\"type\":\"address\"},{\"internalType\":\"contract IPauserRegistry\",\"name\":\"_pauserRegistry\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"CurrentlyPaused\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InputAddressZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidNewPausedStatus\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSignature\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyPauser\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyUnpauser\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OperatorAlreadyRegisteredToAVS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OperatorNotRegisteredToAVS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OperatorNotRegisteredToEigenLayer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SaltSpent\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SignatureExpired\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"}],\"name\":\"AVSMetadataURIUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"enum IAVSDirectoryTypes.OperatorAVSRegistrationStatus\",\"name\":\"status\",\"type\":\"uint8\"}],\"name\":\"OperatorAVSRegistrationStatusUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newPausedStatus\",\"type\":\"uint256\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newPausedStatus\",\"type\":\"uint256\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"OPERATOR_AVS_REGISTRATION_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"OPERATOR_SET_FORCE_DEREGISTRATION_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"OPERATOR_SET_REGISTRATION_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"avsOperatorStatus\",\"outputs\":[{\"internalType\":\"enum IAVSDirectoryTypes.OperatorAVSRegistrationStatus\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"name\":\"calculateOperatorAVSRegistrationDigestHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"name\":\"cancelSalt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"delegation\",\"outputs\":[{\"internalType\":\"contract IDelegationManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"deregisterOperatorFromAVS\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"domainSeparator\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"initialPausedStatus\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"name\":\"operatorSaltIsSpent\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isSpent\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newPausedStatus\",\"type\":\"uint256\"}],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauseAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"index\",\"type\":\"uint8\"}],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauserRegistry\",\"outputs\":[{\"internalType\":\"contract IPauserRegistry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureUtils.SignatureWithSaltAndExpiry\",\"name\":\"operatorSignature\",\"type\":\"tuple\"}],\"name\":\"registerOperatorToAVS\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newPausedStatus\",\"type\":\"uint256\"}],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"}],\"name\":\"updateAVSMetadataURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"CurrentlyPaused()\":[{\"details\":\"Thrown when currently paused.\"}],\"InputAddressZero()\":[{\"details\":\"Thrown when a null address input is provided.\"}],\"InvalidNewPausedStatus()\":[{\"details\":\"Thrown when invalid `newPausedStatus` is provided.\"}],\"OnlyPauser()\":[{\"details\":\"Thrown when caller is not pauser.\"}],\"OnlyUnpauser()\":[{\"details\":\"Thrown when caller is not unpauser.\"}],\"OperatorAlreadyRegisteredToAVS()\":[{\"details\":\"Thrown when `operator` is already registered to the AVS.\"}],\"OperatorNotRegisteredToAVS()\":[{\"details\":\"Thrown when an operator is already registered to an AVS.\"}],\"OperatorNotRegisteredToEigenLayer()\":[{\"details\":\"Thrown when an operator does not exist in the DelegationManager\"}],\"SaltSpent()\":[{\"details\":\"Thrown when attempting to spend a spent eip-712 salt.\"}]},\"events\":{\"AVSMetadataURIUpdated(address,string)\":{\"details\":\"The URI is never stored; it is simply emitted through an event for off-chain indexing.\"},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"calculateOperatorAVSRegistrationDigestHash(address,address,bytes32,uint256)\":{\"params\":{\"avs\":\"The AVS the operator is registering with.\",\"expiry\":\"The time after which the approver's signature becomes invalid.\",\"operator\":\"The account registering as an operator.\",\"salt\":\"A unique and single-use value associated with the approver's signature.\"}},\"cancelSalt(bytes32)\":{\"params\":{\"salt\":\"A unique and single use value associated with the approver signature.\"}},\"constructor\":{\"details\":\"Initializes the immutable addresses of the strategy mananger, delegationManager, and eigenpodManager contracts\"},\"deregisterOperatorFromAVS(address)\":{\"details\":\"Only used by legacy M2 AVSs that have not integrated with operator sets.\",\"params\":{\"operator\":\"The address of the operator to deregister.\"}},\"domainSeparator()\":{\"details\":\"The domain separator will change in the event of a fork that changes the ChainID.By introducing a domain separator the DApp developers are guaranteed that there can be no signature collision. for more detailed information please read EIP-712.Use `_calculateDomainSeparator` rather than using this function.\"},\"initialize(address,uint256)\":{\"details\":\"Initializes the addresses of the initial owner and paused status.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pause(uint256)\":{\"details\":\"This function can only pause functionality, and thus cannot 'unflip' any bit in `_paused` from 1 to 0.\",\"params\":{\"newPausedStatus\":\"represents the new value for `_paused` to take, which means it may flip several bits at once.\"}},\"registerOperatorToAVS(address,(bytes,bytes32,uint256))\":{\"details\":\"msg.sender must be the AVS.Only used by legacy M2 AVSs that have not integrated with operator sets.\",\"params\":{\"operator\":\"The address of the operator to register.\",\"operatorSignature\":\"The signature, salt, and expiry of the operator's signature.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"unpause(uint256)\":{\"details\":\"This function can only unpause functionality, and thus cannot 'flip' any bit in `_paused` from 0 to 1.\",\"params\":{\"newPausedStatus\":\"represents the new value for `_paused` to take, which means it may flip several bits at once.\"}},\"updateAVSMetadataURI(string)\":{\"details\":\"Note that the `metadataURI` is *never stored* and is only emitted in the `AVSMetadataURIUpdated` event.\",\"params\":{\"metadataURI\":\"The URI for metadata associated with an AVS.\"}}},\"version\":1},\"userdoc\":{\"events\":{\"AVSMetadataURIUpdated(address,string)\":{\"notice\":\"Emitted when an AVS updates their metadata URI (Uniform Resource Identifier).\"},\"OperatorAVSRegistrationStatusUpdated(address,address,uint8)\":{\"notice\":\"Emitted when an operator's registration status with an AVS id udpatedOnly used by legacy M2 AVSs that have not integrated with operatorSets.\"},\"Paused(address,uint256)\":{\"notice\":\"Emitted when the pause is triggered by `account`, and changed to `newPausedStatus`.\"},\"Unpaused(address,uint256)\":{\"notice\":\"Emitted when the pause is lifted by `account`, and changed to `newPausedStatus`.\"}},\"kind\":\"user\",\"methods\":{\"OPERATOR_AVS_REGISTRATION_TYPEHASH()\":{\"notice\":\"The EIP-712 typehash for the `Registration` struct used by the contract\"},\"OPERATOR_SET_FORCE_DEREGISTRATION_TYPEHASH()\":{\"notice\":\"The EIP-712 typehash for the `OperatorSetMembership` struct used by the contract\"},\"OPERATOR_SET_REGISTRATION_TYPEHASH()\":{\"notice\":\"The EIP-712 typehash for the `OperatorSetRegistration` struct used by the contract\"},\"avsOperatorStatus(address,address)\":{\"notice\":\"Returns the registration status of each `operator` for a given `avs`.\"},\"calculateOperatorAVSRegistrationDigestHash(address,address,bytes32,uint256)\":{\"notice\":\"Calculates the digest hash to be signed by an operator to register with an AVS.\"},\"cancelSalt(bytes32)\":{\"notice\":\"Called by an operator to cancel a salt that has been used to register with an AVS.\"},\"delegation()\":{\"notice\":\"The DelegationManager contract for EigenLayer\"},\"deregisterOperatorFromAVS(address)\":{\"notice\":\"Legacy function called by an AVS to deregister an operator from the AVS. NOTE: this function will be deprecated in a future release after the slashing release. New AVSs integrating should use `deregisterOperatorFromOperatorSets` instead.\"},\"domainSeparator()\":{\"notice\":\"Returns the current EIP-712 domain separator for this contract.\"},\"operatorSaltIsSpent(address,bytes32)\":{\"notice\":\"Returns whether a `salt` has been used by a given `operator`.\"},\"pause(uint256)\":{\"notice\":\"This function is used to pause an EigenLayer contract's functionality. It is permissioned to the `pauser` address, which is expected to be a low threshold multisig.\"},\"pauseAll()\":{\"notice\":\"Alias for `pause(type(uint256).max)`.\"},\"paused()\":{\"notice\":\"Returns the current paused status as a uint256.\"},\"paused(uint8)\":{\"notice\":\"Returns 'true' if the `indexed`th bit of `_paused` is 1, and 'false' otherwise\"},\"pauserRegistry()\":{\"notice\":\"Address of the `PauserRegistry` contract that this contract defers to for determining access control (for pausing).\"},\"registerOperatorToAVS(address,(bytes,bytes32,uint256))\":{\"notice\":\"Legacy function called by the AVS's service manager contract to register an operator with the AVS. NOTE: this function will be deprecated in a future release after the slashing release. New AVSs should use `registerForOperatorSets` instead.\"},\"unpause(uint256)\":{\"notice\":\"This function is used to unpause an EigenLayer contract's functionality. It is permissioned to the `unpauser` address, which is expected to be a high threshold multisig or governance contract.\"},\"updateAVSMetadataURI(string)\":{\"notice\":\"Called by an AVS to emit an `AVSMetadataURIUpdated` event indicating the information has updated.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/contracts/core/AVSDirectory.sol\":\"AVSDirectory\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin-upgrades/=lib/openzeppelin-contracts-upgradeable-v4.9.0/\",\":@openzeppelin/=lib/openzeppelin-contracts-v4.9.0/\",\":ds-test/=lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable-v4.9.0/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable-v4.9.0/=lib/openzeppelin-contracts-upgradeable-v4.9.0/\",\":openzeppelin-contracts-v4.9.0/=lib/openzeppelin-contracts-v4.9.0/\",\":openzeppelin/=lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/\",\":zeus-templates/=lib/zeus-templates/src/\"]},\"sources\":{\"lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x4075622496acc77fd6d4de4cc30a8577a744d5c75afad33fdeacf1704d6eda98\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://99c8cb3cd19a44bbfb6612605affb7d8b06cee1f6aa9362a37a8672b4f7eeaf8\",\"dweb:/ipfs/QmasyxFDBUp7k5KFgfDWEzM8PYSKEq7GVznzMJ1VxVRF4B\"]},\"lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/interfaces/IERC1271Upgradeable.sol\":{\"keccak256\":\"0x4473c09c087ee1a48c5547b23799c0474b2e08cde6fec5921c628171c4ebcdc0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d92614db0b346b756af8ba9bd0098db81b031026361635fb4f55a420254637d\",\"dweb:/ipfs/QmVviVD57zX54ny1zvVsksfYF9RantBwVyJBTdHqPywFuP\"]},\"lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/security/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0xb82ef33f43b6b96109687d91b39c94573fdccaaa423fe28e8ba0977b31c023e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec9c629f63e66379f9c868a74f971064701cc6e30583872aa653f8b932518025\",\"dweb:/ipfs/QmY4MnZF2VMFwJkAwpdQwxEWA3KcGbNBKEmAVYePMVQWUR\"]},\"lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0xb96dc79b65b7c37937919dcdb356a969ce0aa2e8338322bf4dc027a3c9c9a7eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f8613145881436fc0480fff22da4868d611e2b0c0c3da083334eb4362ce1945a\",\"dweb:/ipfs/QmPqpP3YeRbBdTJRe6Gv2eGsUaANf4J6RwTNRW36iYahfV\"]},\"lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/cryptography/ECDSAUpgradeable.sol\":{\"keccak256\":\"0xa014f65d84b02827055d99993ccdbfb4b56b2c9e91eb278d82a93330659d06e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://50a7e716a74f3d48a7f549086faa94afcd58b9f18ac8e9f74af4571f3a1d8d5c\",\"dweb:/ipfs/QmTkDNWkq5o9Cv2jS7s6JvSmsPBkeunZhPe7Z2njGL31wo\"]},\"lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/cryptography/SignatureCheckerUpgradeable.sol\":{\"keccak256\":\"0x7c3cbce7cec023937ebbae16ca73e569979b4d63bbcd471f0db6b17d5fc6d1df\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4cc5c84a415a35e3c7ddac82bb3970508921a0ed4ebd14061f13986821b5cb6b\",\"dweb:/ipfs/QmZChGnVgcSWgGazTakqcmkHQq8bn1LDyG3b67Fh9fLbed\"]},\"lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0x2bc0007987c229ae7624eb29be6a9b84f6a6a5872f76248b15208b131ea41c4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b2835c737d073ef8b82a4cc246495a9740f43e7ff2cf130906b2449ff9bfb91\",\"dweb:/ipfs/QmSCWfNoSvvTN57ic7o1RW6NqSxxGAqbBTnLKc7QHe27qB\"]},\"lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/math/SafeCastUpgradeable.sol\":{\"keccak256\":\"0xcef50f95b43b038aa40aed25b62fc45906c681a5c1d504a4fdcf3bc6330a8d4b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef883699a00970d5469e502514e2854704cd53d7a49825078aa807a2f056315c\",\"dweb:/ipfs/QmRjpN9oxgw6zHCVjfWNB9MzaYpNPPgqu7Rrwqwabmhpis\"]},\"lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/math/SignedMathUpgradeable.sol\":{\"keccak256\":\"0x88f6b7bba3ee33eeb741f9a0f5bc98b6e6e352d0fe4905377bb328590f84095a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88ace2d60f265752f18903d839910be4e4e104340b2957678585b812447825d4\",\"dweb:/ipfs/QmXFkNxMc3AAGzhs2wUEZyErWQjsvoTGyYjuU5oZkFki5Z\"]},\"lib/openzeppelin-contracts-v4.9.0/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"lib/openzeppelin-contracts-v4.9.0/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"src/contracts/core/AVSDirectory.sol\":{\"keccak256\":\"0xd226f8234a00740e532b1d3d70790be2046ab4a5fe75ff9f1d1d45cd91a96e4f\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://c8cfe95ba02edf23d087d9b2ea2c8395778a35a8fac90faffcc5767f24283946\",\"dweb:/ipfs/QmPbDHCxjqDz3NmZnNDm5A9S84ovvaRzFYvw6CudfaGwzR\"]},\"src/contracts/core/AVSDirectoryStorage.sol\":{\"keccak256\":\"0x61efc5730d414347d207f2a5aec646d0d95696292804fe635825c22fe7d734e3\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://4db3d5a169abdce739045443354259e9cb6eae51b192042a81edea080354250a\",\"dweb:/ipfs/QmPHw4Ze84QwonZJ1q1buxW2AoHUQVEFh3fX5AEbjGvuqL\"]},\"src/contracts/interfaces/IAVSDirectory.sol\":{\"keccak256\":\"0x569fe9a3c56b730d11bd359231c96f2f4e0b4eabd3d5a3b2bbba789a473e2bc8\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://94ed1d615914a886896cd694240c7bd87aa87396f81a85203db6b384b5a54e6d\",\"dweb:/ipfs/QmQYFc94Xsm9LsoVwtczVvwBWBo6njgdM9DwUHe4qTPR5L\"]},\"src/contracts/interfaces/IDelegationManager.sol\":{\"keccak256\":\"0x95093989fb52a3544c2296c8da36223247cab1cf4e788af25f9b4ec482c4526f\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://f5e15fd4da8e17789a8cd2162d70b8a878d8e412442214a25eb01229f4635cbe\",\"dweb:/ipfs/QmRzPvMhmX9FBt1oLZCjNutGZpy4YRg9TU9nVgVMEqhKut\"]},\"src/contracts/interfaces/IPausable.sol\":{\"keccak256\":\"0x0404f1db44005929899e00dcc50d553175951ff26c215c87215bbd92b4ebfde3\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://cdb88bff60663f3418d271c7db93c2867d767e31ec592690e7b2e1f1ba1589e8\",\"dweb:/ipfs/QmQfsZCiEqWYEFopZB5LvL9pq47Qba9EeMzeZcHN2e9ypc\"]},\"src/contracts/interfaces/IPauserRegistry.sol\":{\"keccak256\":\"0x705c371129ac08b9b035c1c1a1572a5e3a61b48dda8b7d8d974a7bfb88ecb7fc\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://bdb894c26fcf1b83024d006b0573663286e50d857c5dea89a9149552a971da72\",\"dweb:/ipfs/QmdqWnSPmeF9mV96uWMSN8AhVi64U818GRwFEqr6dP3UMD\"]},\"src/contracts/interfaces/ISignatureUtils.sol\":{\"keccak256\":\"0x5164971b2648837bc100798df3633080b0f8076692a5c900f6b1aacc342241de\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://2b1676f5d44cf9680c12e56b569ed876ca3038ee266c3a6c37dddf9cb2b3d87b\",\"dweb:/ipfs/QmVp4JbR9SYHDaBjfGfTh1gqoiKf2rhwV78kRPSHhjddcq\"]},\"src/contracts/interfaces/IStrategy.sol\":{\"keccak256\":\"0x601384e7910d2edcbaf58e4480261d0c11996256e810736377f37844bea3cac3\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://dcfec053867cd3a4454d7c9f07d8a7c74abbae12aed45524c8bf40e8cf8e57d4\",\"dweb:/ipfs/QmbXGprDnnsvDyMcEkfZPAb5QBnzbJdnRjutfRLuPeh8V8\"]},\"src/contracts/libraries/SlashingLib.sol\":{\"keccak256\":\"0xb5bfa03e58ee71e8672bf93c2c8f4067950f8fb61f4c5a699efbd00f96317401\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://c7569fab9522bc239e3954b36f6000b7767a319ae05ad44831ebca51515103b5\",\"dweb:/ipfs/QmSnBpbagyoj3FRLDMvtoo7NiNNo6du2D5oiQZE4zeTJpZ\"]},\"src/contracts/mixins/SignatureUtils.sol\":{\"keccak256\":\"0xc16924b26c2a7de57ec981b68df679ef674bdffd25c0d22f453f4321218ee69d\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://e5afbe7222eb7207db013e9cb172d6cbb90fa8e1153f6fd72617226401d7c5c1\",\"dweb:/ipfs/QmRqsgv2CsvSbwHxWKYinLMzjk3E79czAnF3QrwEuSv7As\"]},\"src/contracts/permissions/Pausable.sol\":{\"keccak256\":\"0xd9e0b8239183be72b9ef8157aa43c15620f1e99854f79be4e6d8db57b9e61666\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://e4ec5135765bf89125f1eb9c1c187ba9fd8a7c460e5dd1788c41e84f13f611cd\",\"dweb:/ipfs/QmcHtkMKos4hdmpStEnqvwviKFuNArTdzafFjSa9okCFNh\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.27+commit.40a35a09"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract IDelegationManager",
              "name": "_delegation",
              "type": "address"
            },
            {
              "internalType": "contract IPauserRegistry",
              "name": "_pauserRegistry",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CurrentlyPaused"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InputAddressZero"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidNewPausedStatus"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidSignature"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OnlyPauser"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OnlyUnpauser"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OperatorAlreadyRegisteredToAVS"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OperatorNotRegisteredToAVS"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OperatorNotRegisteredToEigenLayer"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SaltSpent"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SignatureExpired"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "avs",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "string",
              "name": "metadataURI",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AVSMetadataURIUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "avs",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "enum IAVSDirectoryTypes.OperatorAVSRegistrationStatus",
              "name": "status",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "OperatorAVSRegistrationStatusUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "newPausedStatus",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Paused",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "newPausedStatus",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Unpaused",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "OPERATOR_AVS_REGISTRATION_TYPEHASH",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "OPERATOR_SET_FORCE_DEREGISTRATION_TYPEHASH",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "OPERATOR_SET_REGISTRATION_TYPEHASH",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "avs",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "avsOperatorStatus",
          "outputs": [
            {
              "internalType": "enum IAVSDirectoryTypes.OperatorAVSRegistrationStatus",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "avs",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "salt",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "expiry",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "calculateOperatorAVSRegistrationDigestHash",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "salt",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "cancelSalt"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "delegation",
          "outputs": [
            {
              "internalType": "contract IDelegationManager",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deregisterOperatorFromAVS"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "domainSeparator",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "initialOwner",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "initialPausedStatus",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "salt",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "operatorSaltIsSpent",
          "outputs": [
            {
              "internalType": "bool",
              "name": "isSpent",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "newPausedStatus",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "pause"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "pauseAll"
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "index",
              "type": "uint8"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "paused",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "paused",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "pauserRegistry",
          "outputs": [
            {
              "internalType": "contract IPauserRegistry",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "struct ISignatureUtils.SignatureWithSaltAndExpiry",
              "name": "operatorSignature",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes32",
                  "name": "salt",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "expiry",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "registerOperatorToAVS"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "newPausedStatus",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unpause"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "metadataURI",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateAVSMetadataURI"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "calculateOperatorAVSRegistrationDigestHash(address,address,bytes32,uint256)": {
            "params": {
              "avs": "The AVS the operator is registering with.",
              "expiry": "The time after which the approver's signature becomes invalid.",
              "operator": "The account registering as an operator.",
              "salt": "A unique and single-use value associated with the approver's signature."
            }
          },
          "cancelSalt(bytes32)": {
            "params": {
              "salt": "A unique and single use value associated with the approver signature."
            }
          },
          "constructor": {
            "details": "Initializes the immutable addresses of the strategy mananger, delegationManager, and eigenpodManager contracts"
          },
          "deregisterOperatorFromAVS(address)": {
            "details": "Only used by legacy M2 AVSs that have not integrated with operator sets.",
            "params": {
              "operator": "The address of the operator to deregister."
            }
          },
          "domainSeparator()": {
            "details": "The domain separator will change in the event of a fork that changes the ChainID.By introducing a domain separator the DApp developers are guaranteed that there can be no signature collision. for more detailed information please read EIP-712.Use `_calculateDomainSeparator` rather than using this function."
          },
          "initialize(address,uint256)": {
            "details": "Initializes the addresses of the initial owner and paused status."
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "pause(uint256)": {
            "details": "This function can only pause functionality, and thus cannot 'unflip' any bit in `_paused` from 1 to 0.",
            "params": {
              "newPausedStatus": "represents the new value for `_paused` to take, which means it may flip several bits at once."
            }
          },
          "registerOperatorToAVS(address,(bytes,bytes32,uint256))": {
            "details": "msg.sender must be the AVS.Only used by legacy M2 AVSs that have not integrated with operator sets.",
            "params": {
              "operator": "The address of the operator to register.",
              "operatorSignature": "The signature, salt, and expiry of the operator's signature."
            }
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          },
          "unpause(uint256)": {
            "details": "This function can only unpause functionality, and thus cannot 'flip' any bit in `_paused` from 0 to 1.",
            "params": {
              "newPausedStatus": "represents the new value for `_paused` to take, which means it may flip several bits at once."
            }
          },
          "updateAVSMetadataURI(string)": {
            "details": "Note that the `metadataURI` is *never stored* and is only emitted in the `AVSMetadataURIUpdated` event.",
            "params": {
              "metadataURI": "The URI for metadata associated with an AVS."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "OPERATOR_AVS_REGISTRATION_TYPEHASH()": {
            "notice": "The EIP-712 typehash for the `Registration` struct used by the contract"
          },
          "OPERATOR_SET_FORCE_DEREGISTRATION_TYPEHASH()": {
            "notice": "The EIP-712 typehash for the `OperatorSetMembership` struct used by the contract"
          },
          "OPERATOR_SET_REGISTRATION_TYPEHASH()": {
            "notice": "The EIP-712 typehash for the `OperatorSetRegistration` struct used by the contract"
          },
          "avsOperatorStatus(address,address)": {
            "notice": "Returns the registration status of each `operator` for a given `avs`."
          },
          "calculateOperatorAVSRegistrationDigestHash(address,address,bytes32,uint256)": {
            "notice": "Calculates the digest hash to be signed by an operator to register with an AVS."
          },
          "cancelSalt(bytes32)": {
            "notice": "Called by an operator to cancel a salt that has been used to register with an AVS."
          },
          "delegation()": {
            "notice": "The DelegationManager contract for EigenLayer"
          },
          "deregisterOperatorFromAVS(address)": {
            "notice": "Legacy function called by an AVS to deregister an operator from the AVS. NOTE: this function will be deprecated in a future release after the slashing release. New AVSs integrating should use `deregisterOperatorFromOperatorSets` instead."
          },
          "domainSeparator()": {
            "notice": "Returns the current EIP-712 domain separator for this contract."
          },
          "operatorSaltIsSpent(address,bytes32)": {
            "notice": "Returns whether a `salt` has been used by a given `operator`."
          },
          "pause(uint256)": {
            "notice": "This function is used to pause an EigenLayer contract's functionality. It is permissioned to the `pauser` address, which is expected to be a low threshold multisig."
          },
          "pauseAll()": {
            "notice": "Alias for `pause(type(uint256).max)`."
          },
          "paused()": {
            "notice": "Returns the current paused status as a uint256."
          },
          "paused(uint8)": {
            "notice": "Returns 'true' if the `indexed`th bit of `_paused` is 1, and 'false' otherwise"
          },
          "pauserRegistry()": {
            "notice": "Address of the `PauserRegistry` contract that this contract defers to for determining access control (for pausing)."
          },
          "registerOperatorToAVS(address,(bytes,bytes32,uint256))": {
            "notice": "Legacy function called by the AVS's service manager contract to register an operator with the AVS. NOTE: this function will be deprecated in a future release after the slashing release. New AVSs should use `registerForOperatorSets` instead."
          },
          "unpause(uint256)": {
            "notice": "This function is used to unpause an EigenLayer contract's functionality. It is permissioned to the `unpauser` address, which is expected to be a high threshold multisig or governance contract."
          },
          "updateAVSMetadataURI(string)": {
            "notice": "Called by an AVS to emit an `AVSMetadataURIUpdated` event indicating the information has updated."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin-upgrades/=lib/openzeppelin-contracts-upgradeable-v4.9.0/",
        "@openzeppelin/=lib/openzeppelin-contracts-v4.9.0/",
        "ds-test/=lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts-upgradeable-v4.9.0/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable-v4.9.0/=lib/openzeppelin-contracts-upgradeable-v4.9.0/",
        "openzeppelin-contracts-v4.9.0/=lib/openzeppelin-contracts-v4.9.0/",
        "openzeppelin/=lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/",
        "zeus-templates/=lib/zeus-templates/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/contracts/core/AVSDirectory.sol": "AVSDirectory"
      },
      "evmVersion": "cancun",
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/access/OwnableUpgradeable.sol": {
        "keccak256": "0x4075622496acc77fd6d4de4cc30a8577a744d5c75afad33fdeacf1704d6eda98",
        "urls": [
          "bzz-raw://99c8cb3cd19a44bbfb6612605affb7d8b06cee1f6aa9362a37a8672b4f7eeaf8",
          "dweb:/ipfs/QmasyxFDBUp7k5KFgfDWEzM8PYSKEq7GVznzMJ1VxVRF4B"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/interfaces/IERC1271Upgradeable.sol": {
        "keccak256": "0x4473c09c087ee1a48c5547b23799c0474b2e08cde6fec5921c628171c4ebcdc0",
        "urls": [
          "bzz-raw://6d92614db0b346b756af8ba9bd0098db81b031026361635fb4f55a420254637d",
          "dweb:/ipfs/QmVviVD57zX54ny1zvVsksfYF9RantBwVyJBTdHqPywFuP"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794",
        "urls": [
          "bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e",
          "dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/security/ReentrancyGuardUpgradeable.sol": {
        "keccak256": "0xb82ef33f43b6b96109687d91b39c94573fdccaaa423fe28e8ba0977b31c023e0",
        "urls": [
          "bzz-raw://ec9c629f63e66379f9c868a74f971064701cc6e30583872aa653f8b932518025",
          "dweb:/ipfs/QmY4MnZF2VMFwJkAwpdQwxEWA3KcGbNBKEmAVYePMVQWUR"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422",
        "urls": [
          "bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b",
          "dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/StringsUpgradeable.sol": {
        "keccak256": "0xb96dc79b65b7c37937919dcdb356a969ce0aa2e8338322bf4dc027a3c9c9a7eb",
        "urls": [
          "bzz-raw://f8613145881436fc0480fff22da4868d611e2b0c0c3da083334eb4362ce1945a",
          "dweb:/ipfs/QmPqpP3YeRbBdTJRe6Gv2eGsUaANf4J6RwTNRW36iYahfV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/cryptography/ECDSAUpgradeable.sol": {
        "keccak256": "0xa014f65d84b02827055d99993ccdbfb4b56b2c9e91eb278d82a93330659d06e4",
        "urls": [
          "bzz-raw://50a7e716a74f3d48a7f549086faa94afcd58b9f18ac8e9f74af4571f3a1d8d5c",
          "dweb:/ipfs/QmTkDNWkq5o9Cv2jS7s6JvSmsPBkeunZhPe7Z2njGL31wo"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/cryptography/SignatureCheckerUpgradeable.sol": {
        "keccak256": "0x7c3cbce7cec023937ebbae16ca73e569979b4d63bbcd471f0db6b17d5fc6d1df",
        "urls": [
          "bzz-raw://4cc5c84a415a35e3c7ddac82bb3970508921a0ed4ebd14061f13986821b5cb6b",
          "dweb:/ipfs/QmZChGnVgcSWgGazTakqcmkHQq8bn1LDyG3b67Fh9fLbed"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/math/MathUpgradeable.sol": {
        "keccak256": "0x2bc0007987c229ae7624eb29be6a9b84f6a6a5872f76248b15208b131ea41c4e",
        "urls": [
          "bzz-raw://2b2835c737d073ef8b82a4cc246495a9740f43e7ff2cf130906b2449ff9bfb91",
          "dweb:/ipfs/QmSCWfNoSvvTN57ic7o1RW6NqSxxGAqbBTnLKc7QHe27qB"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/math/SafeCastUpgradeable.sol": {
        "keccak256": "0xcef50f95b43b038aa40aed25b62fc45906c681a5c1d504a4fdcf3bc6330a8d4b",
        "urls": [
          "bzz-raw://ef883699a00970d5469e502514e2854704cd53d7a49825078aa807a2f056315c",
          "dweb:/ipfs/QmRjpN9oxgw6zHCVjfWNB9MzaYpNPPgqu7Rrwqwabmhpis"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/math/SignedMathUpgradeable.sol": {
        "keccak256": "0x88f6b7bba3ee33eeb741f9a0f5bc98b6e6e352d0fe4905377bb328590f84095a",
        "urls": [
          "bzz-raw://88ace2d60f265752f18903d839910be4e4e104340b2957678585b812447825d4",
          "dweb:/ipfs/QmXFkNxMc3AAGzhs2wUEZyErWQjsvoTGyYjuU5oZkFki5Z"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-v4.9.0/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
        "urls": [
          "bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
          "dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-v4.9.0/contracts/utils/math/Math.sol": {
        "keccak256": "0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3",
        "urls": [
          "bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c",
          "dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS"
        ],
        "license": "MIT"
      },
      "src/contracts/core/AVSDirectory.sol": {
        "keccak256": "0xd226f8234a00740e532b1d3d70790be2046ab4a5fe75ff9f1d1d45cd91a96e4f",
        "urls": [
          "bzz-raw://c8cfe95ba02edf23d087d9b2ea2c8395778a35a8fac90faffcc5767f24283946",
          "dweb:/ipfs/QmPbDHCxjqDz3NmZnNDm5A9S84ovvaRzFYvw6CudfaGwzR"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/core/AVSDirectoryStorage.sol": {
        "keccak256": "0x61efc5730d414347d207f2a5aec646d0d95696292804fe635825c22fe7d734e3",
        "urls": [
          "bzz-raw://4db3d5a169abdce739045443354259e9cb6eae51b192042a81edea080354250a",
          "dweb:/ipfs/QmPHw4Ze84QwonZJ1q1buxW2AoHUQVEFh3fX5AEbjGvuqL"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/IAVSDirectory.sol": {
        "keccak256": "0x569fe9a3c56b730d11bd359231c96f2f4e0b4eabd3d5a3b2bbba789a473e2bc8",
        "urls": [
          "bzz-raw://94ed1d615914a886896cd694240c7bd87aa87396f81a85203db6b384b5a54e6d",
          "dweb:/ipfs/QmQYFc94Xsm9LsoVwtczVvwBWBo6njgdM9DwUHe4qTPR5L"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/IDelegationManager.sol": {
        "keccak256": "0x95093989fb52a3544c2296c8da36223247cab1cf4e788af25f9b4ec482c4526f",
        "urls": [
          "bzz-raw://f5e15fd4da8e17789a8cd2162d70b8a878d8e412442214a25eb01229f4635cbe",
          "dweb:/ipfs/QmRzPvMhmX9FBt1oLZCjNutGZpy4YRg9TU9nVgVMEqhKut"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/IPausable.sol": {
        "keccak256": "0x0404f1db44005929899e00dcc50d553175951ff26c215c87215bbd92b4ebfde3",
        "urls": [
          "bzz-raw://cdb88bff60663f3418d271c7db93c2867d767e31ec592690e7b2e1f1ba1589e8",
          "dweb:/ipfs/QmQfsZCiEqWYEFopZB5LvL9pq47Qba9EeMzeZcHN2e9ypc"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/IPauserRegistry.sol": {
        "keccak256": "0x705c371129ac08b9b035c1c1a1572a5e3a61b48dda8b7d8d974a7bfb88ecb7fc",
        "urls": [
          "bzz-raw://bdb894c26fcf1b83024d006b0573663286e50d857c5dea89a9149552a971da72",
          "dweb:/ipfs/QmdqWnSPmeF9mV96uWMSN8AhVi64U818GRwFEqr6dP3UMD"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/ISignatureUtils.sol": {
        "keccak256": "0x5164971b2648837bc100798df3633080b0f8076692a5c900f6b1aacc342241de",
        "urls": [
          "bzz-raw://2b1676f5d44cf9680c12e56b569ed876ca3038ee266c3a6c37dddf9cb2b3d87b",
          "dweb:/ipfs/QmVp4JbR9SYHDaBjfGfTh1gqoiKf2rhwV78kRPSHhjddcq"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/IStrategy.sol": {
        "keccak256": "0x601384e7910d2edcbaf58e4480261d0c11996256e810736377f37844bea3cac3",
        "urls": [
          "bzz-raw://dcfec053867cd3a4454d7c9f07d8a7c74abbae12aed45524c8bf40e8cf8e57d4",
          "dweb:/ipfs/QmbXGprDnnsvDyMcEkfZPAb5QBnzbJdnRjutfRLuPeh8V8"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/libraries/SlashingLib.sol": {
        "keccak256": "0xb5bfa03e58ee71e8672bf93c2c8f4067950f8fb61f4c5a699efbd00f96317401",
        "urls": [
          "bzz-raw://c7569fab9522bc239e3954b36f6000b7767a319ae05ad44831ebca51515103b5",
          "dweb:/ipfs/QmSnBpbagyoj3FRLDMvtoo7NiNNo6du2D5oiQZE4zeTJpZ"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/mixins/SignatureUtils.sol": {
        "keccak256": "0xc16924b26c2a7de57ec981b68df679ef674bdffd25c0d22f453f4321218ee69d",
        "urls": [
          "bzz-raw://e5afbe7222eb7207db013e9cb172d6cbb90fa8e1153f6fd72617226401d7c5c1",
          "dweb:/ipfs/QmRqsgv2CsvSbwHxWKYinLMzjk3E79czAnF3QrwEuSv7As"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/permissions/Pausable.sol": {
        "keccak256": "0xd9e0b8239183be72b9ef8157aa43c15620f1e99854f79be4e6d8db57b9e61666",
        "urls": [
          "bzz-raw://e4ec5135765bf89125f1eb9c1c187ba9fd8a7c460e5dd1788c41e84f13f611cd",
          "dweb:/ipfs/QmcHtkMKos4hdmpStEnqvwviKFuNArTdzafFjSa9okCFNh"
        ],
        "license": "BUSL-1.1"
      }
    },
    "version": 1
  },
  "id": 145
}