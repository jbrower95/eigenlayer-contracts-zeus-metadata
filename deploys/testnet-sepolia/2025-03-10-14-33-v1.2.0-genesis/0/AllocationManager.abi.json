{
  "abi": [
    {
      "type": "constructor",
      "inputs": [
        {
          "name": "_delegation",
          "type": "address",
          "internalType": "contract IDelegationManager"
        },
        {
          "name": "_pauserRegistry",
          "type": "address",
          "internalType": "contract IPauserRegistry"
        },
        {
          "name": "_permissionController",
          "type": "address",
          "internalType": "contract IPermissionController"
        },
        {
          "name": "_DEALLOCATION_DELAY",
          "type": "uint32",
          "internalType": "uint32"
        },
        {
          "name": "_ALLOCATION_CONFIGURATION_DELAY",
          "type": "uint32",
          "internalType": "uint32"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "ALLOCATION_CONFIGURATION_DELAY",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint32",
          "internalType": "uint32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "DEALLOCATION_DELAY",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint32",
          "internalType": "uint32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "addStrategiesToOperatorSet",
      "inputs": [
        {
          "name": "avs",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "operatorSetId",
          "type": "uint32",
          "internalType": "uint32"
        },
        {
          "name": "strategies",
          "type": "address[]",
          "internalType": "contract IStrategy[]"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "clearDeallocationQueue",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "strategies",
          "type": "address[]",
          "internalType": "contract IStrategy[]"
        },
        {
          "name": "numToClear",
          "type": "uint16[]",
          "internalType": "uint16[]"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "createOperatorSets",
      "inputs": [
        {
          "name": "avs",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "params",
          "type": "tuple[]",
          "internalType": "struct IAllocationManagerTypes.CreateSetParams[]",
          "components": [
            {
              "name": "operatorSetId",
              "type": "uint32",
              "internalType": "uint32"
            },
            {
              "name": "strategies",
              "type": "address[]",
              "internalType": "contract IStrategy[]"
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "delegation",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract IDelegationManager"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "deregisterFromOperatorSets",
      "inputs": [
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct IAllocationManagerTypes.DeregisterParams",
          "components": [
            {
              "name": "operator",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "operatorSetIds",
              "type": "uint32[]",
              "internalType": "uint32[]"
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "encumberedMagnitude",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "strategy",
          "type": "address",
          "internalType": "contract IStrategy"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint64",
          "internalType": "uint64"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getAVSRegistrar",
      "inputs": [
        {
          "name": "avs",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract IAVSRegistrar"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getAllocatableMagnitude",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "strategy",
          "type": "address",
          "internalType": "contract IStrategy"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint64",
          "internalType": "uint64"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getAllocatedSets",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "tuple[]",
          "internalType": "struct OperatorSet[]",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getAllocatedStrategies",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "operatorSet",
          "type": "tuple",
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "address[]",
          "internalType": "contract IStrategy[]"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getAllocation",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "operatorSet",
          "type": "tuple",
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        },
        {
          "name": "strategy",
          "type": "address",
          "internalType": "contract IStrategy"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct IAllocationManagerTypes.Allocation",
          "components": [
            {
              "name": "currentMagnitude",
              "type": "uint64",
              "internalType": "uint64"
            },
            {
              "name": "pendingDiff",
              "type": "int128",
              "internalType": "int128"
            },
            {
              "name": "effectBlock",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getAllocationDelay",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        },
        {
          "name": "",
          "type": "uint32",
          "internalType": "uint32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getAllocations",
      "inputs": [
        {
          "name": "operators",
          "type": "address[]",
          "internalType": "address[]"
        },
        {
          "name": "operatorSet",
          "type": "tuple",
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        },
        {
          "name": "strategy",
          "type": "address",
          "internalType": "contract IStrategy"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "tuple[]",
          "internalType": "struct IAllocationManagerTypes.Allocation[]",
          "components": [
            {
              "name": "currentMagnitude",
              "type": "uint64",
              "internalType": "uint64"
            },
            {
              "name": "pendingDiff",
              "type": "int128",
              "internalType": "int128"
            },
            {
              "name": "effectBlock",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getMaxMagnitude",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "strategy",
          "type": "address",
          "internalType": "contract IStrategy"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint64",
          "internalType": "uint64"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getMaxMagnitudes",
      "inputs": [
        {
          "name": "operators",
          "type": "address[]",
          "internalType": "address[]"
        },
        {
          "name": "strategy",
          "type": "address",
          "internalType": "contract IStrategy"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint64[]",
          "internalType": "uint64[]"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getMaxMagnitudes",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "strategies",
          "type": "address[]",
          "internalType": "contract IStrategy[]"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint64[]",
          "internalType": "uint64[]"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getMaxMagnitudesAtBlock",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "strategies",
          "type": "address[]",
          "internalType": "contract IStrategy[]"
        },
        {
          "name": "blockNumber",
          "type": "uint32",
          "internalType": "uint32"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint64[]",
          "internalType": "uint64[]"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getMemberCount",
      "inputs": [
        {
          "name": "operatorSet",
          "type": "tuple",
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getMembers",
      "inputs": [
        {
          "name": "operatorSet",
          "type": "tuple",
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "address[]",
          "internalType": "address[]"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getMinimumSlashableStake",
      "inputs": [
        {
          "name": "operatorSet",
          "type": "tuple",
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        },
        {
          "name": "operators",
          "type": "address[]",
          "internalType": "address[]"
        },
        {
          "name": "strategies",
          "type": "address[]",
          "internalType": "contract IStrategy[]"
        },
        {
          "name": "futureBlock",
          "type": "uint32",
          "internalType": "uint32"
        }
      ],
      "outputs": [
        {
          "name": "slashableStake",
          "type": "uint256[][]",
          "internalType": "uint256[][]"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getOperatorSetCount",
      "inputs": [
        {
          "name": "avs",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getRegisteredSets",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "tuple[]",
          "internalType": "struct OperatorSet[]",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getStrategiesInOperatorSet",
      "inputs": [
        {
          "name": "operatorSet",
          "type": "tuple",
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "address[]",
          "internalType": "contract IStrategy[]"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getStrategyAllocations",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "strategy",
          "type": "address",
          "internalType": "contract IStrategy"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "tuple[]",
          "internalType": "struct OperatorSet[]",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        },
        {
          "name": "",
          "type": "tuple[]",
          "internalType": "struct IAllocationManagerTypes.Allocation[]",
          "components": [
            {
              "name": "currentMagnitude",
              "type": "uint64",
              "internalType": "uint64"
            },
            {
              "name": "pendingDiff",
              "type": "int128",
              "internalType": "int128"
            },
            {
              "name": "effectBlock",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "initialize",
      "inputs": [
        {
          "name": "initialOwner",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "initialPausedStatus",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "isMemberOfOperatorSet",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "operatorSet",
          "type": "tuple",
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isOperatorSet",
      "inputs": [
        {
          "name": "operatorSet",
          "type": "tuple",
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "modifyAllocations",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "params",
          "type": "tuple[]",
          "internalType": "struct IAllocationManagerTypes.AllocateParams[]",
          "components": [
            {
              "name": "operatorSet",
              "type": "tuple",
              "internalType": "struct OperatorSet",
              "components": [
                {
                  "name": "avs",
                  "type": "address",
                  "internalType": "address"
                },
                {
                  "name": "id",
                  "type": "uint32",
                  "internalType": "uint32"
                }
              ]
            },
            {
              "name": "strategies",
              "type": "address[]",
              "internalType": "contract IStrategy[]"
            },
            {
              "name": "newMagnitudes",
              "type": "uint64[]",
              "internalType": "uint64[]"
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "owner",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "pause",
      "inputs": [
        {
          "name": "newPausedStatus",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "pauseAll",
      "inputs": [],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "paused",
      "inputs": [
        {
          "name": "index",
          "type": "uint8",
          "internalType": "uint8"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "paused",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "pauserRegistry",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract IPauserRegistry"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "permissionController",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract IPermissionController"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "registerForOperatorSets",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct IAllocationManagerTypes.RegisterParams",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "operatorSetIds",
              "type": "uint32[]",
              "internalType": "uint32[]"
            },
            {
              "name": "data",
              "type": "bytes",
              "internalType": "bytes"
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "removeStrategiesFromOperatorSet",
      "inputs": [
        {
          "name": "avs",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "operatorSetId",
          "type": "uint32",
          "internalType": "uint32"
        },
        {
          "name": "strategies",
          "type": "address[]",
          "internalType": "contract IStrategy[]"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "renounceOwnership",
      "inputs": [],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setAVSRegistrar",
      "inputs": [
        {
          "name": "avs",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "registrar",
          "type": "address",
          "internalType": "contract IAVSRegistrar"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setAllocationDelay",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "delay",
          "type": "uint32",
          "internalType": "uint32"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "slashOperator",
      "inputs": [
        {
          "name": "avs",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct IAllocationManagerTypes.SlashingParams",
          "components": [
            {
              "name": "operator",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "operatorSetId",
              "type": "uint32",
              "internalType": "uint32"
            },
            {
              "name": "strategies",
              "type": "address[]",
              "internalType": "contract IStrategy[]"
            },
            {
              "name": "wadsToSlash",
              "type": "uint256[]",
              "internalType": "uint256[]"
            },
            {
              "name": "description",
              "type": "string",
              "internalType": "string"
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "transferOwnership",
      "inputs": [
        {
          "name": "newOwner",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "unpause",
      "inputs": [
        {
          "name": "newPausedStatus",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "updateAVSMetadataURI",
      "inputs": [
        {
          "name": "avs",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "metadataURI",
          "type": "string",
          "internalType": "string"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "event",
      "name": "AVSMetadataURIUpdated",
      "inputs": [
        {
          "name": "avs",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "metadataURI",
          "type": "string",
          "indexed": false,
          "internalType": "string"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "AVSRegistrarSet",
      "inputs": [
        {
          "name": "avs",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        },
        {
          "name": "registrar",
          "type": "address",
          "indexed": false,
          "internalType": "contract IAVSRegistrar"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "AllocationDelaySet",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        },
        {
          "name": "delay",
          "type": "uint32",
          "indexed": false,
          "internalType": "uint32"
        },
        {
          "name": "effectBlock",
          "type": "uint32",
          "indexed": false,
          "internalType": "uint32"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "AllocationUpdated",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        },
        {
          "name": "operatorSet",
          "type": "tuple",
          "indexed": false,
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        },
        {
          "name": "strategy",
          "type": "address",
          "indexed": false,
          "internalType": "contract IStrategy"
        },
        {
          "name": "magnitude",
          "type": "uint64",
          "indexed": false,
          "internalType": "uint64"
        },
        {
          "name": "effectBlock",
          "type": "uint32",
          "indexed": false,
          "internalType": "uint32"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "EncumberedMagnitudeUpdated",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        },
        {
          "name": "strategy",
          "type": "address",
          "indexed": false,
          "internalType": "contract IStrategy"
        },
        {
          "name": "encumberedMagnitude",
          "type": "uint64",
          "indexed": false,
          "internalType": "uint64"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Initialized",
      "inputs": [
        {
          "name": "version",
          "type": "uint8",
          "indexed": false,
          "internalType": "uint8"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "MaxMagnitudeUpdated",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        },
        {
          "name": "strategy",
          "type": "address",
          "indexed": false,
          "internalType": "contract IStrategy"
        },
        {
          "name": "maxMagnitude",
          "type": "uint64",
          "indexed": false,
          "internalType": "uint64"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "OperatorAddedToOperatorSet",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "operatorSet",
          "type": "tuple",
          "indexed": false,
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "OperatorRemovedFromOperatorSet",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "operatorSet",
          "type": "tuple",
          "indexed": false,
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "OperatorSetCreated",
      "inputs": [
        {
          "name": "operatorSet",
          "type": "tuple",
          "indexed": false,
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "OperatorSlashed",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        },
        {
          "name": "operatorSet",
          "type": "tuple",
          "indexed": false,
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        },
        {
          "name": "strategies",
          "type": "address[]",
          "indexed": false,
          "internalType": "contract IStrategy[]"
        },
        {
          "name": "wadSlashed",
          "type": "uint256[]",
          "indexed": false,
          "internalType": "uint256[]"
        },
        {
          "name": "description",
          "type": "string",
          "indexed": false,
          "internalType": "string"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "OwnershipTransferred",
      "inputs": [
        {
          "name": "previousOwner",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "newOwner",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Paused",
      "inputs": [
        {
          "name": "account",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "newPausedStatus",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "StrategyAddedToOperatorSet",
      "inputs": [
        {
          "name": "operatorSet",
          "type": "tuple",
          "indexed": false,
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        },
        {
          "name": "strategy",
          "type": "address",
          "indexed": false,
          "internalType": "contract IStrategy"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "StrategyRemovedFromOperatorSet",
      "inputs": [
        {
          "name": "operatorSet",
          "type": "tuple",
          "indexed": false,
          "internalType": "struct OperatorSet",
          "components": [
            {
              "name": "avs",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "id",
              "type": "uint32",
              "internalType": "uint32"
            }
          ]
        },
        {
          "name": "strategy",
          "type": "address",
          "indexed": false,
          "internalType": "contract IStrategy"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Unpaused",
      "inputs": [
        {
          "name": "account",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "newPausedStatus",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "error",
      "name": "AlreadyMemberOfSet",
      "inputs": []
    },
    {
      "type": "error",
      "name": "CurrentlyPaused",
      "inputs": []
    },
    {
      "type": "error",
      "name": "Empty",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InputAddressZero",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InputArrayLengthMismatch",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InsufficientMagnitude",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidAVSRegistrar",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidAVSWithNoMetadataRegistered",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidCaller",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidNewPausedStatus",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidOperator",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidOperatorSet",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidPermissions",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidSnapshotOrdering",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidWadToSlash",
      "inputs": []
    },
    {
      "type": "error",
      "name": "ModificationAlreadyPending",
      "inputs": []
    },
    {
      "type": "error",
      "name": "NotMemberOfSet",
      "inputs": []
    },
    {
      "type": "error",
      "name": "OnlyPauser",
      "inputs": []
    },
    {
      "type": "error",
      "name": "OnlyUnpauser",
      "inputs": []
    },
    {
      "type": "error",
      "name": "OperatorNotSlashable",
      "inputs": []
    },
    {
      "type": "error",
      "name": "OutOfBounds",
      "inputs": []
    },
    {
      "type": "error",
      "name": "SameMagnitude",
      "inputs": []
    },
    {
      "type": "error",
      "name": "StrategiesMustBeInAscendingOrder",
      "inputs": []
    },
    {
      "type": "error",
      "name": "StrategyAlreadyInOperatorSet",
      "inputs": []
    },
    {
      "type": "error",
      "name": "StrategyNotInOperatorSet",
      "inputs": []
    },
    {
      "type": "error",
      "name": "UninitializedAllocationDelay",
      "inputs": []
    }
  ],
  "bytecode": {
    "object": "0x610120604052348015610010575f5ffd5b50604051615b9c380380615b9c83398101604081905261002f91610180565b82858383876001600160a01b03811661005b576040516339b190bb60e11b815260040160405180910390fd5b6001600160a01b0390811660805292831660a05263ffffffff91821660c0521660e052166101005261008b610095565b50505050506101e9565b5f54610100900460ff16156101005760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b5f5460ff9081161461014f575f805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b6001600160a01b0381168114610165575f5ffd5b50565b805163ffffffff8116811461017b575f5ffd5b919050565b5f5f5f5f5f60a08688031215610194575f5ffd5b855161019f81610151565b60208701519095506101b081610151565b60408701519094506101c181610151565b92506101cf60608701610168565b91506101dd60808701610168565b90509295509295909350565b60805160a05160c05160e0516101005161592261027a5f395f81816103f9015261382101525f81816105480152613e1901525f818161031e01528181612276015261297e01525f81816106fa01528181610ccf0152818161165401528181611cbb01528181611d250152612c8701525f818161056f0152818161079201528181611dca015261349801526159225ff3fe608060405234801561000f575f5ffd5b5060043610610281575f3560e01c80636e875dba11610156578063a984eb3a116100ca578063c221d8ae11610084578063c221d8ae146106bc578063cd6dc687146106cf578063d3d96ff4146106e2578063df5cf723146106f5578063f2fde38b1461071c578063fabc1cbc1461072f575f5ffd5b8063a984eb3a1461060e578063adc2e3d914610641578063b2447af714610654578063b66bd98914610667578063b9fbaed11461067a578063ba1a84e5146106a9575f5ffd5b80638ce648541161011b5780638ce64854146105915780638da5cb5b146105b157806394d7d00c146105c2578063952899ee146105d5578063a9333ec8146105e8578063a9821821146105fb575f5ffd5b80636e875dba14610515578063715018a61461052857806379ae50cd146105305780637bc1ef6114610543578063886f11951461056a575f5ffd5b80634657e26a116101f8578063595c6a67116101b2578063595c6a67146104875780635ac86ab71461048f5780635c975abb146104b2578063670d3ba2146104c45780636cfb4481146104d75780636e3492b514610502575f5ffd5b80634657e26a146103f45780634a10ffe51461041b5780634b5046ef1461043b57806350feea201461044e578063547afb871461046157806356c483e614610474575f5ffd5b80632981eb77116102495780632981eb77146103195780632bab2c4a14610355578063304c10cd1461037557806336352057146103a057806340120dab146103b35780634177a87c146103d4575f5ffd5b806310e1b9b814610285578063136439dd146102ae57806315fe5028146102c3578063260dc758146102e3578063261f84e014610306575b5f5ffd5b61029861029336600461483e565b610742565b6040516102a59190614885565b60405180910390f35b6102c16102bc3660046148b8565b61077d565b005b6102d66102d13660046148cf565b610852565b6040516102a5919061494d565b6102f66102f136600461495f565b610969565b60405190151581526020016102a5565b6102c16103143660046149b9565b6109a0565b6103407f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff90911681526020016102a5565b610368610363366004614a9e565b610c7b565b6040516102a59190614b52565b6103886103833660046148cf565b610f68565b6040516001600160a01b0390911681526020016102a5565b6102c16103ae366004614bb5565b610f97565b6103c66103c1366004614c07565b6117a9565b6040516102a5929190614c94565b6103e76103e236600461495f565b611924565b6040516102a59190614cf1565b6103887f000000000000000000000000000000000000000000000000000000000000000081565b61042e610429366004614d03565b611948565b6040516102a59190614d46565b6102c1610449366004614d91565b6119f0565b6102c161045c366004614e11565b611aaa565b61042e61046f366004614e6f565b611c08565b6102c1610482366004614ebb565b611cb0565b6102c1611db5565b6102f661049d366004614eee565b606654600160ff9092169190911b9081161490565b6066545b6040519081526020016102a5565b6102f66104d2366004614f0e565b611e64565b6104ea6104e5366004614c07565b611e75565b6040516001600160401b0390911681526020016102a5565b6102c1610510366004614f4f565b611fe2565b6103e761052336600461495f565b6123c3565b6102c16123d4565b6102d661053e3660046148cf565b6123e5565b6103407f000000000000000000000000000000000000000000000000000000000000000081565b6103887f000000000000000000000000000000000000000000000000000000000000000081565b6105a461059f366004614f80565b6124bf565b6040516102a59190614fc3565b6033546001600160a01b0316610388565b61042e6105d0366004614fd5565b612584565b6102c16105e3366004615030565b612670565b6104ea6105f6366004614c07565b612b37565b6102c16106093660046151d9565b612b66565b6104ea61061c366004614c07565b60a260209081525f92835260408084209091529082529020546001600160401b031681565b6102c161064f366004615257565b612c18565b6104b661066236600461495f565b612f75565b6102c1610675366004614e11565b612f97565b61068d6106883660046148cf565b6130f1565b60408051921515835263ffffffff9091166020830152016102a5565b6104b66106b73660046148cf565b61318b565b6103e76106ca366004614f0e565b6131ab565b6102c16106dd366004615299565b6131dc565b6102c16106f0366004614c07565b6132f9565b6103887f000000000000000000000000000000000000000000000000000000000000000081565b6102c161072a3660046148cf565b61341d565b6102c161073d3660046148b8565b613496565b604080516060810182525f80825260208201819052918101829052906107718561076b866135ac565b8561360f565b925050505b9392505050565b60405163237dfb4760e11b81523360048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906346fbf68e90602401602060405180830381865afa1580156107df573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061080391906152c3565b61082057604051631d77d47760e21b815260040160405180910390fd5b60665481811681146108455760405163c61dca5d60e01b815260040160405180910390fd5b61084e8261377b565b5050565b6001600160a01b0381165f908152609d6020526040812060609190610876906137b8565b90505f816001600160401b0381111561089157610891614762565b6040519080825280602002602001820160405280156108d557816020015b604080518082019091525f80825260208201528152602001906001900390816108af5790505b5090505f5b82811015610961576001600160a01b0385165f908152609d6020526040902061093c9061090790836137c1565b604080518082019091525f80825260208201525060408051808201909152606082901c815263ffffffff909116602082015290565b82828151811061094e5761094e6152e2565b60209081029190910101526001016108da565b509392505050565b60208082015182516001600160a01b03165f90815260989092526040822061099a9163ffffffff908116906137cc16565b92915050565b826109aa816137e3565b6109c75760405163932d94f760e01b815260040160405180910390fd5b6001600160a01b0384165f90815260a4602052604090205460ff166109ff5760405163caf9756160e01b815260040160405180910390fd5b5f5b82811015610c74575f6040518060400160405280876001600160a01b03168152602001868685818110610a3657610a366152e2565b9050602002810190610a4891906152f6565b610a56906020810190615314565b63ffffffff168152509050610aa0816020015163ffffffff1660985f896001600160a01b03166001600160a01b031681526020019081526020015f2061388d90919063ffffffff16565b610abd57604051631fb1705560e21b815260040160405180910390fd5b7f31629285ead2335ae0933f86ed2ae63321f7af77b4e6eaabc42c057880977e6c6040518060400160405280886001600160a01b03168152602001836020015163ffffffff16815250604051610b13919061532d565b60405180910390a15f610b25826135ac565b90505f5b868685818110610b3b57610b3b6152e2565b9050602002810190610b4d91906152f6565b610b5b90602081019061533b565b9050811015610c6957610bd1878786818110610b7957610b796152e2565b9050602002810190610b8b91906152f6565b610b9990602081019061533b565b83818110610ba957610ba96152e2565b9050602002016020810190610bbe91906148cf565b5f84815260996020526040902090613898565b507f7ab260fe0af193db5f4986770d831bda4ea46099dc817e8b6716dcae8af8e88b83888887818110610c0657610c066152e2565b9050602002810190610c1891906152f6565b610c2690602081019061533b565b84818110610c3657610c366152e2565b9050602002016020810190610c4b91906148cf565b604051610c59929190615380565b60405180910390a1600101610b29565b505050600101610a01565b5050505050565b606083516001600160401b03811115610c9657610c96614762565b604051908082528060200260200182016040528015610cc957816020015b6060815260200190600190039081610cb45790505b5090505f7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663f0e0e67686866040518363ffffffff1660e01b8152600401610d1b9291906153a6565b5f60405180830381865afa158015610d35573d5f5f3e3d5ffd5b505050506040513d5f823e601f3d908101601f19168201604052610d5c91908101906153ca565b90505f5b8551811015610f5e575f868281518110610d7c57610d7c6152e2565b6020026020010151905085516001600160401b03811115610d9f57610d9f614762565b604051908082528060200260200182016040528015610dc8578160200160208202803683370190505b50848381518110610ddb57610ddb6152e2565b60209081029190910101525f5b8651811015610f54575f878281518110610e0457610e046152e2565b6020908102919091018101516001600160a01b038086165f90815260a1845260408082209284168252919093528220909250610e3f906138ac565b9050806001600160401b03165f03610e58575050610f4c565b5f610e64858d85610742565b90508863ffffffff16816040015163ffffffff1611158015610e8c57505f8160200151600f0b125b15610eae57610ea2815f015182602001516138bf565b6001600160401b031681525b80515f90610ec9906001600160401b039081169085166138d3565b9050610f1081898981518110610ee157610ee16152e2565b60200260200101518781518110610efa57610efa6152e2565b60200260200101516138e790919063ffffffff16565b898881518110610f2257610f226152e2565b60200260200101518681518110610f3b57610f3b6152e2565b602002602001018181525050505050505b600101610de8565b5050600101610d60565b5050949350505050565b6001600160a01b038082165f908152609760205260408120549091168015610f905780610776565b5090919050565b606654600190600290811603610fc05760405163840a48d560e01b815260040160405180910390fd5b82610fca816137e3565b610fe75760405163932d94f760e01b815260040160405180910390fd5b5f6040518060400160405280866001600160a01b031681526020018560200160208101906110159190615314565b63ffffffff16905290505f61103661103060208701876148cf565b836138fb565b9050611045606086018661533b565b9050611054604087018761533b565b905014611074576040516343714afd60e01b815260040160405180910390fd5b60208083015183516001600160a01b03165f908152609890925260409091206110a69163ffffffff908116906137cc16565b6110c357604051631fb1705560e21b815260040160405180910390fd5b806110e15760405163ebbff49760e01b815260040160405180910390fd5b5f6110ef604087018761533b565b90506001600160401b0381111561110857611108614762565b604051908082528060200260200182016040528015611131578160200160208202803683370190505b5090505f5b611143604088018861533b565b905081101561173a578015806111d65750611161604088018861533b565b61116c6001846154ea565b81811061117b5761117b6152e2565b905060200201602081019061119091906148cf565b6001600160a01b03166111a6604089018961533b565b838181106111b6576111b66152e2565b90506020020160208101906111cb91906148cf565b6001600160a01b0316115b6111f357604051639f1c805360e01b815260040160405180910390fd5b611200606088018861533b565b82818110611210576112106152e2565b905060200201355f1080156112505750670de0b6b3a7640000611236606089018961533b565b83818110611246576112466152e2565b9050602002013511155b61126d57604051631353603160e01b815260040160405180910390fd5b6112c961127d604089018961533b565b8381811061128d5761128d6152e2565b90506020020160208101906112a291906148cf565b60995f6112ae886135ac565b81526020019081526020015f2061397190919063ffffffff16565b6112e6576040516331bc342760e11b815260040160405180910390fd5b5f806113386112f860208b018b6148cf565b611301886135ac565b61130e60408d018d61533b565b8781811061131e5761131e6152e2565b905060200201602081019061133391906148cf565b61360f565b805191935091506001600160401b03165f03611355575050611732565b5f61139061136660608c018c61533b565b86818110611376576113766152e2565b85516001600160401b031692602090910201359050613992565b83519091506113ab6001600160401b038084169083166138d3565b8686815181106113bd576113bd6152e2565b60200260200101818152505081835f018181516113da91906154fd565b6001600160401b03169052508351829085906113f79083906154fd565b6001600160401b03169052506020840180518391906114179083906154fd565b6001600160401b031690525060208301515f600f9190910b1215611532575f61147a61144660608e018e61533b565b88818110611456576114566152e2565b90506020020135856020015161146b9061551c565b6001600160801b031690613992565b9050806001600160401b0316846020018181516114979190615540565b600f0b9052507f1487af5418c47ee5ea45ef4a93398668120890774a9e13487e61e9dc3baf76dd6114cb60208e018e6148cf565b8a8e80604001906114dc919061533b565b8a8181106114ec576114ec6152e2565b905060200201602081019061150191906148cf565b611512885f015189602001516138bf565b886040015160405161152895949392919061556d565b60405180910390a1505b61158461154260208d018d6148cf565b61154b8a6135ac565b61155860408f018f61533b565b89818110611568576115686152e2565b905060200201602081019061157d91906148cf565b87876139a8565b7f1487af5418c47ee5ea45ef4a93398668120890774a9e13487e61e9dc3baf76dd6115b260208d018d6148cf565b896115c060408f018f61533b565b898181106115d0576115d06152e2565b90506020020160208101906115e591906148cf565b86516040516115f99493929190439061556d565b60405180910390a161164a61161160208d018d6148cf565b61161e60408e018e61533b565b8881811061162e5761162e6152e2565b905060200201602081019061164391906148cf565b8651613be0565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001663ee74937f61168660208e018e6148cf565b61169360408f018f61533b565b898181106116a3576116a36152e2565b90506020020160208101906116b891906148cf565b875160405160e085901b6001600160e01b03191681526001600160a01b0393841660048201529290911660248301526001600160401b0380861660448401521660648201526084015f604051808303815f87803b158015611717575f5ffd5b505af1158015611729573d5f5f3e3d5ffd5b50505050505050505b600101611136565b507f80969ad29428d6797ee7aad084f9e4a42a82fc506dcd2ca3b6fb431f85ccebe561176960208801886148cf565b8461177760408a018a61533b565b8561178560808d018d6155be565b6040516117989796959493929190615628565b60405180910390a150505050505050565b6001600160a01b0382165f908152609d6020526040812060609182916117ce906137b8565b90505f816001600160401b038111156117e9576117e9614762565b60405190808252806020026020018201604052801561182d57816020015b604080518082019091525f80825260208201528152602001906001900390816118075790505b5090505f826001600160401b0381111561184957611849614762565b60405190808252806020026020018201604052801561189257816020015b604080516060810182525f80825260208083018290529282015282525f199092019101816118675790505b5090505f5b83811015611915576001600160a01b0388165f908152609d602052604081206118c49061090790846137c1565b9050808483815181106118d9576118d96152e2565b60200260200101819052506118ef89828a610742565b838381518110611901576119016152e2565b602090810291909101015250600101611897565b509093509150505b9250929050565b60605f61077660995f611936866135ac565b81526020019081526020015f20613c62565b60605f83516001600160401b0381111561196457611964614762565b60405190808252806020026020018201604052801561198d578160200160208202803683370190505b5090505f5b8451811015610961576119be8582815181106119b0576119b06152e2565b602002602001015185612b37565b8282815181106119d0576119d06152e2565b6001600160401b0390921660209283029190910190910152600101611992565b6066545f90600190811603611a185760405163840a48d560e01b815260040160405180910390fd5b838214611a38576040516343714afd60e01b815260040160405180910390fd5b5f5b84811015611aa157611a9987878784818110611a5857611a586152e2565b9050602002016020810190611a6d91906148cf565b868685818110611a7f57611a7f6152e2565b9050602002016020810190611a9491906156be565b613c6e565b600101611a3a565b50505050505050565b83611ab4816137e3565b611ad15760405163932d94f760e01b815260040160405180910390fd5b604080518082019091526001600160a01b038616815263ffffffff851660208201525f611afd826135ac565b9050611b3e826020015163ffffffff1660985f8a6001600160a01b03166001600160a01b031681526020019081526020015f206137cc90919063ffffffff16565b611b5b57604051631fb1705560e21b815260040160405180910390fd5b5f5b84811015611bfe57611b7a868683818110610ba957610ba96152e2565b611b975760405163585cfb2f60e01b815260040160405180910390fd5b7f7ab260fe0af193db5f4986770d831bda4ea46099dc817e8b6716dcae8af8e88b83878784818110611bcb57611bcb6152e2565b9050602002016020810190611be091906148cf565b604051611bee929190615380565b60405180910390a1600101611b5d565b5050505050505050565b60605f82516001600160401b03811115611c2457611c24614762565b604051908082528060200260200182016040528015611c4d578160200160208202803683370190505b5090505f5b835181101561096157611c7e85858381518110611c7157611c716152e2565b6020026020010151612b37565b828281518110611c9057611c906152e2565b6001600160401b0390921660209283029190910190910152600101611c52565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614611dab57611ce9826137e3565b611d06576040516348f5c3ed60e01b815260040160405180910390fd5b6040516336b87bd760e11b81526001600160a01b0383811660048301527f00000000000000000000000000000000000000000000000000000000000000001690636d70f7ae90602401602060405180830381865afa158015611d6a573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611d8e91906152c3565b611dab5760405163ccea9e6f60e01b815260040160405180910390fd5b61084e8282613d72565b60405163237dfb4760e11b81523360048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906346fbf68e90602401602060405180830381865afa158015611e17573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611e3b91906152c3565b611e5857604051631d77d47760e21b815260040160405180910390fd5b611e625f1961377b565b565b5f61077683609a5f6112ae866135ac565b6001600160a01b038281165f81815260a2602090815260408083209486168084529482528083205493835260a38252808320948352939052918220546001600160401b0390911690600f81810b600160801b909204900b03825b81811015611f9f576001600160a01b038087165f90815260a3602090815260408083209389168352929052908120611f079083613f13565b6001600160a01b038881165f90815260a0602090815260408083208584528252808320938b16835292815290829020825160608101845290546001600160401b0381168252600160401b8104600f0b92820192909252600160c01b90910463ffffffff16918101829052919250431015611f82575050611f9f565b611f908582602001516138bf565b94505050806001019050611ecf565b506001600160a01b038086165f90815260a1602090815260408083209388168352929052208290611fcf906138ac565b611fd991906154fd565b95945050505050565b60665460029060049081160361200b5760405163840a48d560e01b815260040160405180910390fd5b61202061201b60208401846148cf565b6137e3565b80612039575061203961201b60408401602085016148cf565b612056576040516348f5c3ed60e01b815260040160405180910390fd5b5f5b612065604084018461533b565b9050811015612327575f604051806040016040528085602001602081019061208d91906148cf565b6001600160a01b031681526020016120a8604087018761533b565b858181106120b8576120b86152e2565b90506020020160208101906120cd9190615314565b63ffffffff16815250905061211a816020015163ffffffff1660985f8760200160208101906120fc91906148cf565b6001600160a01b0316815260208101919091526040015f20906137cc565b61213757604051631fb1705560e21b815260040160405180910390fd5b609e5f61214760208701876148cf565b6001600160a01b03166001600160a01b031681526020019081526020015f205f612170836135ac565b815260208101919091526040015f205460ff166121a0576040516325131d4f60e01b815260040160405180910390fd5b6121da6121ac826135ac565b609c5f6121bc60208901896148cf565b6001600160a01b0316815260208101919091526040015f2090613f82565b506122126121eb60208601866148cf565b609a5f6121f7856135ac565b81526020019081526020015f20613f8d90919063ffffffff16565b5061222060208501856148cf565b6001600160a01b03167fad34c3070be1dffbcaa499d000ba2b8d9848aefcac3059df245dd95c4ece14fe82604051612258919061532d565b60405180910390a2604080518082019091525f81526020810161229b7f0000000000000000000000000000000000000000000000000000000000000000436156df565b63ffffffff169052609e5f6122b360208801886148cf565b6001600160a01b03166001600160a01b031681526020019081526020015f205f6122dc846135ac565b81526020808201929092526040015f2082518154939092015163ffffffff166101000264ffffffff00199215159290921664ffffffffff199093169290921717905550600101612058565b5061233b61038360408401602085016148cf565b6001600160a01b031663303ca95661235660208501856148cf565b61236660408601602087016148cf565b612373604087018761533b565b6040518563ffffffff1660e01b81526004016123929493929190615734565b5f604051808303815f87803b1580156123a9575f5ffd5b505af11580156123bb573d5f5f3e3d5ffd5b505050505050565b606061099a609a5f611936856135ac565b6123dc613fa1565b611e625f613ffb565b6001600160a01b0381165f908152609c6020526040812060609190612409906137b8565b90505f816001600160401b0381111561242457612424614762565b60405190808252806020026020018201604052801561246857816020015b604080518082019091525f80825260208201528152602001906001900390816124425790505b5090505f5b82811015610961576001600160a01b0385165f908152609c6020526040902061249a9061090790836137c1565b8282815181106124ac576124ac6152e2565b602090810291909101015260010161246d565b60605f84516001600160401b038111156124db576124db614762565b60405190808252806020026020018201604052801561252457816020015b604080516060810182525f80825260208083018290529282015282525f199092019101816124f95790505b5090505f5b855181101561257b57612556868281518110612547576125476152e2565b60200260200101518686610742565b828281518110612568576125686152e2565b6020908102919091010152600101612529565b50949350505050565b60605f83516001600160401b038111156125a0576125a0614762565b6040519080825280602002602001820160405280156125c9578160200160208202803683370190505b5090505f5b845181101561257b576001600160a01b0386165f90815260a160205260408120865161263e92879291899086908110612609576126096152e2565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020015f2061404c90919063ffffffff16565b828281518110612650576126506152e2565b6001600160401b03909216602092830291909101909101526001016125ce565b6066545f906001908116036126985760405163840a48d560e01b815260040160405180910390fd5b6126a1836137e3565b6126be576040516348f5c3ed60e01b815260040160405180910390fd5b5f5f5f6126ca866130f1565b91509150816126ec5760405163fa55fc8160e01b815260040160405180910390fd5b91505f90505b8351811015610c745783818151811061270d5761270d6152e2565b6020026020010151604001515184828151811061272c5761272c6152e2565b6020026020010151602001515114612757576040516343714afd60e01b815260040160405180910390fd5b5f84828151811061276a5761276a6152e2565b602090810291909101810151518082015181516001600160a01b03165f908152609890935260409092209092506127aa9163ffffffff908116906137cc16565b6127c757604051631fb1705560e21b815260040160405180910390fd5b5f6127d287836138fb565b90505f5b8684815181106127e8576127e86152e2565b60200260200101516020015151811015612b2c575f87858151811061280f5761280f6152e2565b602002602001015160200151828151811061282c5761282c6152e2565b60200260200101519050612843898261ffff613c6e565b5f5f6128528b61076b886135ac565b915091508060200151600f0b5f1461287d57604051630d8fcbe360e41b815260040160405180910390fd5b5f61288a87858489614060565b90506128cf825f01518c8a815181106128a5576128a56152e2565b60200260200101516040015187815181106128c2576128c26152e2565b6020026020010151614096565b600f0b602083018190525f036128f857604051634606179360e11b815260040160405180910390fd5b5f8260200151600f0b1215612a3c5780156129be57612979612919886135ac565b6001600160a01b03808f165f90815260a360209081526040808320938a16835292905220908154600160801b90819004600f0b5f818152600180860160205260409091209390935583546001600160801b03908116939091011602179055565b6129a37f0000000000000000000000000000000000000000000000000000000000000000436156df565b6129ae9060016156df565b63ffffffff166040830152612aa9565b6129d0836020015183602001516138bf565b6001600160401b031660208401528a518b90899081106129f2576129f26152e2565b6020026020010151604001518581518110612a0f57612a0f6152e2565b6020908102919091018101516001600160401b031683525f9083015263ffffffff43166040830152612aa9565b5f8260200151600f0b1315612aa957612a5d836020015183602001516138bf565b6001600160401b039081166020850181905284519091161015612a9357604051636c9be0bf60e01b815260040160405180910390fd5b612a9d89436156df565b63ffffffff1660408301525b612abe8c612ab6896135ac565b8686866139a8565b7f1487af5418c47ee5ea45ef4a93398668120890774a9e13487e61e9dc3baf76dd8c612aec6109078a6135ac565b86612afe865f015187602001516138bf565b8660400151604051612b1495949392919061556d565b60405180910390a15050600190920191506127d69050565b5050506001016126f2565b6001600160a01b038083165f90815260a1602090815260408083209385168352929052908120610776906138ac565b82612b70816137e3565b612b8d5760405163932d94f760e01b815260040160405180910390fd5b6001600160a01b0384165f90815260a4602052604090205460ff16612bcf576001600160a01b0384165f90815260a460205260409020805460ff191660011790555b836001600160a01b03167fa89c1dc243d8908a96dd84944bcc97d6bc6ac00dd78e20621576be6a3c9437138484604051612c0a929190615760565b60405180910390a250505050565b606654600290600490811603612c415760405163840a48d560e01b815260040160405180910390fd5b82612c4b816137e3565b612c685760405163932d94f760e01b815260040160405180910390fd5b6040516336b87bd760e11b81526001600160a01b0385811660048301527f00000000000000000000000000000000000000000000000000000000000000001690636d70f7ae90602401602060405180830381865afa158015612ccc573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190612cf091906152c3565b612d0d5760405163ccea9e6f60e01b815260040160405180910390fd5b5f5b612d1c602085018561533b565b9050811015612ee457604080518082019091525f9080612d3f60208801886148cf565b6001600160a01b03168152602001868060200190612d5d919061533b565b85818110612d6d57612d6d6152e2565b9050602002016020810190612d829190615314565b63ffffffff90811690915260208083015183516001600160a01b03165f90815260989092526040909120929350612dbe9291908116906137cc16565b612ddb57604051631fb1705560e21b815260040160405180910390fd5b612de586826138fb565b15612e0357604051636c6c6e2760e11b815260040160405180910390fd5b612e2c612e0f826135ac565b6001600160a01b0388165f908152609c602052604090209061388d565b50612e5886609a5f612e3d856135ac565b81526020019081526020015f2061389890919063ffffffff16565b50856001600160a01b03167f43232edf9071753d2321e5fa7e018363ee248e5f2142e6c08edd3265bfb4895e82604051612e92919061532d565b60405180910390a26001600160a01b0386165f908152609e60205260408120600191612ebd846135ac565b815260208101919091526040015f20805460ff191691151591909117905550600101612d0f565b50612ef561038360208501856148cf565b6001600160a01b031663c63fd50285612f1160208701876148cf565b612f1e602088018861533b565b612f2b60408a018a6155be565b6040518763ffffffff1660e01b8152600401612f4c96959493929190615773565b5f604051808303815f87803b158015612f63575f5ffd5b505af1158015611bfe573d5f5f3e3d5ffd5b5f61099a609a5f612f85856135ac565b81526020019081526020015f206137b8565b83612fa1816137e3565b612fbe5760405163932d94f760e01b815260040160405180910390fd5b6040805180820182526001600160a01b03871680825263ffffffff80881660208085018290525f93845260989052939091209192612ffd92916137cc16565b61301a57604051631fb1705560e21b815260040160405180910390fd5b5f613024826135ac565b90505f5b84811015611bfe5761306d868683818110613045576130456152e2565b905060200201602081019061305a91906148cf565b5f84815260996020526040902090613f8d565b61308a576040516331bc342760e11b815260040160405180910390fd5b7f7b4b073d80dcac55a11177d8459ad9f664ceeb91f71f27167bb14f8152a7eeee838787848181106130be576130be6152e2565b90506020020160208101906130d391906148cf565b6040516130e1929190615380565b60405180910390a1600101613028565b6001600160a01b0381165f908152609b602090815260408083208151608081018352905463ffffffff80821680845260ff600160201b8404161515958401869052650100000000008304821694840194909452600160481b9091041660608201819052849391929190158015906131725750826060015163ffffffff164310155b15613181575050604081015160015b9590945092505050565b6001600160a01b0381165f90815260986020526040812061099a906137b8565b6001600160a01b0382165f908152609f60205260408120606091906131d49082611936866135ac565b949350505050565b5f54610100900460ff16158080156131fa57505f54600160ff909116105b806132135750303b15801561321357505f5460ff166001145b61327b5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b5f805460ff19166001179055801561329c575f805461ff0019166101001790555b6132a58261377b565b6132ae83613ffb565b80156132f4575f805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498906020015b60405180910390a15b505050565b81613303816137e3565b6133205760405163932d94f760e01b815260040160405180910390fd5b60405163b526578760e01b81526001600160a01b03848116600483015283169063b526578790602401602060405180830381865afa158015613364573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061338891906152c3565b6133a557604051631d0b13c160e31b815260040160405180910390fd5b6001600160a01b038381165f90815260976020526040902080546001600160a01b0319169184169190911790557f2ae945c40c44dc0ec263f95609c3fdc6952e0aefa22d6374e44f2c997acedf85836133fd81610f68565b604080516001600160a01b039384168152929091166020830152016132eb565b613425613fa1565b6001600160a01b03811661348a5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401613272565b61349381613ffb565b50565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663eab66d7a6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156134f2573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061351691906157bf565b6001600160a01b0316336001600160a01b0316146135475760405163794821ff60e01b815260040160405180910390fd5b6066548019821981161461356e5760405163c61dca5d60e01b815260040160405180910390fd5b606682905560405182815233907f3582d1828e26bf56bd801502bc021ac0bc8afb57c826e4986b45593c8fad389c9060200160405180910390a25050565b5f815f0151826020015163ffffffff166040516020016135f792919060609290921b6bffffffffffffffffffffffff1916825260a01b6001600160a01b031916601482015260200190565b60405160208183030381529060405261099a906157da565b6040805180820182525f80825260208083018290528351606081018552828152808201839052808501839052845180860186526001600160a01b03898116855260a184528685209088168552909252938220929392819061366f906138ac565b6001600160401b0390811682526001600160a01b038981165f81815260a260209081526040808320948c168084529482528083205486169682019690965291815260a082528481208b8252825284812092815291815290839020835160608101855290549283168152600160401b8304600f0b91810191909152600160c01b90910463ffffffff16918101829052919250431015613711579092509050613773565b613722815f015182602001516138bf565b6001600160401b0316815260208101515f600f9190910b121561376057613751826020015182602001516138bf565b6001600160401b031660208301525b5f60408201819052602082015290925090505b935093915050565b606681905560405181815233907fab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d9060200160405180910390a250565b5f61099a825490565b5f61077683836140ad565b5f8181526001830160205260408120541515610776565b604051631beb2b9760e31b81526001600160a01b0382811660048301523360248301523060448301525f80356001600160e01b0319166064840152917f00000000000000000000000000000000000000000000000000000000000000009091169063df595cb8906084016020604051808303815f875af1158015613869573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061099a91906152c3565b5f61077683836140d3565b5f610776836001600160a01b0384166140d3565b5f61099a82670de0b6b3a764000061411f565b5f610776826001600160401b038516615540565b5f61077683670de0b6b3a764000084614163565b5f6107768383670de0b6b3a7640000614163565b6001600160a01b0382165f908152609e6020526040812081908161391e856135ac565b815260208082019290925260409081015f2081518083019092525460ff8116151580835261010090910463ffffffff16928201929092529150806131d457506020015163ffffffff164311159392505050565b6001600160a01b0381165f9081526001830160205260408120541515610776565b5f6107768383670de0b6b3a76400006001614248565b6020808301516001600160a01b038088165f90815260a284526040808220928816825291909352909120546001600160401b03908116911614613a6e57602082810180516001600160a01b038881165f81815260a286526040808220938a1680835293875290819020805467ffffffffffffffff19166001600160401b0395861617905593518451918252948101919091529216908201527facf9095feb3a370c9cf692421c69ef320d4db5c66e6a7d29c7694eb02364fc559060600160405180910390a15b6001600160a01b038086165f90815260a060209081526040808320888452825280832093871683529281529082902083518154928501519385015163ffffffff16600160c01b0263ffffffff60c01b196001600160801b038616600160401b026001600160c01b03199095166001600160401b03909316929092179390931716919091179055600f0b15613b50576001600160a01b0385165f908152609f602090815260408083208784529091529020613b289084613898565b506001600160a01b0385165f908152609d60205260409020613b4a908561388d565b50610c74565b80516001600160401b03165f03610c74576001600160a01b0385165f908152609f602090815260408083208784529091529020613b8d9084613f8d565b506001600160a01b0385165f908152609f602090815260408083208784529091529020613bb9906137b8565b5f03610c74576001600160a01b0385165f908152609d602052604090206123bb9085613f82565b6001600160a01b038084165f90815260a160209081526040808320938616835292905220613c0f9043836142a1565b604080516001600160a01b038086168252841660208201526001600160401b038316918101919091527f1c6458079a41077d003c11faf9bf097e693bd67979e4e6500bac7b29db779b5c906060016132eb565b60605f610776836142b5565b6001600160a01b038381165f90815260a360209081526040808320938616835292905290812054600f81810b600160801b909204900b035b5f81118015613cb857508261ffff1682105b15610c74576001600160a01b038086165f90815260a3602090815260408083209388168352929052908120613cec9061430e565b90505f5f613cfb88848961360f565b91509150806040015163ffffffff16431015613d1957505050610c74565b613d2688848985856139a8565b6001600160a01b038089165f90815260a360209081526040808320938b16835292905220613d5390614360565b50613d5d856157fd565b9450613d6884615815565b9350505050613ca6565b6001600160a01b0382165f908152609b60209081526040918290208251608081018452905463ffffffff808216835260ff600160201b830416151593830193909352650100000000008104831693820193909352600160481b909204166060820181905215801590613dee5750806060015163ffffffff164310155b15613e0857604081015163ffffffff168152600160208201525b63ffffffff82166040820152613e3e7f0000000000000000000000000000000000000000000000000000000000000000436156df565b63ffffffff90811660608381019182526001600160a01b0386165f818152609b602090815260409182902087518154838a0151858b01519851928a1664ffffffffff1990921691909117600160201b91151591909102176cffffffffffffffff0000000000191665010000000000978916979097026cffffffff000000000000000000191696909617600160481b968816968702179055815192835294871694820194909452928301919091527f4e85751d6331506c6c62335f207eb31f12a61e570f34f5c17640308785c6d4db91016132eb565b5f5f613f35613f21846143dd565b8554613f309190600f0b61582a565b61444a565b8454909150600160801b9004600f90810b9082900b12613f6857604051632d0483c560e21b815260040160405180910390fd5b600f0b5f9081526001939093016020525050604090205490565b5f61077683836144b3565b5f610776836001600160a01b0384166144b3565b6033546001600160a01b03163314611e625760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401613272565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b5f6107768383670de0b6b3a7640000614596565b5f6140718460995f6112ae896135ac565b801561407a5750815b8015611fd957505090516001600160401b031615159392505050565b5f6107766001600160401b03808516908416615851565b5f825f0182815481106140c2576140c26152e2565b905f5260205f200154905092915050565b5f81815260018301602052604081205461411857508154600181810184555f84815260208082209093018490558454848252828601909352604090209190915561099a565b505f61099a565b81545f90801561415b57614145846141386001846154ea565b5f91825260209091200190565b54600160201b90046001600160e01b03166131d4565b509092915050565b5f80805f19858709858702925082811083820303915050805f0361419a578382816141905761419061587e565b0492505050610776565b8084116141e15760405162461bcd60e51b81526020600482015260156024820152744d6174683a206d756c446976206f766572666c6f7760581b6044820152606401613272565b5f8486880960026001871981018816978890046003810283188082028403028082028403028082028403028082028403028082028403029081029092039091025f889003889004909101858311909403939093029303949094049190911702949350505050565b5f5f614255868686614163565b9050600183600281111561426b5761426b615892565b14801561428757505f84806142825761428261587e565b868809115b15611fd9576142976001826158a6565b9695505050505050565b6132f483836001600160401b0384166145de565b6060815f0180548060200260200160405190810160405280929190818152602001828054801561430257602002820191905f5260205f20905b8154815260200190600101908083116142ee575b50505050509050919050565b5f6143288254600f81810b600160801b909204900b131590565b1561434657604051631ed9509560e11b815260040160405180910390fd5b508054600f0b5f9081526001909101602052604090205490565b5f61437a8254600f81810b600160801b909204900b131590565b1561439857604051631ed9509560e11b815260040160405180910390fd5b508054600f0b5f818152600180840160205260408220805492905583546fffffffffffffffffffffffffffffffff191692016001600160801b03169190911790915590565b5f6001600160ff1b038211156144465760405162461bcd60e51b815260206004820152602860248201527f53616665436173743a2076616c756520646f65736e27742066697420696e2061604482015267371034b73a191a9b60c11b6064820152608401613272565b5090565b80600f81900b81146144ae5760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20316044820152663238206269747360c81b6064820152608401613272565b919050565b5f818152600183016020526040812054801561458d575f6144d56001836154ea565b85549091505f906144e8906001906154ea565b9050818114614547575f865f018281548110614506576145066152e2565b905f5260205f200154905080875f018481548110614526576145266152e2565b5f918252602080832090910192909255918252600188019052604090208390555b8554869080614558576145586158b9565b600190038181905f5260205f20015f90559055856001015f8681526020019081526020015f205f90556001935050505061099a565b5f91505061099a565b82545f90816145a7868683856146e1565b905080156145d4576145be866141386001846154ea565b54600160201b90046001600160e01b0316610771565b5091949350505050565b82548015614694575f6145f6856141386001856154ea565b60408051808201909152905463ffffffff808216808452600160201b9092046001600160e01b0316602084015291925090851610156146485760405163151b8e3f60e11b815260040160405180910390fd5b805163ffffffff8086169116036146925782614669866141386001866154ea565b80546001600160e01b0392909216600160201b0263ffffffff9092169190911790555050505050565b505b506040805180820190915263ffffffff92831681526001600160e01b03918216602080830191825285546001810187555f968752952091519051909216600160201b029190921617910155565b5f5b81831015610961575f6146f68484614734565b5f8781526020902090915063ffffffff86169082015463ffffffff1611156147205780925061472e565b61472b8160016158a6565b93505b506146e3565b5f61474260028484186158cd565b610776908484166158a6565b6001600160a01b0381168114613493575f5ffd5b634e487b7160e01b5f52604160045260245ffd5b604051606081016001600160401b038111828210171561479857614798614762565b60405290565b604051601f8201601f191681016001600160401b03811182821017156147c6576147c6614762565b604052919050565b803563ffffffff811681146144ae575f5ffd5b5f604082840312156147f1575f5ffd5b604080519081016001600160401b038111828210171561481357614813614762565b60405290508082356148248161474e565b8152614832602084016147ce565b60208201525092915050565b5f5f5f60808486031215614850575f5ffd5b833561485b8161474e565b925061486a85602086016147e1565b9150606084013561487a8161474e565b809150509250925092565b81516001600160401b03168152602080830151600f0b9082015260408083015163ffffffff16908201526060810161099a565b5f602082840312156148c8575f5ffd5b5035919050565b5f602082840312156148df575f5ffd5b81356107768161474e565b80516001600160a01b0316825260209081015163ffffffff16910152565b5f8151808452602084019350602083015f5b828110156149435761492d8683516148ea565b604095909501946020919091019060010161491a565b5093949350505050565b602081525f6107766020830184614908565b5f6040828403121561496f575f5ffd5b61077683836147e1565b5f5f83601f840112614989575f5ffd5b5081356001600160401b0381111561499f575f5ffd5b6020830191508360208260051b850101111561191d575f5ffd5b5f5f5f604084860312156149cb575f5ffd5b83356149d68161474e565b925060208401356001600160401b038111156149f0575f5ffd5b6149fc86828701614979565b9497909650939450505050565b5f6001600160401b03821115614a2157614a21614762565b5060051b60200190565b5f82601f830112614a3a575f5ffd5b8135614a4d614a4882614a09565b61479e565b8082825260208201915060208360051b860101925085831115614a6e575f5ffd5b602085015b83811015614a94578035614a868161474e565b835260209283019201614a73565b5095945050505050565b5f5f5f5f60a08587031215614ab1575f5ffd5b614abb86866147e1565b935060408501356001600160401b03811115614ad5575f5ffd5b614ae187828801614a2b565b93505060608501356001600160401b03811115614afc575f5ffd5b614b0887828801614a2b565b925050614b17608086016147ce565b905092959194509250565b5f8151808452602084019350602083015f5b82811015614943578151865260209586019590910190600101614b34565b5f602082016020835280845180835260408501915060408160051b8601019250602086015f5b82811015614ba957603f19878603018452614b94858351614b22565b94506020938401939190910190600101614b78565b50929695505050505050565b5f5f60408385031215614bc6575f5ffd5b8235614bd18161474e565b915060208301356001600160401b03811115614beb575f5ffd5b830160a08186031215614bfc575f5ffd5b809150509250929050565b5f5f60408385031215614c18575f5ffd5b8235614c238161474e565b91506020830135614bfc8161474e565b5f8151808452602084019350602083015f5b8281101561494357614c7e86835180516001600160401b03168252602080820151600f0b9083015260409081015163ffffffff16910152565b6060959095019460209190910190600101614c45565b604081525f614ca66040830185614908565b8281036020840152611fd98185614c33565b5f8151808452602084019350602083015f5b828110156149435781516001600160a01b0316865260209586019590910190600101614cca565b602081525f6107766020830184614cb8565b5f5f60408385031215614d14575f5ffd5b82356001600160401b03811115614d29575f5ffd5b614d3585828601614a2b565b9250506020830135614bfc8161474e565b602080825282518282018190525f918401906040840190835b81811015614d865783516001600160401b0316835260209384019390920191600101614d5f565b509095945050505050565b5f5f5f5f5f60608688031215614da5575f5ffd5b8535614db08161474e565b945060208601356001600160401b03811115614dca575f5ffd5b614dd688828901614979565b90955093505060408601356001600160401b03811115614df4575f5ffd5b614e0088828901614979565b969995985093965092949392505050565b5f5f5f5f60608587031215614e24575f5ffd5b8435614e2f8161474e565b9350614e3d602086016147ce565b925060408501356001600160401b03811115614e57575f5ffd5b614e6387828801614979565b95989497509550505050565b5f5f60408385031215614e80575f5ffd5b8235614e8b8161474e565b915060208301356001600160401b03811115614ea5575f5ffd5b614eb185828601614a2b565b9150509250929050565b5f5f60408385031215614ecc575f5ffd5b8235614ed78161474e565b9150614ee5602084016147ce565b90509250929050565b5f60208284031215614efe575f5ffd5b813560ff81168114610776575f5ffd5b5f5f60608385031215614f1f575f5ffd5b8235614f2a8161474e565b9150614ee584602085016147e1565b5f60608284031215614f49575f5ffd5b50919050565b5f60208284031215614f5f575f5ffd5b81356001600160401b03811115614f74575f5ffd5b6131d484828501614f39565b5f5f5f60808486031215614f92575f5ffd5b83356001600160401b03811115614fa7575f5ffd5b614fb386828701614a2b565b93505061486a85602086016147e1565b602081525f6107766020830184614c33565b5f5f5f60608486031215614fe7575f5ffd5b8335614ff28161474e565b925060208401356001600160401b0381111561500c575f5ffd5b61501886828701614a2b565b925050615027604085016147ce565b90509250925092565b5f5f60408385031215615041575f5ffd5b823561504c8161474e565b915060208301356001600160401b03811115615066575f5ffd5b8301601f81018513615076575f5ffd5b8035615084614a4882614a09565b8082825260208201915060208360051b8501019250878311156150a5575f5ffd5b602084015b838110156151ca5780356001600160401b038111156150c7575f5ffd5b85016080818b03601f190112156150dc575f5ffd5b6150e4614776565b6150f18b602084016147e1565b815260608201356001600160401b0381111561510b575f5ffd5b61511a8c602083860101614a2b565b60208301525060808201356001600160401b03811115615138575f5ffd5b6020818401019250508a601f83011261514f575f5ffd5b813561515d614a4882614a09565b8082825260208201915060208360051b86010192508d83111561517e575f5ffd5b6020850194505b828510156151b45784356001600160401b03811681146151a3575f5ffd5b825260209485019490910190615185565b60408401525050845250602092830192016150aa565b50809450505050509250929050565b5f5f5f604084860312156151eb575f5ffd5b83356151f68161474e565b925060208401356001600160401b03811115615210575f5ffd5b8401601f81018613615220575f5ffd5b80356001600160401b03811115615235575f5ffd5b866020828401011115615246575f5ffd5b939660209190910195509293505050565b5f5f60408385031215615268575f5ffd5b82356152738161474e565b915060208301356001600160401b0381111561528d575f5ffd5b614eb185828601614f39565b5f5f604083850312156152aa575f5ffd5b82356152b58161474e565b946020939093013593505050565b5f602082840312156152d3575f5ffd5b81518015158114610776575f5ffd5b634e487b7160e01b5f52603260045260245ffd5b5f8235603e1983360301811261530a575f5ffd5b9190910192915050565b5f60208284031215615324575f5ffd5b610776826147ce565b6040810161099a82846148ea565b5f5f8335601e19843603018112615350575f5ffd5b8301803591506001600160401b03821115615369575f5ffd5b6020019150600581901b360382131561191d575f5ffd5b6060810161538e82856148ea565b6001600160a01b039290921660409190910152919050565b604081525f6153b86040830185614cb8565b8281036020840152611fd98185614cb8565b5f602082840312156153da575f5ffd5b81516001600160401b038111156153ef575f5ffd5b8201601f810184136153ff575f5ffd5b805161540d614a4882614a09565b8082825260208201915060208360051b85010192508683111561542e575f5ffd5b602084015b838110156154cb5780516001600160401b03811115615450575f5ffd5b8501603f81018913615460575f5ffd5b6020810151615471614a4882614a09565b808282526020820191506020808460051b8601010192508b831115615494575f5ffd5b6040840193505b828410156154b657835182526020938401939091019061549b565b86525050602093840193919091019050615433565b509695505050505050565b634e487b7160e01b5f52601160045260245ffd5b8181038181111561099a5761099a6154d6565b6001600160401b03828116828216039081111561099a5761099a6154d6565b5f81600f0b60016001607f1b03198103615538576155386154d6565b5f0392915050565b600f81810b9083900b0160016001607f1b03811360016001607f1b03198212171561099a5761099a6154d6565b6001600160a01b038616815260c0810161558a60208301876148ea565b6001600160a01b039490941660608201526001600160401b0392909216608083015263ffffffff1660a09091015292915050565b5f5f8335601e198436030181126155d3575f5ffd5b8301803591506001600160401b038211156155ec575f5ffd5b60200191503681900382131561191d575f5ffd5b81835281816020850137505f828201602090810191909152601f909101601f19169091010190565b6001600160a01b03881681525f60c08201615646602084018a6148ea565b60c060608401528690528660e083015f5b8881101561568757823561566a8161474e565b6001600160a01b0316825260209283019290910190600101615657565b50838103608085015261569a8188614b22565b91505082810360a08401526156b0818587615600565b9a9950505050505050505050565b5f602082840312156156ce575f5ffd5b813561ffff81168114610776575f5ffd5b63ffffffff818116838216019081111561099a5761099a6154d6565b8183526020830192505f815f5b848110156149435763ffffffff61571e836147ce565b1686526020958601959190910190600101615708565b6001600160a01b038581168252841660208201526060604082018190525f9061429790830184866156fb565b602081525f6131d4602083018486615600565b6001600160a01b038781168252861660208201526080604082018190525f9061579f90830186886156fb565b82810360608401526157b2818587615600565b9998505050505050505050565b5f602082840312156157cf575f5ffd5b81516107768161474e565b80516020808301519190811015614f49575f1960209190910360031b1b16919050565b5f6001820161580e5761580e6154d6565b5060010190565b5f81615823576158236154d6565b505f190190565b8082018281125f831280158216821582161715615849576158496154d6565b505092915050565b600f82810b9082900b0360016001607f1b0319811260016001607f1b038213171561099a5761099a6154d6565b634e487b7160e01b5f52601260045260245ffd5b634e487b7160e01b5f52602160045260245ffd5b8082018082111561099a5761099a6154d6565b634e487b7160e01b5f52603160045260245ffd5b5f826158e757634e487b7160e01b5f52601260045260245ffd5b50049056fea2646970667358221220c3ba315211dbc6ce0ca79751329dee4d7a411ed4af89203aa0cc2a16f56ef31764736f6c634300081b0033",
    "sourceMap": "504:36731:147:-:0;;;1134:470;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1538:21;1403:11;1416:19;1437:31;1487:15;-1:-1:-1;;;;;3224:38:182;;3216:67;;;;-1:-1:-1;;;3216:67:182;;;;;;;;;;;;-1:-1:-1;;;;;3293:32:182;;;;;4988:24:148;;;;;5022:40;;;;;;5072:64;;;501:44:180;;;1575:22:147::3;:20;:22::i;:::-;1134:470:::0;;;;;504:36731;;5939:280:30;6007:13;;;;;;;6006:14;5998:66;;;;-1:-1:-1;;;5998:66:30;;1380:2:281;5998:66:30;;;1362:21:281;1419:2;1399:18;;;1392:30;1458:34;1438:18;;;1431:62;-1:-1:-1;;;1509:18:281;;;1502:37;1556:19;;5998:66:30;;;;;;;;6078:12;;6094:15;6078:12;;;:31;6074:139;;6125:12;:30;;-1:-1:-1;;6125:30:30;6140:15;6125:30;;;;;;6174:28;;1728:36:281;;;6174:28:30;;1716:2:281;1701:18;6174:28:30;;;;;;;6074:139;5939:280::o;14:151:281:-;-1:-1:-1;;;;;109:31:281;;99:42;;89:70;;155:1;152;145:12;89:70;14:151;:::o;170:167::-;248:13;;301:10;290:22;;280:33;;270:61;;327:1;324;317:12;270:61;170:167;;;:::o;342:831::-;530:6;538;546;554;562;615:3;603:9;594:7;590:23;586:33;583:53;;;632:1;629;622:12;583:53;664:9;658:16;683:51;728:5;683:51;:::i;:::-;803:2;788:18;;782:25;753:5;;-1:-1:-1;816:53:281;782:25;816:53;:::i;:::-;940:2;925:18;;919:25;888:7;;-1:-1:-1;953:53:281;919:25;953:53;:::i;:::-;1025:7;-1:-1:-1;1051:48:281;1095:2;1080:18;;1051:48;:::i;:::-;1041:58;;1118:49;1162:3;1151:9;1147:19;1118:49;:::i;:::-;1108:59;;342:831;;;;;;;;:::o;1586:184::-;504:36731:147;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "504:36731:147:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27937:303;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3368:401:182;;;;;;:::i;:::-;;:::i;:::-;;27058:412:147;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;33995:177::-;;;;;;:::i;:::-;;:::i;:::-;;;4525:14:281;;4518:22;4500:41;;4488:2;4473:18;33995:177:147;4360:187:281;16299:1016:147;;;;;;:::i;:::-;;:::i;1310:42:148:-;;;;;;;;5759:10:281;5747:23;;;5729:42;;5717:2;5702:18;1310:42:148;5585:192:281;35328:1905:147;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;34658:232::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;8971:32:281;;;8953:51;;8941:2;8926:18;34658:232:147;8784:226:281;1882:4557:147;;;;;;:::i;:::-;;:::i;28774:690::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;34935:348::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;354:59:180:-;;;;;31847:364:147;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;11632:469::-;;;;;;:::i;:::-;;:::i;17360:642::-;;;;;;:::i;:::-;;:::i;31412:390::-;;;;;;:::i;:::-;;:::i;15179:317::-;;;;;;:::i;:::-;;:::i;3805:85:182:-;;;:::i;4539:163::-;;;;;;:::i;:::-;4671:7;;4642:1;:10;;;;;;;;4671:14;;;4670:24;;4539:163;4416:87;4489:7;;4416:87;;;16182:25:281;;;16170:2;16155:18;4416:87:182;16036:177:281;33761:189:147;;;;;;:::i;:::-;;:::i;29509:1648::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;16756:31:281;;;16738:50;;16726:2;16711:18;29509:1648:147;16594:200:281;13549:1585:147;;;;;;:::i;:::-;;:::i;34217:178::-;;;;;;:::i;:::-;;:::i;2064:101:24:-;;;:::i;33303:413:147:-;;;;;;:::i;:::-;;:::i;1432:54:148:-;;;;;1964:47:182;;;;;28285:444:147;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1441:85:24:-;1513:6;;-1:-1:-1;;;;;1513:6:24;1441:85;;32256:462:147;;;;;;:::i;:::-;;:::i;6484:5103::-;;;;;;:::i;:::-;;:::i;31202:165::-;;;;;;:::i;:::-;;:::i;15991:263::-;;;;;;:::i;:::-;;:::i;4198:93:148:-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4198:93:148;;;12146:1358:147;;;;;;:::i;:::-;;:::i;34440:173::-;;;;;;:::i;:::-;;:::i;18047:649::-;;;;;;:::i;:::-;;:::i;32763:495::-;;;;;;:::i;:::-;;:::i;:::-;;;;24117:14:281;;24110:22;24092:41;;24181:10;24169:23;;;24164:2;24149:18;;24142:51;24065:18;32763:495:147;23926:273:281;26874:139:147;;;;;;:::i;:::-;;:::i;27515:377::-;;;;;;:::i;:::-;;:::i;1649:188::-;;;;;;:::i;:::-;;:::i;15541:405::-;;;;;;:::i;:::-;;:::i;1055:46:148:-;;;;;2314:198:24;;;;;;:::i;:::-;;:::i;3926:454:182:-;;;;;;:::i;:::-;;:::i;27937:303:147:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;28145:60:147;28167:8;28177:17;:11;:15;:17::i;:::-;28196:8;28145:21;:60::i;:::-;28110:95;-1:-1:-1;;;27937:303:147;;;;;;:::o;3368:401:182:-;2398:35;;-1:-1:-1;;;2398:35:182;;2422:10;2398:35;;;8953:51:281;2398:14:182;-1:-1:-1;;;;;2398:23:182;;;;8926:18:281;;2398:35:182;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2390:58;;;;-1:-1:-1;;;2390:58:182;;;;;;;;;;;;3482:7:::1;::::0;3631:37;;::::1;3630:62:::0;::::1;3622:97;;;;-1:-1:-1::0;;;3622:97:182::1;;;;;;;;;;;;3729:33;3746:15;3729:16;:33::i;:::-;3442:327;3368:401:::0;:::o;27058:412:147:-;-1:-1:-1;;;;;27188:23:147;;27171:14;27188:23;;;:13;:23;;;;;27139:20;;27171:14;27188:32;;:30;:32::i;:::-;27171:49;;27231:33;27285:6;-1:-1:-1;;;;;27267:25:147;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;27267:25:147;;;;;;;;;;;;;;;-1:-1:-1;27231:61:147;-1:-1:-1;27307:9:147;27302:132;27326:6;27322:1;:10;27302:132;;;-1:-1:-1;;;;;27393:23:147;;;;;;:13;:23;;;;;27371:52;;27393:29;;27420:1;27393:26;:29::i;:::-;-1:-1:-1;;;;;;;;;;;;;;;;;;657:137:177;;;;;;;;;721:2;704:19;;;657:137;;;;;;;;;;;513:288;27371:52:147;27353:12;27366:1;27353:15;;;;;;;;:::i;:::-;;;;;;;;;;:70;27334:3;;27302:132;;;-1:-1:-1;27451:12:147;27058:412;-1:-1:-1;;;27058:412:147:o;33995:177::-;34150:14;;;;;34124:15;;-1:-1:-1;;;;;34110:30:147;34087:4;34110:30;;;:13;:30;;;;;;:55;;;;;;;:39;:55;:::i;:::-;34103:62;33995:177;-1:-1:-1;;33995:177:147:o;16299:1016::-;16397:3;713:22:180;727:7;713:13;:22::i;:::-;705:53;;;;-1:-1:-1;;;705:53:180;;;;;;;;;;;;-1:-1:-1;;;;;16485:27:147;::::1;;::::0;;;:22:::1;:27;::::0;;;;;::::1;;16477:74;;;;-1:-1:-1::0;;;16477:74:147::1;;;;;;;;;;;;16567:9;16562:747;16582:17:::0;;::::1;16562:747;;;16620:30;16653:41;;;;;;;;16665:3;-1:-1:-1::0;;;;;16653:41:147::1;;;;;16670:6;;16677:1;16670:9;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:23;::::0;::::1;::::0;::::1;::::0;::::1;:::i;:::-;16653:41;;;;::::0;16620:74:::1;;16792:38;16815:11;:14;;;16792:38;;:13;:18;16806:3;-1:-1:-1::0;;;;;16792:18:147::1;-1:-1:-1::0;;;;;16792:18:147::1;;;;;;;;;;;;:22;;:38;;;;:::i;:::-;16784:69;;;;-1:-1:-1::0;;;16784:69:147::1;;;;;;;;;;;;16872:52;16891:32;;;;;;;;16903:3;-1:-1:-1::0;;;;;16891:32:147::1;;;;;16908:11;:14;;;16891:32;;;;::::0;16872:52:::1;;;;;;:::i;:::-;;;;;;;;16989:22;17014:17;:11;:15;:17::i;:::-;16989:42:::0;-1:-1:-1;17050:9:147::1;17045:254;17069:6;;17076:1;17069:9;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:20;::::0;::::1;::::0;::::1;::::0;::::1;:::i;:::-;:27;;17065:1;:31;17045:254;;;17121:76;17172:6;;17179:1;17172:9;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:20;::::0;::::1;::::0;::::1;::::0;::::1;:::i;:::-;17193:1;17172:23;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;17121:38;::::0;;;:22:::1;:38;::::0;;;;;:42:::1;:76::i;:::-;;17220:64;17247:11;17260:6;;17267:1;17260:9;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:20;::::0;::::1;::::0;::::1;::::0;::::1;:::i;:::-;17281:1;17260:23;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;17220:64;;;;;;;:::i;:::-;;;;;;;;17098:3;;17045:254;;;-1:-1:-1::0;;;16601:3:147::1;;16562:747;;;;16299:1016:::0;;;;:::o;35328:1905::-;35534:33;35612:9;:16;-1:-1:-1;;;;;35596:33:147;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;35579:50;;35639:33;35675:10;-1:-1:-1;;;;;35675:29:147;;35705:9;35716:10;35675:52;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;35675:52:147;;;;;;;;;;;;:::i;:::-;35639:88;-1:-1:-1;35743:9:147;35738:1489;35762:9;:16;35758:1;:20;35738:1489;;;35799:16;35818:9;35828:1;35818:12;;;;;;;;:::i;:::-;;;;;;;35799:31;;35878:10;:17;-1:-1:-1;;;;;35864:32:147;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;35864:32:147;;35844:14;35859:1;35844:17;;;;;;;;:::i;:::-;;;;;;;;;;:52;35916:9;35911:1306;35935:10;:17;35931:1;:21;35911:1306;;;35977:18;35998:10;36009:1;35998:13;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;36272:30:147;;;36250:19;36272:30;;;:20;:30;;;;;;:40;;;;;;;;;;;35998:13;;-1:-1:-1;36272:49:147;;:47;:49::i;:::-;36250:71;;36343:12;-1:-1:-1;;;;;36343:17:147;36359:1;36343:17;36339:72;;36384:8;;;;36339:72;36429:23;36455:46;36469:8;36479:11;36492:8;36455:13;:46::i;:::-;36429:72;;36856:11;36835:32;;:5;:17;;;:32;;;;:57;;;;;36891:1;36871:5;:17;;;:21;;;36835:57;36831:182;;;36941:53;36952:5;:22;;;36976:5;:17;;;36941:10;:53::i;:::-;-1:-1:-1;;;;;36916:78:147;;;36831:182;37069:22;;37031:27;;37061:52;;-1:-1:-1;;;;;37061:31:147;;;;:52;;:38;:52::i;:::-;37031:82;;37154:48;37182:19;37154:14;37169:1;37154:17;;;;;;;;:::i;:::-;;;;;;;37172:1;37154:20;;;;;;;;:::i;:::-;;;;;;;:27;;:48;;;;:::i;:::-;37131:14;37146:1;37131:17;;;;;;;;:::i;:::-;;;;;;;37149:1;37131:20;;;;;;;;:::i;:::-;;;;;;:71;;;;;35959:1258;;;;35911:1306;35954:3;;35911:1306;;;-1:-1:-1;;35780:3:147;;35738:1489;;;;35569:1664;35328:1905;;;;;;:::o;34658:232::-;-1:-1:-1;;;;;34782:18:147;;;34731:13;34782:18;;;:13;:18;;;;;;34731:13;;34782:18;34818:32;;:65;;34874:9;34818:65;;;-1:-1:-1;34867:3:147;;34811:72;-1:-1:-1;34658:232:147:o;1882:4557::-;4671:7:182;;784:1:148;;4642:10:182;4671:14;;;4670:24;3059:42;;;;-1:-1:-1;;;3059:42:182;;;;;;;;;;;;2038:3:147::1;713:22:180;727:7;713:13;:22::i;:::-;705:53;;;;-1:-1:-1::0;;;705:53:180::1;;;;;;;;;;;;2136:30:147::2;2169:38;;;;;;;;2181:3;-1:-1:-1::0;;;;;2169:38:147::2;;;;;2186:6;:20;;;;;;;;;;:::i;:::-;2169:38;;::::0;;2136:71;-1:-1:-1;2217:24:147::2;2244:50;2265:15;;::::0;::::2;:6:::0;:15:::2;:::i;:::-;2282:11;2244:20;:50::i;:::-;2217:77:::0;-1:-1:-1;2340:18:147::2;;::::0;::::2;:6:::0;:18:::2;:::i;:::-;:25:::0;-1:-1:-1;2312:17:147::2;;::::0;::::2;:6:::0;:17:::2;:::i;:::-;:24;;:53;2304:90;;;;-1:-1:-1::0;;;2304:90:147::2;;;;;;;;;;;;2452:14;::::0;;::::2;::::0;2426:15;;-1:-1:-1;;;;;2412:30:147::2;;::::0;;;:13:::2;:30:::0;;;;;;;:55:::2;::::0;::::2;::::0;;::::2;::::0;:39:::2;:55;:::i;:::-;2404:86;;;;-1:-1:-1::0;;;2404:86:147::2;;;;;;;;;;;;2508:19;2500:52;;;;-1:-1:-1::0;;;2500:52:147::2;;;;;;;;;;;;2563:27;2607:17;;::::0;::::2;:6:::0;:17:::2;:::i;:::-;:24;;-1:-1:-1::0;;;;;2593:39:147::2;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;-1:-1:-1;2593:39:147::2;-1:-1:-1::0;2563:69:147;-1:-1:-1;2728:9:147::2;2723:3598;2747:17;;::::0;::::2;:6:::0;:17:::2;:::i;:::-;:24;;2743:1;:28;2723:3598;;;2879:6:::0;;;:93:::2;;-1:-1:-1::0;2946:17:147::2;;::::0;::::2;:6:::0;:17:::2;:::i;:::-;2964:5;2968:1;2964::::0;:5:::2;:::i;:::-;2946:24;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;2889:83:147::2;2905:17;;::::0;::::2;:6:::0;:17:::2;:::i;:::-;2923:1;2905:20;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;2889:83:147::2;;2879:93;2854:184;;;;-1:-1:-1::0;;;2854:184:147::2;;;;;;;;;;;;3132:18;;::::0;::::2;:6:::0;:18:::2;:::i;:::-;3151:1;3132:21;;;;;;;:::i;:::-;;;;;;;3128:1;:25;:57;;;;-1:-1:-1::0;552:4:178::2;3157:18:147;;::::0;::::2;:6:::0;:18:::2;:::i;:::-;3176:1;3157:21;;;;;;;:::i;:::-;;;;;;;:28;;3128:57;3120:87;;;;-1:-1:-1::0;;;3120:87:147::2;;;;;;;;;;;;3312:81;3371:17;;::::0;::::2;:6:::0;:17:::2;:::i;:::-;3389:1;3371:20;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;3312:22;:41;3335:17;:11;:15;:17::i;:::-;3312:41;;;;;;;;;;;:50;;:81;;;;:::i;:::-;3287:164;;;;-1:-1:-1::0;;;3287:164:147::2;;;;;;;;;;;;3554:24;::::0;3628:79:::2;3650:15;;::::0;::::2;:6:::0;:15:::2;:::i;:::-;3667:17;:11;:15;:17::i;:::-;3686;;::::0;::::2;:6:::0;:17:::2;:::i;:::-;3704:1;3686:20;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;3628:21;:79::i;:::-;4014:27:::0;;3553:154;;-1:-1:-1;3553:154:147;-1:-1:-1;;;;;;4014:32:147::2;:27;:32:::0;4010:79:::2;;4066:8;;;;4010:79;4320:23;4353:73;4404:18;;::::0;::::2;:6:::0;:18:::2;:::i;:::-;4423:1;4404:21;;;;;;;:::i;:::-;4361:27:::0;;-1:-1:-1;;;;;4353:36:147::2;::::0;4404:21:::2;::::0;;::::2;;;::::0;-1:-1:-1;4353:50:147::2;:73::i;:::-;4467:17:::0;;4320:107;;-1:-1:-1;4514:51:147::2;-1:-1:-1::0;;;;;4514:25:147;;::::2;::::0;:51;::::2;:32;:51::i;:::-;4498:10;4509:1;4498:13;;;;;;;;:::i;:::-;;;;;;:67;;;::::0;::::2;4611:16;4580:10;:27;;:47;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;4580:47:147::2;::::0;;-1:-1:-1;4641:37:147;;4662:16;;4641:4;;:37:::2;::::0;4662:16;;4641:37:::2;:::i;:::-;-1:-1:-1::0;;;;;4641:37:147::2;::::0;;-1:-1:-1;4692:24:147::2;::::0;::::2;:44:::0;;4720:16;;4692:24;:44:::2;::::0;4720:16;;4692:44:::2;:::i;:::-;-1:-1:-1::0;;;;;4692:44:147::2;::::0;;-1:-1:-1;4951:22:147::2;::::0;::::2;::::0;4976:1:::2;4951:26;::::0;;;::::2;;4947:570;;;4997:21;5048:78;5104:18;;::::0;::::2;:6:::0;:18:::2;:::i;:::-;5123:1;5104:21;;;;;;;:::i;:::-;;;;;;;5065:10;:22;;;5064:23;;;:::i;:::-;-1:-1:-1::0;;;;;5048:41:147::2;::::0;:55:::2;:78::i;:::-;4997:130;;5186:14;-1:-1:-1::0;;;;;5178:23:147::2;5145:10;:22;;:57;;;;;;;:::i;:::-;;;::::0;;-1:-1:-1;5226:276:147::2;5265:15;;::::0;::::2;:6:::0;:15:::2;:::i;:::-;5302:11;5335:6;:17;;;;;;;;:::i;:::-;5353:1;5335:20;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;5377:63;5388:10;:27;;;5417:10;:22;;;5377:10;:63::i;:::-;5462:10;:22;;;5226:276;;;;;;;;;;:::i;:::-;;;;;;;;4979:538;4947:570;5562:97;5584:15;;::::0;::::2;:6:::0;:15:::2;:::i;:::-;5601:17;:11;:15;:17::i;:::-;5620;;::::0;::::2;:6:::0;:17:::2;:::i;:::-;5638:1;5620:20;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;5642:4;5648:10;5562:21;:97::i;:::-;5735:150;5770:15;;::::0;::::2;:6:::0;:15:::2;:::i;:::-;5787:11:::0;5800:17:::2;;::::0;::::2;:6:::0;:17:::2;:::i;:::-;5818:1;5800:20;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;5822:27:::0;;5735:150:::2;::::0;::::2;::::0;;;;5822:27;5858:12:::2;::::0;5735:150:::2;:::i;:::-;;;;;;;;5900:77;5920:15;;::::0;::::2;:6:::0;:15:::2;:::i;:::-;5937:17;;::::0;::::2;:6:::0;:17:::2;:::i;:::-;5955:1;5937:20;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;5959:17:::0;;5900:19:::2;:77::i;:::-;-1:-1:-1::0;;;;;6070:10:147::2;:29;;6128:15;;::::0;::::2;:6:::0;:15:::2;:::i;:::-;6171:17;;::::0;::::2;:6:::0;:17:::2;:::i;:::-;6189:1;6171:20;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;6278:17:::0;;6070:240:::2;::::0;::::2;::::0;;;-1:-1:-1;;;;;;6070:240:147;;;-1:-1:-1;;;;;32271:32:281;;;6070:240:147::2;::::0;::::2;32253:51:281::0;32340:32;;;;32320:18;;;32313:60;-1:-1:-1;;;;;32409:31:281;;;32389:18;;;32382:59;32477:31;32457:18;;;32450:59;32225:19;;6070:240:147::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2778:3543;;;;2723:3598;2773:3;;2723:3598;;;-1:-1:-1::0;6336:96:147::2;6352:15;;::::0;::::2;:6:::0;:15:::2;:::i;:::-;6369:11:::0;6382:17:::2;;::::0;::::2;:6:::0;:17:::2;:::i;:::-;6401:10:::0;6413:18:::2;;::::0;::::2;:6:::0;:18:::2;:::i;:::-;6336:96;;;;;;;;;;;;:::i;:::-;;;;;;;;2043:4396;;;3111:1:182::1;1882:4557:147::0;;;:::o;28774:690::-;-1:-1:-1;;;;;28959:23:147;;28942:14;28959:23;;;:13;:23;;;;;28889:20;;;;28959:32;;:30;:32::i;:::-;28942:49;;29002:33;29056:6;-1:-1:-1;;;;;29038:25:147;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;29038:25:147;;;;;;;;;;;;;;;;29002:61;;29073:32;29125:6;-1:-1:-1;;;;;29108:24:147;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;29108:24:147;;-1:-1:-1;;29108:24:147;;;;;;;;;;;-1:-1:-1;29073:59:147;-1:-1:-1;29148:9:147;29143:269;29167:6;29163:1;:10;29143:269;;;-1:-1:-1;;;;;29249:23:147;;29194:30;29249:23;;;:13;:23;;;;;29227:52;;29249:29;;29276:1;29249:26;:29::i;29227:52::-;29194:85;;29312:11;29294:12;29307:1;29294:15;;;;;;;;:::i;:::-;;;;;;:29;;;;29355:46;29369:8;29379:11;29392:8;29355:13;:46::i;:::-;29337:12;29350:1;29337:15;;;;;;;;:::i;:::-;;;;;;;;;;:64;-1:-1:-1;29175:3:147;;29143:269;;;-1:-1:-1;29430:12:147;;-1:-1:-1;29444:12:147;-1:-1:-1;;28774:690:147;;;;;;:::o;34935:348::-;35040:18;35070:23;35096:50;:22;:41;35119:17;:11;:15;:17::i;:::-;35096:41;;;;;;;;;;;:48;:50::i;31847:364::-;31944:15;31971:29;32016:9;:16;-1:-1:-1;;;;;32003:30:147;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;32003:30:147;-1:-1:-1;31971:62:147;-1:-1:-1;32049:9:147;32044:130;32068:9;:16;32064:1;:20;32044:130;;;32124:39;32140:9;32150:1;32140:12;;;;;;;;:::i;:::-;;;;;;;32154:8;32124:15;:39::i;:::-;32105:13;32119:1;32105:16;;;;;;;;:::i;:::-;-1:-1:-1;;;;;32105:58:147;;;:16;;;;;;;;;;;:58;32086:3;;32044:130;;11632:469;4671:7:182;;629:1:148;;4642::182;4671:14;;;4670:24;3059:42;;;;-1:-1:-1;;;3059:42:182;;;;;;;;;;;;11847:38:147;;::::1;11839:75;;;;-1:-1:-1::0;;;11839:75:147::1;;;;;;;;;;;;11930:9;11925:170;11945:21:::0;;::::1;11925:170;;;11987:97;12022:8;12042:10;;12053:1;12042:13;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;12069:10;;12080:1;12069:13;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;11987:23;:97::i;:::-;11968:3;;11925:170;;;;11632:469:::0;;;;;;:::o;17360:642::-;17516:3;713:22:180;727:7;713:13;:22::i;:::-;705:53;;;;-1:-1:-1;;;705:53:180;;;;;;;;;;;;17564:31:147::1;::::0;;;;::::1;::::0;;;-1:-1:-1;;;;;17564:31:147;::::1;::::0;;::::1;::::0;::::1;;::::0;::::1;::::0;17531:30:::1;17630:17;17564:31:::0;17630:15:::1;:17::i;:::-;17605:42;;17666:43;17694:11;:14;;;17666:43;;:13;:18;17680:3;-1:-1:-1::0;;;;;17666:18:147::1;-1:-1:-1::0;;;;;17666:18:147::1;;;;;;;;;;;;:27;;:43;;;;:::i;:::-;17658:74;;;;-1:-1:-1::0;;;17658:74:147::1;;;;;;;;;;;;17748:9;17743:253;17763:21:::0;;::::1;17743:253;;;17813:66;17864:10;;17875:1;17864:13;;;;;;;:::i;17813:66::-;17805:107;;;;-1:-1:-1::0;;;17805:107:147::1;;;;;;;;;;;;17931:54;17958:11;17971:10;;17982:1;17971:13;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;17931:54;;;;;;;:::i;:::-;;;;;;;;17786:3;;17743:253;;;;17521:481;;17360:642:::0;;;;;:::o;31412:390::-;31532:15;31559:29;31604:10;:17;-1:-1:-1;;;;;31591:31:147;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;31591:31:147;-1:-1:-1;31559:63:147;-1:-1:-1;31638:9:147;31633:132;31657:10;:17;31653:1;:21;31633:132;;;31714:40;31730:8;31740:10;31751:1;31740:13;;;;;;;;:::i;:::-;;;;;;;31714:15;:40::i;:::-;31695:13;31709:1;31695:16;;;;;;;;:::i;:::-;-1:-1:-1;;;;;31695:59:147;;;:16;;;;;;;;;;;:59;31676:3;;31633:132;;15179:317;15262:10;-1:-1:-1;;;;;15284:10:147;15262:33;;15258:186;;15319:23;15333:8;15319:13;:23::i;:::-;15311:49;;;;-1:-1:-1;;;15311:49:147;;;;;;;;;;;;15382:31;;-1:-1:-1;;;15382:31:147;;-1:-1:-1;;;;;8971:32:281;;;15382:31:147;;;8953:51:281;15382:10:147;:21;;;;8926:18:281;;15382:31:147;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15374:59;;;;-1:-1:-1;;;15374:59:147;;;;;;;;;;;;15453:36;15473:8;15483:5;15453:19;:36::i;3805:85:182:-;2398:35;;-1:-1:-1;;;2398:35:182;;2422:10;2398:35;;;8953:51:281;2398:14:182;-1:-1:-1;;;;;2398:23:182;;;;8926:18:281;;2398:35:182;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2390:58;;;;-1:-1:-1;;;2390:58:182;;;;;;;;;;;;3855:28:::1;-1:-1:-1::0;;3855:16:182::1;:28::i;:::-;3805:85::o:0;33761:189:147:-;33863:4;33886:57;33934:8;33886:19;:38;33906:17;:11;:15;:17::i;29509:1648::-;-1:-1:-1;;;;;29957:29:147;;;29603:6;29957:29;;;:19;:29;;;;;;;;:39;;;;;;;;;;;;;30024:27;;;:17;:27;;;;;:37;;;;;;;;;5684:12:85;-1:-1:-1;;;;;29957:39:147;;;;5684:12:85;;;;-1:-1:-1;;;5663:10:85;;;;;5656:41;29603:6:147;30080:836;30104:6;30100:1;:10;30080:836;;;-1:-1:-1;;;;;30156:27:147;;;30131:22;30156:27;;;:17;:27;;;;;;;;:37;;;;;;;;;;;:43;;30197:1;30156:40;:43::i;:::-;-1:-1:-1;;;;;30244:21:147;;;30213:28;30244:21;;;:11;:21;;;;;;;;:37;;;;;;;;:47;;;;;;;;;;;;30213:78;;;;;;;;;-1:-1:-1;;;;;30213:78:147;;;;-1:-1:-1;;;30213:78:147;;;;;;;;;;;-1:-1:-1;;;30213:78:147;;;;;;;;;;;30244:37;;-1:-1:-1;30478:12:147;:37;30474:81;;;30535:5;;;;30474:81;30847:58;30858:22;30882:10;:22;;;30847:10;:58::i;:::-;30822:83;;30117:799;;30112:3;;;;;30080:836;;;-1:-1:-1;;;;;;31076:30:147;;;;;;;:20;:30;;;;;;;;:40;;;;;;;;;31128:22;;31076:49;;:47;:49::i;:::-;:74;;;;:::i;:::-;31069:81;29509:1648;-1:-1:-1;;;;;29509:1648:147:o;13549:1585::-;4671:7:182;;966:1:148;;4642:10:182;4671:14;;;4670:24;3059:42;;;;-1:-1:-1;;;3059:42:182;;;;;;;;;;;;13818:30:147::1;13832:15;;::::0;::::1;:6:::0;:15:::1;:::i;:::-;13818:13;:30::i;:::-;:59;;;-1:-1:-1::0;13852:25:147::1;13866:10;::::0;;;::::1;::::0;::::1;;:::i;13852:25::-;13810:85;;;;-1:-1:-1::0;;;13810:85:147::1;;;;;;;;;;;;13911:9;13906:1062;13930:21;;::::0;::::1;:6:::0;:21:::1;:::i;:::-;:28;;13926:1;:32;13906:1062;;;14061:30;14094:49;;;;;;;;14106:6;:10;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;14094:49:147::1;::::0;;::::1;;14118:21;;::::0;::::1;:6:::0;:21:::1;:::i;:::-;14140:1;14118:24;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;14094:49;;;;::::0;14061:82:::1;;14165:50;14200:11;:14;;;14165:50;;:13;:25;14179:6;:10;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;14165:25:147::1;::::0;;::::1;::::0;::::1;::::0;;;;;;-1:-1:-1;14165:25:147;;:34:::1;:50::i;:::-;14157:81;;;;-1:-1:-1::0;;;14157:81:147::1;;;;;;;;;;;;14260:18;:35;14279:15;;::::0;::::1;:6:::0;:15:::1;:::i;:::-;-1:-1:-1::0;;;;;14260:35:147::1;-1:-1:-1::0;;;;;14260:35:147::1;;;;;;;;;;;;:54;14296:17;:11;:15;:17::i;:::-;14260:54:::0;;::::1;::::0;::::1;::::0;;;;;;-1:-1:-1;14260:54:147;:65;::::1;;14252:92;;;;-1:-1:-1::0;;;14252:92:147::1;;;;;;;;;;;;14408:57;14447:17;:11;:15;:17::i;:::-;14408:14;:31;14423:15;;::::0;::::1;:6:::0;:15:::1;:::i;:::-;-1:-1:-1::0;;;;;14408:31:147::1;::::0;;::::1;::::0;::::1;::::0;;;;;;-1:-1:-1;14408:31:147;;:38:::1;:57::i;:::-;-1:-1:-1::0;14479:62:147::1;14525:15;;::::0;::::1;:6:::0;:15:::1;:::i;:::-;14479:19;:38;14499:17;:11;:15;:17::i;:::-;14479:38;;;;;;;;;;;:45;;:62;;;;:::i;:::-;-1:-1:-1::0;14591:15:147::1;;::::0;::::1;:6:::0;:15:::1;:::i;:::-;-1:-1:-1::0;;;;;14560:60:147::1;;14608:11;14560:60;;;;;;:::i;:::-;;;;;;;;14813:144;::::0;;;;::::1;::::0;;;-1:-1:-1;14813:144:147;;::::1;::::0;::::1;14901:41;14924:18;14908:12;14901:41;:::i;:::-;14813:144;;::::0;;14756:18:::1;:35;14775:15;;::::0;::::1;:6:::0;:15:::1;:::i;:::-;-1:-1:-1::0;;;;;14756:35:147::1;-1:-1:-1::0;;;;;14756:35:147::1;;;;;;;;;;;;:54;14792:17;:11;:15;:17::i;:::-;14756:54:::0;;::::1;::::0;;::::1;::::0;;;;;;-1:-1:-1;14756:54:147;:201;;;;;;;::::1;::::0;::::1;;;;-1:-1:-1::0;;14756:201:147;::::1;;::::0;;;;-1:-1:-1;;14756:201:147;;;;;;;::::1;::::0;;-1:-1:-1;14756:201:147;13960:3:::1;13906:1062;;;-1:-1:-1::0;15029:27:147::1;15045:10;::::0;;;::::1;::::0;::::1;;:::i;15029:27::-;-1:-1:-1::0;;;;;15029:46:147::1;;15076:15;;::::0;::::1;:6:::0;:15:::1;:::i;:::-;15093:10;::::0;;;::::1;::::0;::::1;;:::i;:::-;15105:21;;::::0;::::1;:6:::0;:21:::1;:::i;:::-;15029:98;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13549:1585:::0;;:::o;34217:178::-;34306:16;34341:47;:19;:38;34361:17;:11;:15;:17::i;2064:101:24:-;1334:13;:11;:13::i;:::-;2128:30:::1;2155:1;2128:18;:30::i;33303:413:147:-:0;-1:-1:-1;;;;;33432:24:147;;33415:14;33432:24;;;:14;:24;;;;;33383:20;;33415:14;33432:33;;:31;:33::i;:::-;33415:50;;33475:33;33529:6;-1:-1:-1;;;;;33511:25:147;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;33511:25:147;;;;;;;;;;;;;;;-1:-1:-1;33475:61:147;-1:-1:-1;33552:9:147;33547:133;33571:6;33567:1;:10;33547:133;;;-1:-1:-1;;;;;33638:24:147;;;;;;:14;:24;;;;;33616:53;;33638:30;;33666:1;33638:27;:30::i;33616:53::-;33598:12;33611:1;33598:15;;;;;;;;:::i;:::-;;;;;;;;;;:71;33579:3;;33547:133;;28285:444;28442:19;28473:32;28525:9;:16;-1:-1:-1;;;;;28508:34:147;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;28508:34:147;;-1:-1:-1;;28508:34:147;;;;;;;;;;;-1:-1:-1;28473:69:147;-1:-1:-1;28558:9:147;28553:140;28577:9;:16;28573:1;:20;28553:140;;;28632:50;28646:9;28656:1;28646:12;;;;;;;;:::i;:::-;;;;;;;28660:11;28673:8;28632:13;:50::i;:::-;28614:12;28627:1;28614:15;;;;;;;;:::i;:::-;;;;;;;;;;:68;28595:3;;28553:140;;;-1:-1:-1;28710:12:147;28285:444;-1:-1:-1;;;;28285:444:147:o;32256:462::-;32411:15;32438:29;32483:10;:17;-1:-1:-1;;;;;32470:31:147;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;32470:31:147;-1:-1:-1;32438:63:147;-1:-1:-1;32517:9:147;32512:169;32536:10;:17;32532:1;:21;32512:169;;;-1:-1:-1;;;;;32593:30:147;;;;;;:20;:30;;;;;32624:13;;32593:77;;32657:11;;32593:30;32624:10;;32635:1;;32624:13;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;32593:45:147;-1:-1:-1;;;;;32593:45:147;;;;;;;;;;;;:57;;:77;;;;:::i;:::-;32574:13;32588:1;32574:16;;;;;;;;:::i;:::-;-1:-1:-1;;;;;32574:96:147;;;:16;;;;;;;;;;;:96;32555:3;;32512:169;;6484:5103;4671:7:182;;629:1:148;;4642::182;4671:14;;;4670:24;3059:42;;;;-1:-1:-1;;;3059:42:182;;;;;;;;;;;;6816:23:147::1;6830:8;6816:13;:23::i;:::-;6808:49;;;;-1:-1:-1::0;;;6808:49:147::1;;;;;;;;;;;;6949:30;7004:10;7016:12;7032:28;7051:8;7032:18;:28::i;:::-;7003:57;;;;7082:5;7074:46;;;;-1:-1:-1::0;;;7074:46:147::1;;;;;;;;;;;;7160:5:::0;-1:-1:-1;7191:9:147::1;::::0;-1:-1:-1;7186:4395:147::1;7210:6;:13;7206:1;:17;7186:4395;;;7283:6;7290:1;7283:9;;;;;;;;:::i;:::-;;;;;;;:23;;;:30;7252:6;7259:1;7252:9;;;;;;;;:::i;:::-;;;;;;;:20;;;:27;:61;7244:98;;;;-1:-1:-1::0;;;7244:98:147::1;;;;;;;;;;;;7795:30;7828:6;7835:1;7828:9;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;;;:21;7911:14;;::::1;::::0;7885:15;;-1:-1:-1;;;;;7871:30:147::1;7828:21;7871:30:::0;;;:13:::1;:30:::0;;;;;;;7828:21;;-1:-1:-1;7871:55:147::1;::::0;::::1;::::0;;::::1;::::0;:39:::1;:55;:::i;:::-;7863:86;;;;-1:-1:-1::0;;;7863:86:147::1;;;;;;;;;;;;7964:24;7991:43;8012:8;8022:11;7991:20;:43::i;:::-;7964:70:::0;-1:-1:-1;8054:9:147::1;8049:3522;8073:6;8080:1;8073:9;;;;;;;;:::i;:::-;;;;;;;:20;;;:27;8069:1;:31;8049:3522;;;8125:18;8146:6;8153:1;8146:9;;;;;;;;:::i;:::-;;;;;;;:20;;;8167:1;8146:23;;;;;;;;:::i;:::-;;;;;;;8125:44;;8464:61;8488:8;8498;8508:16;8464:23;:61::i;:::-;8545:24;8571:28;8623:60;8645:8;8655:17;:11;:15;:17::i;8623:60::-;8544:139;;;;8709:10;:22;;;:27;;8735:1;8709:27;8701:66;;;;-1:-1:-1::0;;;8701:66:147::1;;;;;;;;;;;;8920:16;8939:78;8962:11;8975:8;8985:10;8997:19;8939:22;:78::i;:::-;8920:97;;9117:67;9128:10;:27;;;9157:6;9164:1;9157:9;;;;;;;;:::i;:::-;;;;;;;:23;;;9181:1;9157:26;;;;;;;;:::i;:::-;;;;;;;9117:10;:67::i;:::-;9092:92;;:22;::::0;::::1;:92:::0;;;9236:1:::1;9210:27:::0;9202:53:::1;;;;-1:-1:-1::0;;;9202:53:147::1;;;;;;;;;;;;9356:1;9331:10;:22;;;:26;;;9327:1725;;;9385:11;9381:1105;;;9619:65;9666:17;:11;:15;:17::i;:::-;-1:-1:-1::0;;;;;9619:27:147;;::::1;;::::0;;;:17:::1;:27;::::0;;;;;;;:37;;::::1;::::0;;;;;;;2195:10:85;;-1:-1:-1;;;2195:10:85;;;;;;2176:16;2215:22;;;:11;;;;:22;;;;;;:30;;;;2279:26;;-1:-1:-1;;;;;2279:26:85;;;2292:13;;;;2279:26;;;;;2096:226;9619:65:147::1;9961:41;9984:18;9968:12;9961:41;:::i;:::-;:45;::::0;10005:1:::1;9961:45;:::i;:::-;9936:70;;:22;::::0;::::1;:70:::0;9327:1725:::1;;9381:1105;10197:60;10208:4;:24;;;10234:10;:22;;;10197:10;:60::i;:::-;-1:-1:-1::0;;;;;10170:87:147::1;:24;::::0;::::1;:87:::0;10314:9;;:6;;10321:1;;10314:9;::::1;;;;;:::i;:::-;;;;;;;:23;;;10338:1;10314:26;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;;;-1:-1:-1;;;;;10284:56:147::1;::::0;;:27:::1;10366:22:::0;;::::1;:26:::0;10418:45:::1;10450:12;10418:45;:22;::::0;::::1;:45:::0;9327:1725:::1;;;10539:1;10514:10;:22;;;:26;;;10510:542;;;10778:60;10789:4;:24;;;10815:10;:22;;;10778:10;:60::i;:::-;-1:-1:-1::0;;;;;10751:87:147;;::::1;:24;::::0;::::1;:87:::0;;;10896:17;;10868:45;;::::1;-1:-1:-1::0;10868:45:147::1;10860:79;;;;-1:-1:-1::0;;;10860:79:147::1;;;;;;;;;;;;10987:46;11010:23:::0;10994:12:::1;10987:46;:::i;:::-;10962:71;;:22;::::0;::::1;:71:::0;10510:542:::1;11105:78;11127:8;11137:17;:11;:15;:17::i;:::-;11156:8;11166:4;11172:10;11105:21;:78::i;:::-;11270:286;11309:8;11339:40;11361:17;:11;:15;:17::i;11339:40::-;11401:8;11431:63;11442:10;:27;;;11471:10;:22;;;11431:10;:63::i;:::-;11516:10;:22;;;11270:286;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1::0;;8102:3:147::1;::::0;;::::1;::::0;-1:-1:-1;8049:3522:147::1;::::0;-1:-1:-1;8049:3522:147::1;;-1:-1:-1::0;;;7225:3:147::1;;7186:4395;;31202:165:::0;-1:-1:-1;;;;;31311:30:147;;;31286:6;31311:30;;;:20;:30;;;;;;;;:40;;;;;;;;;;;:49;;:47;:49::i;15991:263::-;16085:3;713:22:180;727:7;713:13;:22::i;:::-;705:53;;;;-1:-1:-1;;;705:53:180;;;;;;;;;;;;-1:-1:-1;;;;;16105:27:147;::::1;;::::0;;;:22:::1;:27;::::0;;;;;::::1;;16100:93;;-1:-1:-1::0;;;;;16148:27:147;::::1;;::::0;;;:22:::1;:27;::::0;;;;:34;;-1:-1:-1;;16148:34:147::1;16178:4;16148:34;::::0;;16100:93:::1;16230:3;-1:-1:-1::0;;;;;16208:39:147::1;;16235:11;;16208:39;;;;;;;:::i;:::-;;;;;;;;15991:263:::0;;;;:::o;12146:1358::-;4671:7:182;;966:1:148;;4642:10:182;4671:14;;;4670:24;3059:42;;;;-1:-1:-1;;;3059:42:182;;;;;;;;;;;;12344:8:147::1;713:22:180;727:7;713:13;:22::i;:::-;705:53;;;;-1:-1:-1::0;;;705:53:180::1;;;;;;;;;;;;12414:31:147::2;::::0;-1:-1:-1;;;12414:31:147;;-1:-1:-1;;;;;8971:32:281;;;12414:31:147::2;::::0;::::2;8953:51:281::0;12414:10:147::2;:21;::::0;::::2;::::0;8926:18:281;;12414:31:147::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12406:59;;;;-1:-1:-1::0;;;12406:59:147::2;;;;;;;;;;;;12481:9;12476:815;12500:21;;::::0;::::2;:6:::0;:21:::2;:::i;:::-;:28;;12496:1;:32;12476:815;;;12678:49;::::0;;;;::::2;::::0;;;12645:30:::2;::::0;12678:49;12690:10:::2;;::::0;::::2;:6:::0;:10:::2;:::i;:::-;-1:-1:-1::0;;;;;12678:49:147::2;;;;;12702:6;:21;;;;;;;;:::i;:::-;12724:1;12702:24;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;12678:49;::::0;;::::2;::::0;;;12789:14:::2;::::0;;::::2;::::0;12763:15;;-1:-1:-1;;;;;12749:30:147::2;;::::0;;;:13:::2;:30:::0;;;;;;;12645:82;;-1:-1:-1;12749:55:147::2;::::0;:30;:55;;::::2;::::0;:39:::2;:55;:::i;:::-;12741:86;;;;-1:-1:-1::0;;;12741:86:147::2;;;;;;;;;;;;12850:43;12871:8;12881:11;12850:20;:43::i;:::-;12849:44;12841:75;;;;-1:-1:-1::0;;;12841:75:147::2;;;;;;;;;;;;12975:47;13004:17;:11;:15;:17::i;:::-;-1:-1:-1::0;;;;;12975:24:147;::::2;;::::0;;;:14:::2;:24;::::0;;;;;:28:::2;:47::i;:::-;;13036:52;13079:8;13036:19;:38;13056:17;:11;:15;:17::i;:::-;13036:38;;;;;;;;;;;:42;;:52;;;;:::i;:::-;;13134:8;-1:-1:-1::0;;;;;13107:49:147::2;;13144:11;13107:49;;;;;;:::i;:::-;;;;;;;;-1:-1:-1::0;;;;;13215:28:147;::::2;;::::0;;;:18:::2;:28;::::0;;;;13276:4:::2;::::0;13244:17:::2;:11:::0;:15:::2;:17::i;:::-;13215:47:::0;;::::2;::::0;::::2;::::0;;;;;;-1:-1:-1;13215:47:147;:65;;-1:-1:-1;;13215:65:147::2;::::0;::::2;;::::0;;;::::2;::::0;;-1:-1:-1;;12530:3:147::2;12476:815;;;-1:-1:-1::0;13395:27:147::2;13411:10;;::::0;::::2;:6:::0;:10:::2;:::i;13395:27::-;-1:-1:-1::0;;;;;13395:44:147::2;;13440:8:::0;13450:10:::2;;::::0;::::2;:6:::0;:10:::2;:::i;:::-;13462:21;;::::0;::::2;:6:::0;:21:::2;:::i;:::-;13485:11;;::::0;::::2;:6:::0;:11:::2;:::i;:::-;13395:102;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;34440:173:::0;34533:7;34559:47;:19;:38;34579:17;:11;:15;:17::i;:::-;34559:38;;;;;;;;;;;:45;:47::i;18047:649::-;18208:3;713:22:180;727:7;713:13;:22::i;:::-;705:53;;;;-1:-1:-1;;;705:53:180;;;;;;;;;;;;18256:31:147::1;::::0;;;;::::1;::::0;;-1:-1:-1;;;;;18256:31:147;::::1;::::0;;;::::1;::::0;;::::1;;::::0;;::::1;::::0;;;18223:30:::1;18305:18:::0;;;:13:::1;:18:::0;;;;;;18256:31;;18305:43:::1;::::0;:18;:27:::1;:43;:::i;:::-;18297:74;;;;-1:-1:-1::0;;;18297:74:147::1;;;;;;;;;;;;18382:22;18407:17;:11;:15;:17::i;:::-;18382:42:::0;-1:-1:-1;18439:9:147::1;18434:256;18454:21:::0;;::::1;18434:256;;;18504:69;18558:10;;18569:1;18558:13;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;18504:38;::::0;;;:22:::1;:38;::::0;;;;;:45:::1;:69::i;:::-;18496:106;;;;-1:-1:-1::0;;;18496:106:147::1;;;;;;;;;;;;18621:58;18652:11;18665:10;;18676:1;18665:13;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;18621:58;;;;;;;:::i;:::-;;;;;;;;18477:3;;18434:256;;32763:495:::0;-1:-1:-1;;;;;32902:30:147;;32844:4;32902:30;;;:20;:30;;;;;;;;32868:64;;;;;;;;;;;;;;;;;-1:-1:-1;;;32868:64:147;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;32868:64:147;;;;;;;;;;32844:4;;32868:64;;;;33085:21;;;;:57;;;33126:4;:16;;;33110:32;;:12;:32;;33085:57;33081:139;;;-1:-1:-1;;33166:17:147;;;;33205:4;33081:139;33238:5;33245;;-1:-1:-1;32763:495:147;-1:-1:-1;;;32763:495:147:o;26874:139::-;-1:-1:-1;;;;;26979:18:147;;26953:7;26979:18;;;:13;:18;;;;;:27;;:25;:27::i;27515:377::-;-1:-1:-1;;;;;27698:29:147;;27672:23;27698:29;;;:19;:29;;;;;27642:18;;27672:23;27698:57;;27672:23;27728:17;:11;:15;:17::i;27698:57::-;27672:83;27515:377;-1:-1:-1;;;;27515:377:147:o;1649:188::-;3279:19:30;3302:13;;;;;;3301:14;;3347:34;;;;-1:-1:-1;3365:12:30;;3380:1;3365:12;;;;:16;3347:34;3346:108;;;-1:-1:-1;3426:4:30;1713:19:38;:23;;;3387:66:30;;-1:-1:-1;3436:12:30;;;;;:17;3387:66;3325:201;;;;-1:-1:-1;;;3325:201:30;;38276:2:281;3325:201:30;;;38258:21:281;38315:2;38295:18;;;38288:30;38354:34;38334:18;;;38327:62;-1:-1:-1;;;38405:18:281;;;38398:44;38459:19;;3325:201:30;;;;;;;;;3536:12;:16;;-1:-1:-1;;3536:16:30;3551:1;3536:16;;;3562:65;;;;3596:13;:20;;-1:-1:-1;;3596:20:30;;;;;3562:65;1751:37:147::1;1768:19;1751:16;:37::i;:::-;1798:32;1817:12;1798:18;:32::i;:::-;3651:14:30::0;3647:99;;;3697:5;3681:21;;-1:-1:-1;;3681:21:30;;;3721:14;;-1:-1:-1;38641:36:281;;3721:14:30;;38629:2:281;38614:18;3721:14:30;;;;;;;;3647:99;3269:483;1649:188:147;;:::o;15541:405::-;15626:3;713:22:180;727:7;713:13;:22::i;:::-;705:53;;;;-1:-1:-1;;;705:53:180;;;;;;;;;;;;15791:26:147::1;::::0;-1:-1:-1;;;15791:26:147;;-1:-1:-1;;;;;8971:32:281;;;15791:26:147::1;::::0;::::1;8953:51:281::0;15791:21:147;::::1;::::0;::::1;::::0;8926:18:281;;15791:26:147::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15783:58;;;;-1:-1:-1::0;;;15783:58:147::1;;;;;;;;;;;;-1:-1:-1::0;;;;;15852:18:147;;::::1;;::::0;;;:13:::1;:18;::::0;;;;:30;;-1:-1:-1;;;;;;15852:30:147::1;::::0;;::::1;::::0;;;::::1;::::0;;15897:42:::1;15852:18:::0;15918:20:::1;15852:18:::0;15918:15:::1;:20::i;:::-;15897:42;::::0;;-1:-1:-1;;;;;38903:32:281;;;38885:51;;38972:32;;;;38967:2;38952:18;;38945:60;38858:18;15897:42:147::1;38688:323:281::0;2314:198:24;1334:13;:11;:13::i;:::-;-1:-1:-1;;;;;2402:22:24;::::1;2394:73;;;::::0;-1:-1:-1;;;2394:73:24;;39218:2:281;2394:73:24::1;::::0;::::1;39200:21:281::0;39257:2;39237:18;;;39230:30;39296:34;39276:18;;;39269:62;-1:-1:-1;;;39347:18:281;;;39340:36;39393:19;;2394:73:24::1;39016:402:281::0;2394:73:24::1;2477:28;2496:8;2477:18;:28::i;:::-;2314:198:::0;:::o;3926:454:182:-;2620:14;-1:-1:-1;;;;;2620:23:182;;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2606:39:182;:10;-1:-1:-1;;;;;2606:39:182;;2598:64;;;;-1:-1:-1;;;2598:64:182;;;;;;;;;;;;4044:7:::1;::::0;4238:20;::::1;4215:16:::0;::::1;4189:43:::0;::::1;4188:71;4180:106;;;;-1:-1:-1::0;;;4180:106:182::1;;;;;;;;;;;;4296:7;:25:::0;;;4336:37:::1;::::0;16182:25:281;;;4345:10:182::1;::::0;4336:37:::1;::::0;16170:2:281;16155:18;4336:37:182::1;;;;;;;4004:376;3926:454:::0;:::o;353:154:177:-;426:7;477:2;:6;;;492:2;:5;;;485:13;;460:39;;;;;;;;39854:2:281;39850:15;;;;-1:-1:-1;;39846:53:281;39834:66;;39956:3;39934:16;-1:-1:-1;;;;;;39930:59:281;39925:2;39916:12;;39909:81;40015:2;40006:12;;39679:345;460:39:177;;;;;;;;;;;;;452:48;;;:::i;23044:1185:147:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23267:175:147;;;;;;;-1:-1:-1;;;;;23308:30:147;;;;;:20;:30;;;;;:40;;;;;;;;;;;-1:-1:-1;;;23267:175:147;;23308:49;;:47;:49::i;:::-;-1:-1:-1;;;;;23267:175:147;;;;;-1:-1:-1;;;;;23392:29:147;;;;;;;:19;23267:175;23392:29;;;;;;;:39;;;;;;;;;;;;;;;23267:175;;;;;;;23484:21;;;:11;:21;;;;;:37;;;;;;;;:47;;;;;;;;;;23453:78;;;;;;;;;;;;;;-1:-1:-1;;;23453:78:147;;;;;;;;;;;-1:-1:-1;;;23453:78:147;;;;;;;;;;;23240:202;;-1:-1:-1;23616:12:147;:37;23612:93;;;23677:4;;-1:-1:-1;23683:10:147;-1:-1:-1;23669:25:147;;23612:93;23819:63;23830:10;:27;;;23859:10;:22;;;23819:10;:63::i;:::-;-1:-1:-1;;;;;23789:93:147;;;23974:22;;;;23789:27;23974:26;;;;;;23970:144;;;24043:60;24054:4;:24;;;24080:10;:22;;;24043:10;:60::i;:::-;-1:-1:-1;;;;;24016:87:147;:24;;;:87;23970:144;24149:1;24124:22;;;:26;;;24160:22;;;:26;24205:4;;-1:-1:-1;24124:10:147;-1:-1:-1;23044:1185:147;;;;;;;:::o;4806:157:182:-;4887:7;:22;;;4924:32;;16182:25:281;;;4931:10:182;;4924:32;;16170:2:281;16155:18;4924:32:182;;;;;;;4806:157;:::o;6639:115:86:-;6702:7;6728:19;6736:3;4545:18;;4463:107;7096:129;7170:7;7196:22;7200:3;7212:5;7196:3;:22::i;11306:144::-;11383:4;4351:19;;;:12;;;:19;;;;;;:24;;11406:37;4255:127;1080:175:180;1175:73;;-1:-1:-1;;;1175:73:180;;-1:-1:-1;;;;;40578:32:281;;;1175:73:180;;;40560:51:281;1213:10:180;40627:18:281;;;40620:60;1233:4:180;40696:18:281;;;40689:60;1152:4:180;1240:7;;-1:-1:-1;;;;;;1240:7:180;40765:18:281;;;40758:61;1152:4:180;1175:20;:28;;;;;;40532:19:281;;1175:73:180;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;10793:129:86:-;10860:4;10883:32;10888:3;10908:5;10883:4;:32::i;8305:150::-;8375:4;8398:50;8403:3;-1:-1:-1;;;;;8423:23:86;;8398:4;:50::i;3045:154:179:-;3130:6;3162:29;3170:4;552::178;3162:7:179;:29::i;26618:134:147:-;26681:6;26721:22;26742:1;-1:-1:-1;;;;;26728:10:147;;26721:22;:::i;1680:110:178:-;1741:7;1767:16;:1;552:4;1781:1;1767:8;:16::i;1564:110::-;1625:7;1651:16;:1;1660;552:4;1651:8;:16::i;21323:411:147:-;-1:-1:-1;;;;;21477:28:147;;21426:4;21477:28;;;:18;:28;;;;;21426:4;;;21506:17;:11;:15;:17::i;:::-;21477:47;;;;;;;;;;;;;;-1:-1:-1;21477:47:147;21442:82;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;21442:82:147;21669:58;;-1:-1:-1;21706:21:147;;;21690:37;;:12;:37;;;21662:65;-1:-1:-1;;;21323:411:147:o;8860:165:86:-;-1:-1:-1;;;;;8993:23:86;;8940:4;4351:19;;;:12;;;:19;;;;;;:24;;8963:55;4255:127;2120:135:178;2188:7;2214:34;:1;2223;552:4;2231:16;2214:8;:34::i;24235:1893:147:-;24638:24;;;;;-1:-1:-1;;;;;24595:29:147;;;;;;;:19;:29;;;;;;:39;;;;;;;;;;;;;-1:-1:-1;;;;;24595:39:147;;;:67;;;24591:255;;24720:24;;;;;;-1:-1:-1;;;;;24678:29:147;;;;;;;:19;:29;;;;;;:39;;;;;;;;;;;;;:66;;-1:-1:-1;;24678:66:147;-1:-1:-1;;;;;24678:66:147;;;;;;24810:24;;24763:72;;41049:51:281;;;41116:18;;;41109:60;;;;41205:31;;41185:18;;;41178:59;24763:72:147;;41037:2:281;41022:18;24763:72:147;;;;;;;24591:255;-1:-1:-1;;;;;25171:21:147;;;;;;;:11;:21;;;;;;;;:37;;;;;;;;:47;;;;;;;;;;;;:60;;;;;;;;;;;;;;-1:-1:-1;;;25171:60:147;-1:-1:-1;;;;;;;;;25171:60:147;;-1:-1:-1;;;25171:60:147;-1:-1:-1;;;;;;25171:60:147;;;-1:-1:-1;;;;;25171:60:147;;;;;;;;;;;;;;;;;;;;25353:27;25349:773;;-1:-1:-1;;;;;25540:29:147;;;;;;:19;:29;;;;;;;;:45;;;;;;;;:68;;25598:8;25540:49;:68::i;:::-;-1:-1:-1;;;;;;25622:23:147;;;;;;:13;:23;;;;;:43;;25650:14;25622:27;:43::i;:::-;;25349:773;;;25686:27;;-1:-1:-1;;;;;25686:32:147;:27;:32;25682:440;;-1:-1:-1;;;;;25882:29:147;;;;;;:19;:29;;;;;;;;:45;;;;;;;;:71;;25943:8;25882:52;:71::i;:::-;-1:-1:-1;;;;;;25972:29:147;;;;;;:19;:29;;;;;;;;:45;;;;;;;;:54;;:52;:54::i;:::-;26030:1;25972:59;25968:144;;-1:-1:-1;;;;;26051:23:147;;;;;;:13;:23;;;;;:46;;26082:14;26051:30;:46::i;26134:286::-;-1:-1:-1;;;;;26244:30:147;;;;;;;:20;:30;;;;;;;;:40;;;;;;;;;:98;;26303:12;26325:15;26244:45;:98::i;:::-;26357:56;;;-1:-1:-1;;;;;41067:32:281;;;41049:51;;41136:32;;41131:2;41116:18;;41109:60;-1:-1:-1;;;;;41205:31:281;;41185:18;;;41178:59;;;;26357:56:147;;41037:2:281;41022:18;26357:56:147;40830:413:281;10259:300:86;10322:16;10350:22;10375:19;10383:3;10375:7;:19::i;19083:1209:147:-;-1:-1:-1;;;;;19237:27:147;;;19192:18;19237:27;;;:17;:27;;;;;;;;:37;;;;;;;;;;;5684:12:85;;;;;-1:-1:-1;;;5663:10:85;;;;;5656:41;19294:992:147;19310:1;19301:6;:10;:37;;;;;19328:10;19315:23;;:10;:23;19301:37;19294:992;;;-1:-1:-1;;;;;19379:27:147;;;19354:22;19379:27;;;:17;:27;;;;;;;;:37;;;;;;;;;;;:45;;:43;:45::i;:::-;19354:70;;19439:24;19465:28;19513:57;19535:8;19545:14;19561:8;19513:21;:57::i;:::-;19438:132;;;;19771:10;:22;;;19756:37;;:12;:37;19752:81;;;19813:5;;;;;19752:81;20035:75;20057:8;20067:14;20083:8;20093:4;20099:10;20035:21;:75::i;:::-;-1:-1:-1;;;;;20179:27:147;;;;;;;:17;:27;;;;;;;;:37;;;;;;;;;:48;;:46;:48::i;:::-;-1:-1:-1;20241:12:147;;;:::i;:::-;;-1:-1:-1;20267:8:147;;;:::i;:::-;;;19340:946;;;19294:992;;20618:615;-1:-1:-1;;;;;20732:30:147;;20698:31;20732:30;;;:20;:30;;;;;;;;;20698:64;;;;;;;;;;;;;;;;-1:-1:-1;;;20698:64:147;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;20698:64:147;;;;;;;;;;20848:21;;;;:57;;;20889:4;:16;;;20873:32;;:12;:32;;20848:57;20844:149;;;20934:17;;;;20921:30;;;;20978:4;20965:10;;;:17;20844:149;21003:25;;;:17;;;:25;21057:53;21080:30;21064:12;21057:53;:::i;:::-;21038:72;;;;:16;;;;:72;;;-1:-1:-1;;;;;21121:30:147;;;;;;:20;:30;;;;;;;;;:37;;;;;;;;;;;;;;;;;-1:-1:-1;;21121:37:147;;;;;;;-1:-1:-1;;;21121:37:147;;;;;;;;-1:-1:-1;;21121:37:147;;;;;;;;;-1:-1:-1;;21121:37:147;;;;;-1:-1:-1;;;21121:37:147;;;;;;;;;21173:53;;41727:51:281;;;41814:23;;;41794:18;;;41787:51;;;;41854:18;;;41847:51;;;;21173:53:147;;41700:18:281;21173:53:147;41529:375:281;4606:324:85;4684:13;4758:10;4771:66;4812:24;4830:5;4812:17;:24::i;:::-;4796:12;;4789:47;;;4796:12;;4789:47;:::i;:::-;4771:17;:66::i;:::-;4858:10;;4758:79;;-1:-1:-1;;;;4858:10:85;;;;;;4851:17;;;;;4847:43;;4877:13;;-1:-1:-1;;;4877:13:85;;;;;;;;;;;4847:43;4907:16;;;;;;:11;;;;;:16;;-1:-1:-1;;4907:16:85;;;;;4606:324::o;6210:129:86:-;6283:4;6306:26;6314:3;6326:5;6306:7;:26::i;8623:156::-;8696:4;8719:53;8727:3;-1:-1:-1;;;;;8747:23:86;;8719:7;:53::i;1599:130:24:-;1513:6;;-1:-1:-1;;;;;1513:6:24;929:10:39;1662:23:24;1654:68;;;;-1:-1:-1;;;1654:68:24;;42332:2:281;1654:68:24;;;42314:21:281;;;42351:18;;;42344:30;42410:34;42390:18;;;42383:62;42462:18;;1654:68:24;42130:356:281;2666:187:24;2758:6;;;-1:-1:-1;;;;;2774:17:24;;;-1:-1:-1;;;;;;2774:17:24;;;;;;;2806:40;;2758:6;;;2774:17;2758:6;;2806:40;;2739:16;;2806:40;2729:124;2666:187;:::o;2408:167:179:-;2496:6;2528:39;2541:4;2558:3;552:4:178;2528:12:179;:39::i;21837:717:147:-;22038:4;22217:69;22276:8;22217:22;:41;22240:17;:11;:15;:17::i;22217:69::-;:204;;;;;22402:19;22217:204;:330;;;;-1:-1:-1;;22515:27:147;;-1:-1:-1;;;;;22515:32:147;;;;22094:453;-1:-1:-1;;;21837:717:147:o;26426:186::-;26515:6;26540:65;-1:-1:-1;;;;;26579:25:147;;;;26547:21;;26540:65;:::i;4912:118:86:-;4979:7;5005:3;:11;;5017:5;5005:18;;;;;;;;:::i;:::-;;;;;;;;;4998:25;;4912:118;;;;:::o;2214:404::-;2277:4;4351:19;;;:12;;;:19;;;;;;2293:319;;-1:-1:-1;2335:23:86;;;;;;;;:11;:23;;;;;;;;;;;;;2515:18;;2493:19;;;:12;;;:19;;;;;;:40;;;;2547:11;;2293:319;-1:-1:-1;2596:5:86;2589:12;;5358:230:179;5482:16;;5449:7;;5515:8;;:66;;5541:33;5555:9;5566:7;5572:1;5566:3;:7;:::i;:::-;6597:23;6655:20;;;6720:4;6707:18;;;6703:28;;6514:233;5541:33;:40;-1:-1:-1;;;5541:40:179;;-1:-1:-1;;;;;5541:40:179;5515:66;;;-1:-1:-1;5526:12:179;;5358:230;-1:-1:-1;;5358:230:179:o;1667:4213:82:-;1749:14;;;-1:-1:-1;;2286:1:82;2283;2276:20;2329:1;2326;2322:9;2313:18;;2384:5;2380:2;2377:13;2369:5;2365:2;2361:14;2357:34;2348:43;;;2486:5;2495:1;2486:10;2482:368;;2824:11;2816:5;:19;;;;;:::i;:::-;;2809:26;;;;;;2482:368;2974:5;2960:11;:19;2952:53;;;;-1:-1:-1;;;2952:53:82;;43079:2:281;2952:53:82;;;43061:21:281;43118:2;43098:18;;;43091:30;-1:-1:-1;;;43137:18:281;;;43130:51;43198:18;;2952:53:82;42877:345:281;2952:53:82;3261:17;3396:11;3393:1;3390;3383:25;4774:1;3944;3929:12;;:16;;3914:32;;4049:22;;;;4755:1;:15;;4754:21;;5007;;;5003:25;;4992:36;5076:21;;;5072:25;;5061:36;5146:21;;;5142:25;;5131:36;5216:21;;;5212:25;;5201:36;5286:21;;;5282:25;;5271:36;5357:21;;;5353:25;;;5342:36;;;3899:12;4294;;;4290:23;;;4286:31;;;3510:20;;;3499:32;;;4406:12;;;;3557:21;;4147:16;;;;4397:21;;;;5821:15;;;-1:-1:-1;;;;1667:4213:82:o;6012:299::-;6113:7;6132:14;6149:25;6156:1;6159;6162:11;6149:6;:25::i;:::-;6132:42;-1:-1:-1;6200:11:82;6188:8;:23;;;;;;;;:::i;:::-;;:56;;;;;6243:1;6228:11;6215:25;;;;;:::i;:::-;6225:1;6222;6215:25;:29;6188:56;6184:98;;;6260:11;6270:1;6260:11;;:::i;:::-;;6298:6;-1:-1:-1;;;;;;6012:299:82:o;1700:134:179:-;1791:36;1799:4;1816:3;-1:-1:-1;;;;;1791:36:179;;:7;:36::i;5570:109:86:-;5626:16;5661:3;:11;;5654:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5570:109;;;:::o;3759:212:85:-;3825:13;3854:12;3860:5;5888:12;;;;;-1:-1:-1;;;5874:10:85;;;;;:26;;;5785:122;3854:12;3850:32;;;3875:7;;-1:-1:-1;;;3875:7:85;;;;;;;;;;;3850:32;-1:-1:-1;3912:12:85;;;;3892:17;3941:23;;;3912:12;3941:11;;;:23;;;;;;;3759:212::o;3295:324::-;3359:13;3388:12;3394:5;5888:12;;;;;-1:-1:-1;;;5874:10:85;;;;;:26;;;5785:122;3388:12;3384:32;;;3409:7;;-1:-1:-1;;;3409:7:85;;;;;;;;;;;3384:32;-1:-1:-1;3446:12:85;;;;3426:17;3476:23;;;3446:12;3476:11;;;:23;;;;;;;3509:30;;;3573:29;;-1:-1:-1;;3573:29:85;3588:14;;-1:-1:-1;;;;;3573:29:85;;;;;;;;3476:23;3295:324::o;34781:297:83:-;34837:6;-1:-1:-1;;;;;34962:5:83;:34;;34954:87;;;;-1:-1:-1;;;34954:87:83;;43691:2:281;34954:87:83;;;43673:21:281;43730:2;43710:18;;;43703:30;43769:34;43749:18;;;43742:62;-1:-1:-1;;;43820:18:281;;;43813:38;43868:19;;34954:87:83;43489:404:281;34954:87:83;-1:-1:-1;35065:5:83;34781:297::o;26101:198::-;26205:5;26229:19;;;;;;26221:71;;;;-1:-1:-1;;;26221:71:83;;44100:2:281;26221:71:83;;;44082:21:281;44139:2;44119:18;;;44112:30;44178:34;44158:18;;;44151:62;-1:-1:-1;;;44229:18:281;;;44222:37;44276:19;;26221:71:83;43898:403:281;26221:71:83;26101:198;;;:::o;2786:1388:86:-;2852:4;2989:19;;;:12;;;:19;;;;;;3023:15;;3019:1149;;3392:21;3416:14;3429:1;3416:10;:14;:::i;:::-;3464:18;;3392:38;;-1:-1:-1;3444:17:86;;3464:22;;3485:1;;3464:22;:::i;:::-;3444:42;;3518:13;3505:9;:26;3501:398;;3551:17;3571:3;:11;;3583:9;3571:22;;;;;;;;:::i;:::-;;;;;;;;;3551:42;;3722:9;3693:3;:11;;3705:13;3693:26;;;;;;;;:::i;:::-;;;;;;;;;;;;:38;;;;3805:23;;;:12;;;:23;;;;;:36;;;3501:398;3977:17;;:3;;:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;4069:3;:12;;:19;4082:5;4069:19;;;;;;;;;;;4062:26;;;4110:4;4103:11;;;;;;;3019:1149;4152:5;4145:12;;;;;4889:343:179;5060:16;;5027:7;;;5100:42;5060:9;5130:3;5027:7;5060:16;5100:18;:42::i;:::-;5086:56;-1:-1:-1;5159:8:179;;:66;;5185:33;5199:9;5210:7;5216:1;5210:3;:7;:::i;5185:33::-;:40;-1:-1:-1;;;5185:40:179;;-1:-1:-1;;;;;5185:40:179;5159:66;;;-1:-1:-1;5170:12:179;;5152:73;-1:-1:-1;;;;4889:343:179:o;4054:667::-;4155:11;;4181:7;;4177:422;;4278:20;4301:28;4315:4;4321:7;4327:1;4321:3;:7;:::i;4301:28::-;4278:51;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4278:51:179;;;-1:-1:-1;;;;;4278:51:179;;;;;;;-1:-1:-1;4351:16:179;;;-1:-1:-1;4351:16:179;4343:52;;;;-1:-1:-1;;;4343:52:179;;;;;;;;;;;;4471:9;;:16;;;;;;;4467:122;;4545:5;4507:28;4521:4;4527:7;4533:1;4527:3;:7;:::i;4507:28::-;:43;;-1:-1:-1;;;;;4507:43:179;;;;-1:-1:-1;;;4507:43:179;;;;;;;;;;;-1:-1:-1;;;;;4054:667:179:o;4467:122::-;4190:409;4177:422;-1:-1:-1;4677:36:179;;;;;;;;;;;;;;;-1:-1:-1;;;;;4677:36:179;;;;;;;;;;4667:47;;;;;;;-1:-1:-1;4667:47:179;;;;;;;;;;;;-1:-1:-1;;;4667:47:179;;;;;;;;;4054:667::o;5932:439::-;6084:7;6103:241;6116:4;6110:3;:10;6103:241;;;6136:11;6150:34;6174:3;6179:4;6150:23;:34::i;:::-;6597:23;6655:20;;;6720:4;6707:18;;6136:48;;-1:-1:-1;6202:35:179;;;;6703:28;;6202:29;;;:35;6198:136;;;6264:3;6257:10;;6198:136;;;6312:7;:3;6318:1;6312:7;:::i;:::-;6306:13;;6198:136;6122:222;6103:241;;816:153:45;878:7;951:11;961:1;952:5;;;951:11;:::i;:::-;941:21;;942:5;;;941:21;:::i;14:131:281:-;-1:-1:-1;;;;;89:31:281;;79:42;;69:70;;135:1;132;125:12;150:127;211:10;206:3;202:20;199:1;192:31;242:4;239:1;232:15;266:4;263:1;256:15;282:253;354:2;348:9;396:4;384:17;;-1:-1:-1;;;;;416:34:281;;452:22;;;413:62;410:88;;;478:18;;:::i;:::-;514:2;507:22;282:253;:::o;540:275::-;611:2;605:9;676:2;657:13;;-1:-1:-1;;653:27:281;641:40;;-1:-1:-1;;;;;696:34:281;;732:22;;;693:62;690:88;;;758:18;;:::i;:::-;794:2;787:22;540:275;;-1:-1:-1;540:275:281:o;820:163::-;887:20;;947:10;936:22;;926:33;;916:61;;973:1;970;963:12;988:578;1046:5;1094:4;1082:9;1077:3;1073:19;1069:30;1066:50;;;1112:1;1109;1102:12;1066:50;1165:4;1159:11;;;1197:17;;-1:-1:-1;;;;;1229:34:281;;1265:22;;;1226:62;1223:88;;;1291:18;;:::i;:::-;1327:4;1320:24;1362:6;-1:-1:-1;1362:6:281;1392:23;;1424:33;1392:23;1424:33;:::i;:::-;1466:23;;1522:37;1555:2;1540:18;;1522:37;:::i;:::-;1517:2;1509:6;1505:15;1498:62;;988:578;;;;:::o;1571:532::-;1697:6;1705;1713;1766:3;1754:9;1745:7;1741:23;1737:33;1734:53;;;1783:1;1780;1773:12;1734:53;1822:9;1809:23;1841:31;1866:5;1841:31;:::i;:::-;1891:5;-1:-1:-1;1915:58:281;1965:7;1960:2;1945:18;;1915:58;:::i;:::-;1905:68;;2025:2;2014:9;2010:18;1997:32;2038:33;2063:7;2038:33;:::i;:::-;2090:7;2080:17;;;1571:532;;;;;:::o;2378:257::-;2188:12;;-1:-1:-1;;;;;2184:37:281;2172:50;;2286:4;2275:16;;;2269:23;2265:2;2254:39;2238:14;;;2231:63;2347:4;2336:16;;;2330:23;2355:10;2326:40;2310:14;;;2303:64;2570:2;2555:18;;2582:47;2108:265;2640:226;2699:6;2752:2;2740:9;2731:7;2727:23;2723:32;2720:52;;;2768:1;2765;2758:12;2720:52;-1:-1:-1;2813:23:281;;2640:226;-1:-1:-1;2640:226:281:o;2871:247::-;2930:6;2983:2;2971:9;2962:7;2958:23;2954:32;2951:52;;;2999:1;2996;2989:12;2951:52;3038:9;3025:23;3057:31;3082:5;3057:31;:::i;3123:195::-;3204:12;;-1:-1:-1;;;;;3200:38:281;3188:51;;3292:4;3281:16;;;3275:23;3300:10;3271:40;3255:14;;3248:64;3123:195::o;3323:454::-;3387:3;3425:5;3419:12;3452:6;3447:3;3440:19;3484:4;3479:3;3475:14;3468:21;;3523:4;3516:5;3512:16;3546:1;3556:196;3570:6;3567:1;3564:13;3556:196;;;3619:49;3664:3;3655:6;3649:13;3619:49;:::i;:::-;3697:4;3688:14;;;;;3737:4;3725:17;;;;;3592:1;3585:9;3556:196;;;-1:-1:-1;3768:3:281;;3323:454;-1:-1:-1;;;;3323:454:281:o;3782:332::-;4021:2;4010:9;4003:21;3984:4;4041:67;4104:2;4093:9;4089:18;4081:6;4041:67;:::i;4119:236::-;4208:6;4261:2;4249:9;4240:7;4236:23;4232:32;4229:52;;;4277:1;4274;4267:12;4229:52;4300:49;4341:7;4330:9;4300:49;:::i;4552:391::-;4639:8;4649:6;4703:3;4696:4;4688:6;4684:17;4680:27;4670:55;;4721:1;4718;4711:12;4670:55;-1:-1:-1;4744:20:281;;-1:-1:-1;;;;;4776:30:281;;4773:50;;;4819:1;4816;4809:12;4773:50;4856:4;4848:6;4844:17;4832:29;;4916:3;4909:4;4899:6;4896:1;4892:14;4884:6;4880:27;4876:38;4873:47;4870:67;;;4933:1;4930;4923:12;4948:632;5079:6;5087;5095;5148:2;5136:9;5127:7;5123:23;5119:32;5116:52;;;5164:1;5161;5154:12;5116:52;5203:9;5190:23;5222:31;5247:5;5222:31;:::i;:::-;5272:5;-1:-1:-1;5328:2:281;5313:18;;5300:32;-1:-1:-1;;;;;5344:30:281;;5341:50;;;5387:1;5384;5377:12;5341:50;5426:94;5512:7;5503:6;5492:9;5488:22;5426:94;:::i;:::-;4948:632;;5539:8;;-1:-1:-1;5400:120:281;;-1:-1:-1;;;;4948:632:281:o;5782:183::-;5842:4;-1:-1:-1;;;;;5867:6:281;5864:30;5861:56;;;5897:18;;:::i;:::-;-1:-1:-1;5942:1:281;5938:14;5954:4;5934:25;;5782:183::o;5970:744::-;6024:5;6077:3;6070:4;6062:6;6058:17;6054:27;6044:55;;6095:1;6092;6085:12;6044:55;6135:6;6122:20;6162:64;6178:47;6218:6;6178:47;:::i;:::-;6162:64;:::i;:::-;6250:3;6274:6;6269:3;6262:19;6306:4;6301:3;6297:14;6290:21;;6367:4;6357:6;6354:1;6350:14;6342:6;6338:27;6334:38;6320:52;;6395:3;6387:6;6384:15;6381:35;;;6412:1;6409;6402:12;6381:35;6448:4;6440:6;6436:17;6462:221;6478:6;6473:3;6470:15;6462:221;;;6560:3;6547:17;6577:31;6602:5;6577:31;:::i;:::-;6621:18;;6668:4;6659:14;;;;6495;6462:221;;;-1:-1:-1;6701:7:281;5970:744;-1:-1:-1;;;;;5970:744:281:o;6719:807::-;6903:6;6911;6919;6927;6980:3;6968:9;6959:7;6955:23;6951:33;6948:53;;;6997:1;6994;6987:12;6948:53;7020:49;7061:7;7050:9;7020:49;:::i;:::-;7010:59;;7120:2;7109:9;7105:18;7092:32;-1:-1:-1;;;;;7139:6:281;7136:30;7133:50;;;7179:1;7176;7169:12;7133:50;7202:61;7255:7;7246:6;7235:9;7231:22;7202:61;:::i;:::-;7192:71;;;7316:2;7305:9;7301:18;7288:32;-1:-1:-1;;;;;7335:8:281;7332:32;7329:52;;;7377:1;7374;7367:12;7329:52;7400:63;7455:7;7444:8;7433:9;7429:24;7400:63;:::i;:::-;7390:73;;;7482:38;7515:3;7504:9;7500:19;7482:38;:::i;:::-;7472:48;;6719:807;;;;;;;:::o;7531:420::-;7584:3;7622:5;7616:12;7649:6;7644:3;7637:19;7681:4;7676:3;7672:14;7665:21;;7720:4;7713:5;7709:16;7743:1;7753:173;7767:6;7764:1;7761:13;7753:173;;;7828:13;;7816:26;;7871:4;7862:14;;;;7899:17;;;;7789:1;7782:9;7753:173;;7956:823;8148:4;8196:2;8185:9;8181:18;8226:2;8215:9;8208:21;8249:6;8284;8278:13;8315:6;8307;8300:22;8353:2;8342:9;8338:18;8331:25;;8415:2;8405:6;8402:1;8398:14;8387:9;8383:30;8379:39;8365:53;;8453:2;8445:6;8441:15;8474:1;8484:266;8498:6;8495:1;8492:13;8484:266;;;8591:2;8587:7;8575:9;8567:6;8563:22;8559:36;8554:3;8547:49;8619:51;8663:6;8654;8648:13;8619:51;:::i;:::-;8609:61;-1:-1:-1;8705:2:281;8728:12;;;;8693:15;;;;;8520:1;8513:9;8484:266;;;-1:-1:-1;8767:6:281;;7956:823;-1:-1:-1;;;;;;7956:823:281:o;9015:530::-;9118:6;9126;9179:2;9167:9;9158:7;9154:23;9150:32;9147:52;;;9195:1;9192;9185:12;9147:52;9234:9;9221:23;9253:31;9278:5;9253:31;:::i;:::-;9303:5;-1:-1:-1;9359:2:281;9344:18;;9331:32;-1:-1:-1;;;;;9375:30:281;;9372:50;;;9418:1;9415;9408:12;9372:50;9441:22;;9497:3;9479:16;;;9475:26;9472:46;;;9514:1;9511;9504:12;9472:46;9537:2;9527:12;;;9015:530;;;;;:::o;9550:407::-;9637:6;9645;9698:2;9686:9;9677:7;9673:23;9669:32;9666:52;;;9714:1;9711;9704:12;9666:52;9753:9;9740:23;9772:31;9797:5;9772:31;:::i;:::-;9822:5;-1:-1:-1;9879:2:281;9864:18;;9851:32;9892:33;9851:32;9892:33;:::i;9962:452::-;10025:3;10063:5;10057:12;10090:6;10085:3;10078:19;10122:4;10117:3;10113:14;10106:21;;10161:4;10154:5;10150:16;10184:1;10194:195;10208:6;10205:1;10202:13;10194:195;;;10257:48;10301:3;10292:6;10286:13;2188:12;;-1:-1:-1;;;;;2184:37:281;2172:50;;2286:4;2275:16;;;2269:23;2265:2;2254:39;2238:14;;;2231:63;2347:4;2336:16;;;2330:23;2355:10;2326:40;2310:14;;2303:64;2108:265;10257:48;10334:4;10325:14;;;;;10374:4;10362:17;;;;;10230:1;10223:9;10194:195;;10419:604;10794:2;10783:9;10776:21;10757:4;10820:67;10883:2;10872:9;10868:18;10860:6;10820:67;:::i;:::-;10935:9;10927:6;10923:22;10918:2;10907:9;10903:18;10896:50;10963:54;11010:6;11002;10963:54;:::i;11028:551::-;11092:3;11130:5;11124:12;11157:6;11152:3;11145:19;11189:4;11184:3;11180:14;11173:21;;11228:4;11221:5;11217:16;11251:1;11261:293;11275:6;11272:1;11269:13;11261:293;;;11334:13;;-1:-1:-1;;;;;11404:28:281;11392:41;;11469:4;11460:14;;;;11527:17;;;;11429:1;11290:9;11261:293;;11584:291;11782:2;11771:9;11764:21;11745:4;11802:67;11865:2;11854:9;11850:18;11842:6;11802:67;:::i;12119:502::-;12231:6;12239;12292:2;12280:9;12271:7;12267:23;12263:32;12260:52;;;12308:1;12305;12298:12;12260:52;12348:9;12335:23;-1:-1:-1;;;;;12373:6:281;12370:30;12367:50;;;12413:1;12410;12403:12;12367:50;12436:61;12489:7;12480:6;12469:9;12465:22;12436:61;:::i;:::-;12426:71;;;12547:2;12536:9;12532:18;12519:32;12560:31;12585:5;12560:31;:::i;12626:634::-;12814:2;12826:21;;;12896:13;;12799:18;;;12918:22;;;12766:4;;12997:15;;;12971:2;12956:18;;;12766:4;13040:194;13054:6;13051:1;13048:13;13040:194;;;13119:13;;-1:-1:-1;;;;;13115:38:281;13103:51;;13183:2;13209:15;;;;13174:12;;;;13076:1;13069:9;13040:194;;;-1:-1:-1;13251:3:281;;12626:634;-1:-1:-1;;;;;12626:634:281:o;13265:969::-;13414:6;13422;13430;13438;13446;13499:2;13487:9;13478:7;13474:23;13470:32;13467:52;;;13515:1;13512;13505:12;13467:52;13554:9;13541:23;13573:31;13598:5;13573:31;:::i;:::-;13623:5;-1:-1:-1;13679:2:281;13664:18;;13651:32;-1:-1:-1;;;;;13695:30:281;;13692:50;;;13738:1;13735;13728:12;13692:50;13777:94;13863:7;13854:6;13843:9;13839:22;13777:94;:::i;:::-;13890:8;;-1:-1:-1;13751:120:281;-1:-1:-1;;13978:2:281;13963:18;;13950:32;-1:-1:-1;;;;;13994:32:281;;13991:52;;;14039:1;14036;14029:12;13991:52;14078:96;14166:7;14155:8;14144:9;14140:24;14078:96;:::i;:::-;13265:969;;;;-1:-1:-1;13265:969:281;;-1:-1:-1;14193:8:281;;14052:122;13265:969;-1:-1:-1;;;13265:969:281:o;14239:687::-;14361:6;14369;14377;14385;14438:2;14426:9;14417:7;14413:23;14409:32;14406:52;;;14454:1;14451;14444:12;14406:52;14493:9;14480:23;14512:31;14537:5;14512:31;:::i;:::-;14562:5;-1:-1:-1;14586:37:281;14619:2;14604:18;;14586:37;:::i;:::-;14576:47;;14674:2;14663:9;14659:18;14646:32;-1:-1:-1;;;;;14693:6:281;14690:30;14687:50;;;14733:1;14730;14723:12;14687:50;14772:94;14858:7;14849:6;14838:9;14834:22;14772:94;:::i;:::-;14239:687;;;;-1:-1:-1;14885:8:281;-1:-1:-1;;;;14239:687:281:o;14931:502::-;15043:6;15051;15104:2;15092:9;15083:7;15079:23;15075:32;15072:52;;;15120:1;15117;15110:12;15072:52;15159:9;15146:23;15178:31;15203:5;15178:31;:::i;:::-;15228:5;-1:-1:-1;15284:2:281;15269:18;;15256:32;-1:-1:-1;;;;;15300:30:281;;15297:50;;;15343:1;15340;15333:12;15297:50;15366:61;15419:7;15410:6;15399:9;15395:22;15366:61;:::i;:::-;15356:71;;;14931:502;;;;;:::o;15438:319::-;15505:6;15513;15566:2;15554:9;15545:7;15541:23;15537:32;15534:52;;;15582:1;15579;15572:12;15534:52;15621:9;15608:23;15640:31;15665:5;15640:31;:::i;:::-;15690:5;-1:-1:-1;15714:37:281;15747:2;15732:18;;15714:37;:::i;:::-;15704:47;;15438:319;;;;;:::o;15762:269::-;15819:6;15872:2;15860:9;15851:7;15847:23;15843:32;15840:52;;;15888:1;15885;15878:12;15840:52;15927:9;15914:23;15977:4;15970:5;15966:16;15959:5;15956:27;15946:55;;15997:1;15994;15987:12;16218:371;16316:6;16324;16377:2;16365:9;16356:7;16352:23;16348:32;16345:52;;;16393:1;16390;16383:12;16345:52;16432:9;16419:23;16451:31;16476:5;16451:31;:::i;:::-;16501:5;-1:-1:-1;16525:58:281;16575:7;16570:2;16555:18;;16525:58;:::i;16799:164::-;16868:5;16913:2;16904:6;16899:3;16895:16;16891:25;16888:45;;;16929:1;16926;16919:12;16888:45;-1:-1:-1;16951:6:281;16799:164;-1:-1:-1;16799:164:281:o;16968:375::-;17064:6;17117:2;17105:9;17096:7;17092:23;17088:32;17085:52;;;17133:1;17130;17123:12;17085:52;17173:9;17160:23;-1:-1:-1;;;;;17198:6:281;17195:30;17192:50;;;17238:1;17235;17228:12;17192:50;17261:76;17329:7;17320:6;17309:9;17305:22;17261:76;:::i;18298:627::-;18449:6;18457;18465;18518:3;18506:9;18497:7;18493:23;18489:33;18486:53;;;18535:1;18532;18525:12;18486:53;18575:9;18562:23;-1:-1:-1;;;;;18600:6:281;18597:30;18594:50;;;18640:1;18637;18630:12;18594:50;18663:61;18716:7;18707:6;18696:9;18692:22;18663:61;:::i;:::-;18653:71;;;18743:58;18793:7;18788:2;18777:9;18773:18;18743:58;:::i;18930:329::-;19167:2;19156:9;19149:21;19130:4;19187:66;19249:2;19238:9;19234:18;19226:6;19187:66;:::i;19472:574::-;19592:6;19600;19608;19661:2;19649:9;19640:7;19636:23;19632:32;19629:52;;;19677:1;19674;19667:12;19629:52;19716:9;19703:23;19735:31;19760:5;19735:31;:::i;:::-;19785:5;-1:-1:-1;19841:2:281;19826:18;;19813:32;-1:-1:-1;;;;;19857:30:281;;19854:50;;;19900:1;19897;19890:12;19854:50;19923:61;19976:7;19967:6;19956:9;19952:22;19923:61;:::i;:::-;19913:71;;;20003:37;20036:2;20025:9;20021:18;20003:37;:::i;:::-;19993:47;;19472:574;;;;;:::o;20051:2630::-;20177:6;20185;20238:2;20226:9;20217:7;20213:23;20209:32;20206:52;;;20254:1;20251;20244:12;20206:52;20293:9;20280:23;20312:31;20337:5;20312:31;:::i;:::-;20362:5;-1:-1:-1;20418:2:281;20403:18;;20390:32;-1:-1:-1;;;;;20434:30:281;;20431:50;;;20477:1;20474;20467:12;20431:50;20500:22;;20553:4;20545:13;;20541:27;-1:-1:-1;20531:55:281;;20582:1;20579;20572:12;20531:55;20622:2;20609:16;20645:64;20661:47;20701:6;20661:47;:::i;20645:64::-;20731:3;20755:6;20750:3;20743:19;20787:2;20782:3;20778:12;20771:19;;20842:2;20832:6;20829:1;20825:14;20821:2;20817:23;20813:32;20799:46;;20868:7;20860:6;20857:19;20854:39;;;20889:1;20886;20879:12;20854:39;20921:2;20917;20913:11;20933:1718;20949:6;20944:3;20941:15;20933:1718;;;21035:3;21022:17;-1:-1:-1;;;;;21058:11:281;21055:35;21052:55;;;21103:1;21100;21093:12;21052:55;21130:20;;21202:4;21174:16;;;-1:-1:-1;;21170:30:281;21166:41;21163:61;;;21220:1;21217;21210:12;21163:61;21252:22;;:::i;:::-;21303:51;21346:7;21341:2;21337;21333:11;21303:51;:::i;:::-;21294:7;21287:68;21405:4;21401:2;21397:13;21384:27;-1:-1:-1;;;;;21430:8:281;21427:32;21424:52;;;21472:1;21469;21462:12;21424:52;21514:65;21571:7;21566:2;21555:8;21551:2;21547:17;21543:26;21514:65;:::i;:::-;21509:2;21500:7;21496:16;21489:91;;21630:4;21626:2;21622:13;21609:27;-1:-1:-1;;;;;21655:8:281;21652:32;21649:52;;;21697:1;21694;21687:12;21649:52;21747:2;21736:8;21732:2;21728:17;21724:26;21714:36;;;21792:7;21785:4;21781:2;21777:13;21773:27;21763:55;;21814:1;21811;21804:12;21763:55;21860:2;21847:16;21889:66;21905:49;21945:8;21905:49;:::i;21889:66::-;21983:5;22015:8;22008:5;22001:23;22057:2;22050:5;22046:14;22037:23;;22120:2;22108:8;22105:1;22101:16;22097:2;22093:25;22089:34;22073:50;;22152:7;22142:8;22139:21;22136:41;;;22173:1;22170;22163:12;22136:41;22211:2;22207;22203:11;22190:24;;22227:303;22245:8;22238:5;22235:19;22227:303;;;22341:5;22328:19;-1:-1:-1;;;;;22390:7:281;22386:32;22377:7;22374:45;22364:73;;22433:1;22430;22423:12;22364:73;22454:22;;22513:2;22266:14;;;;22502;;;;22227:303;;;22563:2;22550:16;;22543:33;-1:-1:-1;;22589:20:281;;-1:-1:-1;22638:2:281;22629:12;;;;20966;20933:1718;;;20937:3;22670:5;22660:15;;;;;;20051:2630;;;;;:::o;22686:722::-;22766:6;22774;22782;22835:2;22823:9;22814:7;22810:23;22806:32;22803:52;;;22851:1;22848;22841:12;22803:52;22890:9;22877:23;22909:31;22934:5;22909:31;:::i;:::-;22959:5;-1:-1:-1;23015:2:281;23000:18;;22987:32;-1:-1:-1;;;;;23031:30:281;;23028:50;;;23074:1;23071;23064:12;23028:50;23097:22;;23150:4;23142:13;;23138:27;-1:-1:-1;23128:55:281;;23179:1;23176;23169:12;23128:55;23219:2;23206:16;-1:-1:-1;;;;;23237:6:281;23234:30;23231:50;;;23277:1;23274;23267:12;23231:50;23322:7;23317:2;23308:6;23304:2;23300:15;23296:24;23293:37;23290:57;;;23343:1;23340;23333:12;23290:57;22686:722;;23374:2;23366:11;;;;;-1:-1:-1;23396:6:281;;-1:-1:-1;;;22686:722:281:o;23413:508::-;23516:6;23524;23577:2;23565:9;23556:7;23552:23;23548:32;23545:52;;;23593:1;23590;23583:12;23545:52;23632:9;23619:23;23651:31;23676:5;23651:31;:::i;:::-;23701:5;-1:-1:-1;23757:2:281;23742:18;;23729:32;-1:-1:-1;;;;;23773:30:281;;23770:50;;;23816:1;23813;23806:12;23770:50;23839:76;23907:7;23898:6;23887:9;23883:22;23839:76;:::i;24204:367::-;24272:6;24280;24333:2;24321:9;24312:7;24308:23;24304:32;24301:52;;;24349:1;24346;24339:12;24301:52;24388:9;24375:23;24407:31;24432:5;24407:31;:::i;:::-;24457:5;24535:2;24520:18;;;;24507:32;;-1:-1:-1;;;24204:367:281:o;25228:277::-;25295:6;25348:2;25336:9;25327:7;25323:23;25319:32;25316:52;;;25364:1;25361;25354:12;25316:52;25396:9;25390:16;25449:5;25442:13;25435:21;25428:5;25425:32;25415:60;;25471:1;25468;25461:12;25510:127;25571:10;25566:3;25562:20;25559:1;25552:31;25602:4;25599:1;25592:15;25626:4;25623:1;25616:15;25642:333;25744:4;25802:11;25789:25;25896:2;25892:7;25881:8;25865:14;25861:29;25857:43;25837:18;25833:68;25823:96;;25915:1;25912;25905:12;25823:96;25936:33;;;;;25642:333;-1:-1:-1;;25642:333:281:o;25980:184::-;26038:6;26091:2;26079:9;26070:7;26066:23;26062:32;26059:52;;;26107:1;26104;26097:12;26059:52;26130:28;26148:9;26130:28;:::i;26169:260::-;26363:2;26348:18;;26375:48;26352:9;26405:6;26375:48;:::i;26434:564::-;26546:4;26552:6;26612:11;26599:25;26706:2;26702:7;26691:8;26675:14;26671:29;26667:43;26647:18;26643:68;26633:96;;26725:1;26722;26715:12;26633:96;26752:33;;26804:20;;;-1:-1:-1;;;;;;26836:30:281;;26833:50;;;26879:1;26876;26869:12;26833:50;26912:4;26900:17;;-1:-1:-1;26963:1:281;26959:14;;;26943;26939:35;26929:46;;26926:66;;;26988:1;26985;26978:12;27274:376;27515:2;27500:18;;27527:48;27504:9;27557:6;27527:48;:::i;:::-;-1:-1:-1;;;;;27611:32:281;;;;27606:2;27591:18;;;;27584:60;27274:376;;-1:-1:-1;27274:376:281:o;27655:495::-;27931:2;27920:9;27913:21;27894:4;27957:56;28009:2;27998:9;27994:18;27986:6;27957:56;:::i;:::-;28061:9;28053:6;28049:22;28044:2;28033:9;28029:18;28022:50;28089:55;28137:6;28129;28089:55;:::i;28155:1704::-;28275:6;28328:2;28316:9;28307:7;28303:23;28299:32;28296:52;;;28344:1;28341;28334:12;28296:52;28377:9;28371:16;-1:-1:-1;;;;;28402:6:281;28399:30;28396:50;;;28442:1;28439;28432:12;28396:50;28465:22;;28518:4;28510:13;;28506:27;-1:-1:-1;28496:55:281;;28547:1;28544;28537:12;28496:55;28580:2;28574:9;28603:64;28619:47;28659:6;28619:47;:::i;28603:64::-;28689:3;28713:6;28708:3;28701:19;28745:2;28740:3;28736:12;28729:19;;28800:2;28790:6;28787:1;28783:14;28779:2;28775:23;28771:32;28757:46;;28826:7;28818:6;28815:19;28812:39;;;28847:1;28844;28837:12;28812:39;28879:2;28875;28871:11;28891:938;28907:6;28902:3;28899:15;28891:938;;;28986:3;28980:10;-1:-1:-1;;;;;29009:11:281;29006:35;29003:55;;;29054:1;29051;29044:12;29003:55;29081:20;;29136:2;29128:11;;29124:25;-1:-1:-1;29114:53:281;;29163:1;29160;29153:12;29114:53;29210:2;29206;29202:11;29196:18;29240:66;29256:49;29296:8;29256:49;:::i;29240:66::-;29334:5;29366:8;29359:5;29352:23;29408:2;29401:5;29397:14;29388:23;;29480:2;29475;29463:8;29460:1;29456:16;29452:2;29448:25;29444:34;29440:43;29424:59;;29512:7;29502:8;29499:21;29496:41;;;29533:1;29530;29523:12;29496:41;29571:2;29567;29563:11;29550:24;;29587:167;29605:8;29598:5;29595:19;29587:167;;;29687:12;;29673:27;;29737:2;29626:14;;;;29726;;;;29587:167;;;29767:20;;-1:-1:-1;;29816:2:281;29807:12;;;;28924;;;;;-1:-1:-1;28891:938:281;;;-1:-1:-1;29848:5:281;28155:1704;-1:-1:-1;;;;;;28155:1704:281:o;30414:127::-;30475:10;30470:3;30466:20;30463:1;30456:31;30506:4;30503:1;30496:15;30530:4;30527:1;30520:15;30546:128;30613:9;;;30634:11;;;30631:37;;;30648:18;;:::i;30679:194::-;-1:-1:-1;;;;;30777:26:281;;;30749;;;30745:59;;30816:28;;30813:54;;;30847:18;;:::i;30878:213::-;30913:3;30961:5;30957:2;30946:21;-1:-1:-1;;;;;30991:39:281;30982:7;30979:52;30976:78;;31034:18;;:::i;:::-;31074:1;31070:15;;30878:213;-1:-1:-1;;30878:213:281:o;31096:245::-;31194:2;31164:17;;;31183;;;;31160:41;-1:-1:-1;;;;;31216:44:281;;-1:-1:-1;;;;;;31262:49:281;;31213:99;31210:125;;;31315:18;;:::i;31346:656::-;-1:-1:-1;;;;;31698:32:281;;31680:51;;31667:3;31652:19;;31740:57;31793:2;31778:18;;31770:6;31740:57;:::i;:::-;-1:-1:-1;;;;;31833:32:281;;;;31828:2;31813:18;;31806:60;-1:-1:-1;;;;;31903:31:281;;;;31897:3;31882:19;;31875:60;31984:10;31972:23;31853:3;31951:19;;;31944:52;31833:32;31346:656;-1:-1:-1;;31346:656:281:o;32520:522::-;32598:4;32604:6;32664:11;32651:25;32758:2;32754:7;32743:8;32727:14;32723:29;32719:43;32699:18;32695:68;32685:96;;32777:1;32774;32767:12;32685:96;32804:33;;32856:20;;;-1:-1:-1;;;;;;32888:30:281;;32885:50;;;32931:1;32928;32921:12;32885:50;32964:4;32952:17;;-1:-1:-1;32995:14:281;32991:27;;;32981:38;;32978:58;;;33032:1;33029;33022:12;33047:267;33136:6;33131:3;33124:19;33188:6;33181:5;33174:4;33169:3;33165:14;33152:43;-1:-1:-1;33240:1:281;33215:16;;;33233:4;33211:27;;;33204:38;;;;33296:2;33275:15;;;-1:-1:-1;;33271:29:281;33262:39;;;33258:50;;33047:267::o;33319:1392::-;-1:-1:-1;;;;;33821:32:281;;33803:51;;33742:4;33790:3;33775:19;;33863:57;33916:2;33901:18;;33893:6;33863:57;:::i;:::-;33956:3;33951:2;33936:18;;33929:31;33995:22;;;34075:6;34048:3;34033:19;;34099:1;34109:348;34123:6;34120:1;34117:13;34109:348;;;34198:6;34185:20;34218:31;34243:5;34218:31;:::i;:::-;-1:-1:-1;;;;;34306:31:281;34294:44;;34374:4;34432:15;;;;34365:14;;;;34334:1;34138:9;34109:348;;;34113:3;34503:9;34498:3;34494:19;34488:3;34477:9;34473:19;34466:48;34537:41;34574:3;34566:6;34537:41;:::i;:::-;34523:55;;;34627:9;34619:6;34615:22;34609:3;34598:9;34594:19;34587:51;34655:50;34698:6;34690;34682;34655:50;:::i;:::-;34647:58;33319:1392;-1:-1:-1;;;;;;;;;;33319:1392:281:o;34716:272::-;34774:6;34827:2;34815:9;34806:7;34802:23;34798:32;34795:52;;;34843:1;34840;34833:12;34795:52;34882:9;34869:23;34932:6;34925:5;34921:18;34914:5;34911:29;34901:57;;34954:1;34951;34944:12;35542:167;35637:10;35610:18;;;35630;;;35606:43;;35661:19;;35658:45;;;35683:18;;:::i;35714:419::-;35813:6;35808:3;35801:19;35845:4;35840:3;35836:14;35829:21;;35783:3;35873:5;35896:1;35906:202;35920:6;35917:1;35914:13;35906:202;;;36012:10;35985:25;36003:6;35985:25;:::i;:::-;35981:42;35969:55;;36053:4;36044:14;;;;36081:17;;;;;35942:1;35935:9;35906:202;;36138:479;-1:-1:-1;;;;;36381:32:281;;;36363:51;;36450:32;;36445:2;36430:18;;36423:60;36519:2;36514;36499:18;;36492:30;;;-1:-1:-1;;36539:72:281;;36592:18;;36584:6;36576;36539:72;:::i;36622:247::-;36781:2;36770:9;36763:21;36744:4;36801:62;36859:2;36848:9;36844:18;36836:6;36828;36801:62;:::i;37400:669::-;-1:-1:-1;;;;;37699:32:281;;;37681:51;;37768:32;;37763:2;37748:18;;37741:60;37837:3;37832:2;37817:18;;37810:31;;;-1:-1:-1;;37864:73:281;;37917:19;;37909:6;37901;37864:73;:::i;:::-;37985:9;37977:6;37973:22;37968:2;37957:9;37953:18;37946:50;38013;38056:6;38048;38040;38013:50;:::i;:::-;38005:58;37400:669;-1:-1:-1;;;;;;;;;37400:669:281:o;39423:251::-;39493:6;39546:2;39534:9;39525:7;39521:23;39517:32;39514:52;;;39562:1;39559;39552:12;39514:52;39594:9;39588:16;39613:31;39638:5;39613:31;:::i;40029:297::-;40147:12;;40194:4;40183:16;;;40177:23;;40147:12;40212:16;;40209:111;;;-1:-1:-1;;40286:4:281;40282:17;;;;40279:1;40275:25;40271:38;40260:50;;40029:297;-1:-1:-1;40029:297:281:o;41248:135::-;41287:3;41308:17;;;41305:43;;41328:18;;:::i;:::-;-1:-1:-1;41375:1:281;41364:13;;41248:135::o;41388:136::-;41427:3;41455:5;41445:39;;41464:18;;:::i;:::-;-1:-1:-1;;;41500:18:281;;41388:136::o;41909:216::-;41973:9;;;42001:11;;;41948:3;42031:9;;42059:10;;42055:19;;42084:10;;42076:19;;42052:44;42049:70;;;42099:18;;:::i;:::-;42049:70;;41909:216;;;;:::o;42491:249::-;42591:2;42580:17;;;42561;;;;42557:41;-1:-1:-1;;;;;;42613:50:281;;-1:-1:-1;;;;;42665:45:281;;42610:101;42607:127;;;42714:18;;:::i;42745:127::-;42806:10;42801:3;42797:20;42794:1;42787:31;42837:4;42834:1;42827:15;42861:4;42858:1;42851:15;43227:127;43288:10;43283:3;43279:20;43276:1;43269:31;43319:4;43316:1;43309:15;43343:4;43340:1;43333:15;43359:125;43424:9;;;43445:10;;;43442:36;;;43458:18;;:::i;44306:127::-;44367:10;44362:3;44358:20;44355:1;44348:31;44398:4;44395:1;44388:15;44422:4;44419:1;44412:15;44438:217;44478:1;44504;44494:132;;44548:10;44543:3;44539:20;44536:1;44529:31;44583:4;44580:1;44573:15;44611:4;44608:1;44601:15;44494:132;-1:-1:-1;44640:9:281;;44438:217::o",
    "linkReferences": {},
    "immutableReferences": {
      "88389": [
        {
          "start": 1786,
          "length": 32
        },
        {
          "start": 3279,
          "length": 32
        },
        {
          "start": 5716,
          "length": 32
        },
        {
          "start": 7355,
          "length": 32
        },
        {
          "start": 7461,
          "length": 32
        },
        {
          "start": 11399,
          "length": 32
        }
      ],
      "88392": [
        {
          "start": 798,
          "length": 32
        },
        {
          "start": 8822,
          "length": 32
        },
        {
          "start": 10622,
          "length": 32
        }
      ],
      "88395": [
        {
          "start": 1352,
          "length": 32
        },
        {
          "start": 15897,
          "length": 32
        }
      ],
      "100234": [
        {
          "start": 1017,
          "length": 32
        },
        {
          "start": 14369,
          "length": 32
        }
      ],
      "100435": [
        {
          "start": 1391,
          "length": 32
        },
        {
          "start": 1938,
          "length": 32
        },
        {
          "start": 7626,
          "length": 32
        },
        {
          "start": 13464,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "ALLOCATION_CONFIGURATION_DELAY()": "7bc1ef61",
    "DEALLOCATION_DELAY()": "2981eb77",
    "addStrategiesToOperatorSet(address,uint32,address[])": "50feea20",
    "clearDeallocationQueue(address,address[],uint16[])": "4b5046ef",
    "createOperatorSets(address,(uint32,address[])[])": "261f84e0",
    "delegation()": "df5cf723",
    "deregisterFromOperatorSets((address,address,uint32[]))": "6e3492b5",
    "encumberedMagnitude(address,address)": "a984eb3a",
    "getAVSRegistrar(address)": "304c10cd",
    "getAllocatableMagnitude(address,address)": "6cfb4481",
    "getAllocatedSets(address)": "15fe5028",
    "getAllocatedStrategies(address,(address,uint32))": "c221d8ae",
    "getAllocation(address,(address,uint32),address)": "10e1b9b8",
    "getAllocationDelay(address)": "b9fbaed1",
    "getAllocations(address[],(address,uint32),address)": "8ce64854",
    "getMaxMagnitude(address,address)": "a9333ec8",
    "getMaxMagnitudes(address,address[])": "547afb87",
    "getMaxMagnitudes(address[],address)": "4a10ffe5",
    "getMaxMagnitudesAtBlock(address,address[],uint32)": "94d7d00c",
    "getMemberCount((address,uint32))": "b2447af7",
    "getMembers((address,uint32))": "6e875dba",
    "getMinimumSlashableStake((address,uint32),address[],address[],uint32)": "2bab2c4a",
    "getOperatorSetCount(address)": "ba1a84e5",
    "getRegisteredSets(address)": "79ae50cd",
    "getStrategiesInOperatorSet((address,uint32))": "4177a87c",
    "getStrategyAllocations(address,address)": "40120dab",
    "initialize(address,uint256)": "cd6dc687",
    "isMemberOfOperatorSet(address,(address,uint32))": "670d3ba2",
    "isOperatorSet((address,uint32))": "260dc758",
    "modifyAllocations(address,((address,uint32),address[],uint64[])[])": "952899ee",
    "owner()": "8da5cb5b",
    "pause(uint256)": "136439dd",
    "pauseAll()": "595c6a67",
    "paused()": "5c975abb",
    "paused(uint8)": "5ac86ab7",
    "pauserRegistry()": "886f1195",
    "permissionController()": "4657e26a",
    "registerForOperatorSets(address,(address,uint32[],bytes))": "adc2e3d9",
    "removeStrategiesFromOperatorSet(address,uint32,address[])": "b66bd989",
    "renounceOwnership()": "715018a6",
    "setAVSRegistrar(address,address)": "d3d96ff4",
    "setAllocationDelay(address,uint32)": "56c483e6",
    "slashOperator(address,(address,uint32,address[],uint256[],string))": "36352057",
    "transferOwnership(address)": "f2fde38b",
    "unpause(uint256)": "fabc1cbc",
    "updateAVSMetadataURI(address,string)": "a9821821"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IDelegationManager\",\"name\":\"_delegation\",\"type\":\"address\"},{\"internalType\":\"contract IPauserRegistry\",\"name\":\"_pauserRegistry\",\"type\":\"address\"},{\"internalType\":\"contract IPermissionController\",\"name\":\"_permissionController\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_DEALLOCATION_DELAY\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"_ALLOCATION_CONFIGURATION_DELAY\",\"type\":\"uint32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AlreadyMemberOfSet\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CurrentlyPaused\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Empty\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InputAddressZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InputArrayLengthMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientMagnitude\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidAVSRegistrar\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidAVSWithNoMetadataRegistered\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidCaller\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidNewPausedStatus\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidOperator\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidOperatorSet\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidPermissions\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSnapshotOrdering\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidWadToSlash\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ModificationAlreadyPending\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotMemberOfSet\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyPauser\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyUnpauser\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OperatorNotSlashable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OutOfBounds\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SameMagnitude\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StrategiesMustBeInAscendingOrder\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StrategyAlreadyInOperatorSet\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StrategyNotInOperatorSet\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UninitializedAllocationDelay\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"}],\"name\":\"AVSMetadataURIUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract IAVSRegistrar\",\"name\":\"registrar\",\"type\":\"address\"}],\"name\":\"AVSRegistrarSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"delay\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"effectBlock\",\"type\":\"uint32\"}],\"name\":\"AllocationDelaySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"indexed\":false,\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"magnitude\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"effectBlock\",\"type\":\"uint32\"}],\"name\":\"AllocationUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"encumberedMagnitude\",\"type\":\"uint64\"}],\"name\":\"EncumberedMagnitudeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"maxMagnitude\",\"type\":\"uint64\"}],\"name\":\"MaxMagnitudeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"indexed\":false,\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"}],\"name\":\"OperatorAddedToOperatorSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"indexed\":false,\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"}],\"name\":\"OperatorRemovedFromOperatorSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"indexed\":false,\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"}],\"name\":\"OperatorSetCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"indexed\":false,\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"wadSlashed\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"name\":\"OperatorSlashed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newPausedStatus\",\"type\":\"uint256\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"indexed\":false,\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"StrategyAddedToOperatorSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"indexed\":false,\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"StrategyRemovedFromOperatorSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newPausedStatus\",\"type\":\"uint256\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ALLOCATION_CONFIGURATION_DELAY\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEALLOCATION_DELAY\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"operatorSetId\",\"type\":\"uint32\"},{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"}],\"name\":\"addStrategiesToOperatorSet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"},{\"internalType\":\"uint16[]\",\"name\":\"numToClear\",\"type\":\"uint16[]\"}],\"name\":\"clearDeallocationQueue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"operatorSetId\",\"type\":\"uint32\"},{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"}],\"internalType\":\"struct IAllocationManagerTypes.CreateSetParams[]\",\"name\":\"params\",\"type\":\"tuple[]\"}],\"name\":\"createOperatorSets\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"delegation\",\"outputs\":[{\"internalType\":\"contract IDelegationManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32[]\",\"name\":\"operatorSetIds\",\"type\":\"uint32[]\"}],\"internalType\":\"struct IAllocationManagerTypes.DeregisterParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"deregisterFromOperatorSets\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"encumberedMagnitude\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"}],\"name\":\"getAVSRegistrar\",\"outputs\":[{\"internalType\":\"contract IAVSRegistrar\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"getAllocatableMagnitude\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"getAllocatedSets\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"}],\"name\":\"getAllocatedStrategies\",\"outputs\":[{\"internalType\":\"contract IStrategy[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"},{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"getAllocation\",\"outputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"currentMagnitude\",\"type\":\"uint64\"},{\"internalType\":\"int128\",\"name\":\"pendingDiff\",\"type\":\"int128\"},{\"internalType\":\"uint32\",\"name\":\"effectBlock\",\"type\":\"uint32\"}],\"internalType\":\"struct IAllocationManagerTypes.Allocation\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"getAllocationDelay\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"operators\",\"type\":\"address[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"},{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"getAllocations\",\"outputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"currentMagnitude\",\"type\":\"uint64\"},{\"internalType\":\"int128\",\"name\":\"pendingDiff\",\"type\":\"int128\"},{\"internalType\":\"uint32\",\"name\":\"effectBlock\",\"type\":\"uint32\"}],\"internalType\":\"struct IAllocationManagerTypes.Allocation[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"getMaxMagnitude\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"operators\",\"type\":\"address[]\"},{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"getMaxMagnitudes\",\"outputs\":[{\"internalType\":\"uint64[]\",\"name\":\"\",\"type\":\"uint64[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"}],\"name\":\"getMaxMagnitudes\",\"outputs\":[{\"internalType\":\"uint64[]\",\"name\":\"\",\"type\":\"uint64[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"},{\"internalType\":\"uint32\",\"name\":\"blockNumber\",\"type\":\"uint32\"}],\"name\":\"getMaxMagnitudesAtBlock\",\"outputs\":[{\"internalType\":\"uint64[]\",\"name\":\"\",\"type\":\"uint64[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"}],\"name\":\"getMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"}],\"name\":\"getMembers\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"},{\"internalType\":\"address[]\",\"name\":\"operators\",\"type\":\"address[]\"},{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"},{\"internalType\":\"uint32\",\"name\":\"futureBlock\",\"type\":\"uint32\"}],\"name\":\"getMinimumSlashableStake\",\"outputs\":[{\"internalType\":\"uint256[][]\",\"name\":\"slashableStake\",\"type\":\"uint256[][]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"}],\"name\":\"getOperatorSetCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"getRegisteredSets\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"}],\"name\":\"getStrategiesInOperatorSet\",\"outputs\":[{\"internalType\":\"contract IStrategy[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"getStrategyAllocations\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet[]\",\"name\":\"\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint64\",\"name\":\"currentMagnitude\",\"type\":\"uint64\"},{\"internalType\":\"int128\",\"name\":\"pendingDiff\",\"type\":\"int128\"},{\"internalType\":\"uint32\",\"name\":\"effectBlock\",\"type\":\"uint32\"}],\"internalType\":\"struct IAllocationManagerTypes.Allocation[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"initialPausedStatus\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"}],\"name\":\"isMemberOfOperatorSet\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"}],\"name\":\"isOperatorSet\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"}],\"internalType\":\"struct OperatorSet\",\"name\":\"operatorSet\",\"type\":\"tuple\"},{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"},{\"internalType\":\"uint64[]\",\"name\":\"newMagnitudes\",\"type\":\"uint64[]\"}],\"internalType\":\"struct IAllocationManagerTypes.AllocateParams[]\",\"name\":\"params\",\"type\":\"tuple[]\"}],\"name\":\"modifyAllocations\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newPausedStatus\",\"type\":\"uint256\"}],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauseAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"index\",\"type\":\"uint8\"}],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauserRegistry\",\"outputs\":[{\"internalType\":\"contract IPauserRegistry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"permissionController\",\"outputs\":[{\"internalType\":\"contract IPermissionController\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32[]\",\"name\":\"operatorSetIds\",\"type\":\"uint32[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct IAllocationManagerTypes.RegisterParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"registerForOperatorSets\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"operatorSetId\",\"type\":\"uint32\"},{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"}],\"name\":\"removeStrategiesFromOperatorSet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"contract IAVSRegistrar\",\"name\":\"registrar\",\"type\":\"address\"}],\"name\":\"setAVSRegistrar\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"delay\",\"type\":\"uint32\"}],\"name\":\"setAllocationDelay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"operatorSetId\",\"type\":\"uint32\"},{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"wadsToSlash\",\"type\":\"uint256[]\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"internalType\":\"struct IAllocationManagerTypes.SlashingParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"slashOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newPausedStatus\",\"type\":\"uint256\"}],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"avs\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"}],\"name\":\"updateAVSMetadataURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AlreadyMemberOfSet()\":[{\"details\":\"Thrown when trying to add an operator to a set they are already a member of\"}],\"CurrentlyPaused()\":[{\"details\":\"Thrown when currently paused.\"}],\"Empty()\":[{\"details\":\"An operation (e.g. {front}) couldn't be completed due to the queue being empty.\"}],\"InputAddressZero()\":[{\"details\":\"Thrown when a null address input is provided.\"}],\"InputArrayLengthMismatch()\":[{\"details\":\"Thrown when two array parameters have mismatching lengths.\"}],\"InsufficientMagnitude()\":[{\"details\":\"Thrown when an allocation is attempted that exceeds a given operators total allocatable magnitude.\"}],\"InvalidAVSRegistrar()\":[{\"details\":\"Thrown when the AVSRegistrar is not correctly configured to prevent an AVSRegistrar contract from being used with the wrong AVS\"}],\"InvalidAVSWithNoMetadataRegistered()\":[{\"details\":\"Thrown when an invalid avs whose metadata is not registered is provided.\"}],\"InvalidCaller()\":[{\"details\":\"Thrown when caller is not authorized to call a function.\"}],\"InvalidNewPausedStatus()\":[{\"details\":\"Thrown when invalid `newPausedStatus` is provided.\"}],\"InvalidOperator()\":[{\"details\":\"Thrown when an invalid operator is provided.\"}],\"InvalidOperatorSet()\":[{\"details\":\"Thrown when an invalid operator set is provided.\"}],\"InvalidPermissions()\":[{\"details\":\"Thrown when the caller is not allowed to call a function on behalf of an account.\"}],\"InvalidWadToSlash()\":[{\"details\":\"Thrown when `wadToSlash` is zero or greater than 1e18\"}],\"ModificationAlreadyPending()\":[{\"details\":\"Thrown when an allocation is attempted for a given operator when they have pending allocations or deallocations.\"}],\"NotMemberOfSet()\":[{\"details\":\"Thrown when trying to slash/remove an operator from a set they are not a member of\"}],\"OnlyPauser()\":[{\"details\":\"Thrown when caller is not pauser.\"}],\"OnlyUnpauser()\":[{\"details\":\"Thrown when caller is not unpauser.\"}],\"OperatorNotSlashable()\":[{\"details\":\"Thrown when attempting to slash an operator when they are not slashable.\"}],\"OutOfBounds()\":[{\"details\":\"An operation (e.g. {at}) couldn't be completed due to an index being out of bounds.\"}],\"SameMagnitude()\":[{\"details\":\"Thrown when an operator attempts to set their allocation for an operatorSet to the same value\"}],\"StrategiesMustBeInAscendingOrder()\":[{\"details\":\"Thrown when provided `strategies` are not in ascending order.\"}],\"StrategyAlreadyInOperatorSet()\":[{\"details\":\"Thrown when trying to add a strategy to an operator set that already contains it.\"}],\"StrategyNotInOperatorSet()\":[{\"details\":\"Thrown when a strategy is referenced that does not belong to an operator set.\"}],\"UninitializedAllocationDelay()\":[{\"details\":\"Thrown when an operator's allocation delay has yet to be set.\"}]},\"events\":{\"AVSMetadataURIUpdated(address,string)\":{\"details\":\"The URI is never stored; it is simply emitted through an event for off-chain indexing.\"},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"addStrategiesToOperatorSet(address,uint32,address[])\":{\"details\":\"Strategies MUST NOT already exist in the operator set\",\"params\":{\"avs\":\"the avs to set strategies for\",\"operatorSetId\":\"the operator set to add strategies to\",\"strategies\":\"the strategies to add\"}},\"clearDeallocationQueue(address,address[],uint16[])\":{\"details\":\"can be called permissionlessly by anyone\",\"params\":{\"numToClear\":\"a list of number of pending deallocations to clear for each strategy\",\"operator\":\"address to clear deallocations for\",\"strategies\":\"a list of strategies to clear deallocations for\"}},\"constructor\":{\"details\":\"Initializes the DelegationManager address, the deallocation delay, and the allocation configuration delay.\"},\"deregisterFromOperatorSets((address,address,uint32[]))\":{\"details\":\"After deregistering within the ALM, this method calls the AVS Registrar's `IAVSRegistrar. deregisterOperator` method to complete deregistration. This call MUST succeed in order for deregistration to be successful.\"},\"getAllocatableMagnitude(address,address)\":{\"params\":{\"operator\":\"the operator to query\",\"strategy\":\"the strategy to get allocatable magnitude for\"},\"returns\":{\"_0\":\"magnitude available to be allocated to an operator set\"}},\"getAllocatedSets(address)\":{\"params\":{\"operator\":\"the operator to query\"},\"returns\":{\"_0\":\"the list of operator sets the operator has current or pending allocations/deallocations in\"}},\"getAllocatedStrategies(address,(address,uint32))\":{\"params\":{\"operator\":\"the operator to query\",\"operatorSet\":\"the operator set to query\"},\"returns\":{\"_0\":\"the list of strategies\"}},\"getAllocation(address,(address,uint32),address)\":{\"params\":{\"operator\":\"the operator to query\",\"operatorSet\":\"the operator set to query\",\"strategy\":\"the strategy to query\"},\"returns\":{\"_0\":\"the current/pending stake allocation\"}},\"getAllocationDelay(address)\":{\"details\":\"The operator must have a configured delay before allocating magnitude\",\"params\":{\"operator\":\"The operator to query\"},\"returns\":{\"_0\":\"Whether the operator has configured a delay\",\"_1\":\"The time in blocks between allocating magnitude and magnitude becoming slashable\"}},\"getAllocations(address[],(address,uint32),address)\":{\"params\":{\"operatorSet\":\"the operator set to query\",\"operators\":\"the operators to query\",\"strategy\":\"the strategy to query\"},\"returns\":{\"_0\":\"each operator's allocation\"}},\"getMaxMagnitude(address,address)\":{\"details\":\"The max magnitude of an operator starts at WAD (1e18), and is decreased anytime the operator is slashed. This value acts as a cap on the max magnitude of the operator.\",\"params\":{\"operator\":\"the operator to query\",\"strategy\":\"the strategy to get the max magnitude for\"},\"returns\":{\"_0\":\"the max magnitude for the strategy\"}},\"getMaxMagnitudes(address,address[])\":{\"details\":\"The max magnitude of an operator starts at WAD (1e18), and is decreased anytime the operator is slashed. This value acts as a cap on the max magnitude of the operator.\",\"params\":{\"operator\":\"the operator to query\",\"strategies\":\"the strategies to get the max magnitudes for\"},\"returns\":{\"_0\":\"the max magnitudes for each strategy\"}},\"getMaxMagnitudes(address[],address)\":{\"details\":\"The max magnitude of an operator starts at WAD (1e18), and is decreased anytime the operator is slashed. This value acts as a cap on the max magnitude of the operator.\",\"params\":{\"operators\":\"the operators to query\",\"strategy\":\"the strategy to get the max magnitudes for\"},\"returns\":{\"_0\":\"the max magnitudes for each operator\"}},\"getMaxMagnitudesAtBlock(address,address[],uint32)\":{\"details\":\"The max magnitude of an operator starts at WAD (1e18), and is decreased anytime the operator is slashed. This value acts as a cap on the max magnitude of the operator.\",\"params\":{\"blockNumber\":\"the blockNumber at which to check the max magnitudes\",\"operator\":\"the operator to query\",\"strategies\":\"the strategies to get the max magnitudes for\"},\"returns\":{\"_0\":\"the max magnitudes for each strategy\"}},\"getMemberCount((address,uint32))\":{\"params\":{\"operatorSet\":\"The operatorSet to get the member count for\"}},\"getMembers((address,uint32))\":{\"params\":{\"operatorSet\":\"The operatorSet to query.\"}},\"getMinimumSlashableStake((address,uint32),address[],address[],uint32)\":{\"details\":\"This method queries actual delegated stakes in the DelegationManager and applies each operator's allocation to the stake to produce the slashable stake each allocation represents.This minimum takes into account `futureBlock`, and will omit any pending magnitude diffs that will not be in effect as of `futureBlock`. NOTE that in order to get the true minimum slashable stake as of some future block, `futureBlock` MUST be greater than block.numberNOTE that `futureBlock` should be fewer than `DEALLOCATION_DELAY` blocks in the future, or the values returned from this method may not be accurate due to deallocations.\",\"params\":{\"futureBlock\":\"the block at which to get allocation information. Should be a future block.\",\"operatorSet\":\"the operator set to query\",\"operators\":\"the list of operators whose slashable stakes will be returned\",\"strategies\":\"the strategies that each slashable stake corresponds to\"},\"returns\":{\"slashableStake\":\"a list of slashable stakes, indexed by [operator][strategy]\"}},\"getOperatorSetCount(address)\":{\"params\":{\"avs\":\"the AVS to query\"}},\"getRegisteredSets(address)\":{\"params\":{\"operator\":\"The operator address to query.\"}},\"getStrategiesInOperatorSet((address,uint32))\":{\"params\":{\"operatorSet\":\"The operatorSet to query.\"}},\"getStrategyAllocations(address,address)\":{\"details\":\"Note that this returns a list of ALL operator sets the operator has allocations in. This means some of the returned allocations may be zero.\",\"params\":{\"operator\":\"the operator to query\",\"strategy\":\"the strategy to query\"},\"returns\":{\"_0\":\"the list of all operator sets the operator has allocations for\",\"_1\":\"the corresponding list of allocations from the specific `strategy`\"}},\"initialize(address,uint256)\":{\"details\":\"Initializes the initial owner and paused status.\"},\"isMemberOfOperatorSet(address,(address,uint32))\":{\"params\":{\"operator\":\"The operator to query\",\"operatorSet\":\"The operator set to query\"}},\"modifyAllocations(address,((address,uint32),address[],uint64[])[])\":{\"details\":\"Updates encumberedMagnitude for the updated strategies\",\"params\":{\"operator\":\"the operator to modify allocations for\",\"params\":\"array of magnitude adjustments for one or more operator sets\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pause(uint256)\":{\"details\":\"This function can only pause functionality, and thus cannot 'unflip' any bit in `_paused` from 1 to 0.\",\"params\":{\"newPausedStatus\":\"represents the new value for `_paused` to take, which means it may flip several bits at once.\"}},\"registerForOperatorSets(address,(address,uint32[],bytes))\":{\"details\":\"After registering within the ALM, this method calls the AVS Registrar's `IAVSRegistrar. registerOperator` method to complete registration. This call MUST succeed in order for registration to be successful.\"},\"removeStrategiesFromOperatorSet(address,uint32,address[])\":{\"details\":\"Strategies MUST already exist in the operator set\",\"params\":{\"avs\":\"the avs to remove strategies for\",\"operatorSetId\":\"the operator set to remove strategies from\",\"strategies\":\"the strategies to remove\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setAVSRegistrar(address,address)\":{\"params\":{\"registrar\":\"the new registrar address\"}},\"setAllocationDelay(address,uint32)\":{\"params\":{\"delay\":\"the allocation delay in blocks\",\"operator\":\"The operator to set the delay on behalf of.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"unpause(uint256)\":{\"details\":\"This function can only unpause functionality, and thus cannot 'flip' any bit in `_paused` from 0 to 1.\",\"params\":{\"newPausedStatus\":\"represents the new value for `_paused` to take, which means it may flip several bits at once.\"}},\"updateAVSMetadataURI(address,string)\":{\"details\":\"Note that the `metadataURI` is *never stored* and is only emitted in the `AVSMetadataURIUpdated` event.\",\"params\":{\"metadataURI\":\"The URI for metadata associated with an AVS.\"}}},\"version\":1},\"userdoc\":{\"events\":{\"AVSMetadataURIUpdated(address,string)\":{\"notice\":\"Emitted when an AVS updates their metadata URI (Uniform Resource Identifier).\"},\"AVSRegistrarSet(address,address)\":{\"notice\":\"Emitted when an AVS configures the address that will handle registration/deregistration\"},\"AllocationDelaySet(address,uint32,uint32)\":{\"notice\":\"Emitted when operator updates their allocation delay.\"},\"AllocationUpdated(address,(address,uint32),address,uint64,uint32)\":{\"notice\":\"Emitted when an operator's magnitude is updated for a given operatorSet and strategy\"},\"EncumberedMagnitudeUpdated(address,address,uint64)\":{\"notice\":\"Emitted when operator's encumbered magnitude is updated for a given strategy\"},\"MaxMagnitudeUpdated(address,address,uint64)\":{\"notice\":\"Emitted when an operator's max magnitude is updated for a given strategy\"},\"OperatorAddedToOperatorSet(address,(address,uint32))\":{\"notice\":\"Emitted when an operator is added to an operator set.\"},\"OperatorRemovedFromOperatorSet(address,(address,uint32))\":{\"notice\":\"Emitted when an operator is removed from an operator set.\"},\"OperatorSetCreated((address,uint32))\":{\"notice\":\"Emitted when an operator set is created by an AVS.\"},\"OperatorSlashed(address,(address,uint32),address[],uint256[],string)\":{\"notice\":\"Emitted when an operator is slashed by an operator set for a strategy `wadSlashed` is the proportion of the operator's total delegated stake that was slashed\"},\"Paused(address,uint256)\":{\"notice\":\"Emitted when the pause is triggered by `account`, and changed to `newPausedStatus`.\"},\"StrategyAddedToOperatorSet((address,uint32),address)\":{\"notice\":\"Emitted when a strategy is added to an operator set.\"},\"StrategyRemovedFromOperatorSet((address,uint32),address)\":{\"notice\":\"Emitted when a strategy is removed from an operator set.\"},\"Unpaused(address,uint256)\":{\"notice\":\"Emitted when the pause is lifted by `account`, and changed to `newPausedStatus`.\"}},\"kind\":\"user\",\"methods\":{\"ALLOCATION_CONFIGURATION_DELAY()\":{\"notice\":\"Delay before alloaction delay modifications take effect.\"},\"DEALLOCATION_DELAY()\":{\"notice\":\"Delay before deallocations are clearable and can be added back into freeMagnitude In this window, deallocations still remain slashable by the operatorSet they were allocated to.\"},\"addStrategiesToOperatorSet(address,uint32,address[])\":{\"notice\":\"Allows an AVS to add strategies to an operator set\"},\"clearDeallocationQueue(address,address[],uint16[])\":{\"notice\":\"This function takes a list of strategies and for each strategy, removes from the deallocationQueue all clearable deallocations up to max `numToClear` number of deallocations, updating the encumberedMagnitude of the operator as needed.\"},\"createOperatorSets(address,(uint32,address[])[])\":{\"notice\":\"Allows an AVS to create new operator sets, defining strategies that the operator set uses\"},\"delegation()\":{\"notice\":\"The DelegationManager contract for EigenLayer\"},\"deregisterFromOperatorSets((address,address,uint32[]))\":{\"notice\":\"Allows an operator or AVS to deregister the operator from one or more of the AVS's operator sets. If the operator has any slashable stake allocated to the AVS, it remains slashable until the DEALLOCATION_DELAY has passed.\"},\"getAVSRegistrar(address)\":{\"notice\":\"Returns the address that handles registration/deregistration for the AVS If not set, defaults to the input address (`avs`)\"},\"getAllocatableMagnitude(address,address)\":{\"notice\":\"For a strategy, get the amount of magnitude not currently allocated to any operator set\"},\"getAllocatedSets(address)\":{\"notice\":\"Returns the list of operator sets the operator has current or pending allocations/deallocations in\"},\"getAllocatedStrategies(address,(address,uint32))\":{\"notice\":\"Returns the list of strategies an operator has current or pending allocations/deallocations from given a specific operator set.\"},\"getAllocation(address,(address,uint32),address)\":{\"notice\":\"Returns the current/pending stake allocation an operator has from a strategy to an operator set\"},\"getAllocationDelay(address)\":{\"notice\":\"Returns the time in blocks between an operator allocating slashable magnitude and the magnitude becoming slashable. If the delay has not been set, `isSet` will be false.\"},\"getAllocations(address[],(address,uint32),address)\":{\"notice\":\"Returns the current/pending stake allocations for multiple operators from a strategy to an operator set\"},\"getMaxMagnitude(address,address)\":{\"notice\":\"Returns the maximum magnitude an operator can allocate for the given strategy\"},\"getMaxMagnitudes(address,address[])\":{\"notice\":\"Returns the maximum magnitude an operator can allocate for the given strategies\"},\"getMaxMagnitudes(address[],address)\":{\"notice\":\"Returns the maximum magnitudes each operator can allocate for the given strategy\"},\"getMaxMagnitudesAtBlock(address,address[],uint32)\":{\"notice\":\"Returns the maximum magnitude an operator can allocate for the given strategies at a given block number\"},\"getMemberCount((address,uint32))\":{\"notice\":\"Returns the number of operators registered to an operatorSet.\"},\"getMembers((address,uint32))\":{\"notice\":\"Returns all the operators registered to an operator set\"},\"getMinimumSlashableStake((address,uint32),address[],address[],uint32)\":{\"notice\":\"Returns the minimum amount of stake that will be slashable as of some future block, according to each operator's allocation from each strategy to the operator set.\"},\"getOperatorSetCount(address)\":{\"notice\":\"Returns the number of operator sets for the AVS\"},\"getRegisteredSets(address)\":{\"notice\":\"Returns a list of all operator sets the operator is registered for\"},\"getStrategiesInOperatorSet((address,uint32))\":{\"notice\":\"Returns an array of strategies in the operatorSet.\"},\"getStrategyAllocations(address,address)\":{\"notice\":\"Given a strategy, returns a list of operator sets and corresponding stake allocations.\"},\"isMemberOfOperatorSet(address,(address,uint32))\":{\"notice\":\"Returns whether the operator is registered for the operator set\"},\"isOperatorSet((address,uint32))\":{\"notice\":\"Returns whether the operator set exists\"},\"modifyAllocations(address,((address,uint32),address[],uint64[])[])\":{\"notice\":\"Modifies the proportions of slashable stake allocated to an operator set from a list of strategies Note that deallocations remain slashable for DEALLOCATION_DELAY blocks therefore when they are cleared they may free up less allocatable magnitude than initially deallocated.\"},\"pause(uint256)\":{\"notice\":\"This function is used to pause an EigenLayer contract's functionality. It is permissioned to the `pauser` address, which is expected to be a low threshold multisig.\"},\"pauseAll()\":{\"notice\":\"Alias for `pause(type(uint256).max)`.\"},\"paused()\":{\"notice\":\"Returns the current paused status as a uint256.\"},\"paused(uint8)\":{\"notice\":\"Returns 'true' if the `indexed`th bit of `_paused` is 1, and 'false' otherwise\"},\"pauserRegistry()\":{\"notice\":\"Address of the `PauserRegistry` contract that this contract defers to for determining access control (for pausing).\"},\"permissionController()\":{\"notice\":\"Pointer to the permission controller contract.\"},\"registerForOperatorSets(address,(address,uint32[],bytes))\":{\"notice\":\"Allows an operator to register for one or more operator sets for an AVS. If the operator has any stake allocated to these operator sets, it immediately becomes slashable.\"},\"removeStrategiesFromOperatorSet(address,uint32,address[])\":{\"notice\":\"Allows an AVS to remove strategies from an operator set\"},\"setAVSRegistrar(address,address)\":{\"notice\":\"Called by an AVS to configure the address that is called when an operator registers or is deregistered from the AVS's operator sets. If not set (or set to 0), defaults to the AVS's address. The registrar address must support the avs via checking `supportsAVS`\"},\"setAllocationDelay(address,uint32)\":{\"notice\":\"Called by the delegation manager OR an operator to set an operator's allocation delay. This is set when the operator first registers, and is the number of blocks between an operator allocating magnitude to an operator set, and the magnitude becoming slashable.\"},\"slashOperator(address,(address,uint32,address[],uint256[],string))\":{\"notice\":\"Called by an AVS to slash an operator in a given operator set\"},\"unpause(uint256)\":{\"notice\":\"This function is used to unpause an EigenLayer contract's functionality. It is permissioned to the `unpauser` address, which is expected to be a high threshold multisig or governance contract.\"},\"updateAVSMetadataURI(address,string)\":{\"notice\":\"Called by an AVS to emit an `AVSMetadataURIUpdated` event indicating the information has updated.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/contracts/core/AllocationManager.sol\":\"AllocationManager\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin-upgrades/=lib/openzeppelin-contracts-upgradeable-v4.9.0/\",\":@openzeppelin/=lib/openzeppelin-contracts-v4.9.0/\",\":ds-test/=lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable-v4.9.0/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable-v4.9.0/=lib/openzeppelin-contracts-upgradeable-v4.9.0/\",\":openzeppelin-contracts-v4.9.0/=lib/openzeppelin-contracts-v4.9.0/\",\":openzeppelin/=lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/\",\":zeus-templates/=lib/zeus-templates/src/\"]},\"sources\":{\"lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x4075622496acc77fd6d4de4cc30a8577a744d5c75afad33fdeacf1704d6eda98\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://99c8cb3cd19a44bbfb6612605affb7d8b06cee1f6aa9362a37a8672b4f7eeaf8\",\"dweb:/ipfs/QmasyxFDBUp7k5KFgfDWEzM8PYSKEq7GVznzMJ1VxVRF4B\"]},\"lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/security/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0xb82ef33f43b6b96109687d91b39c94573fdccaaa423fe28e8ba0977b31c023e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec9c629f63e66379f9c868a74f971064701cc6e30583872aa653f8b932518025\",\"dweb:/ipfs/QmY4MnZF2VMFwJkAwpdQwxEWA3KcGbNBKEmAVYePMVQWUR\"]},\"lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0x2bc0007987c229ae7624eb29be6a9b84f6a6a5872f76248b15208b131ea41c4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b2835c737d073ef8b82a4cc246495a9740f43e7ff2cf130906b2449ff9bfb91\",\"dweb:/ipfs/QmSCWfNoSvvTN57ic7o1RW6NqSxxGAqbBTnLKc7QHe27qB\"]},\"lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/math/SafeCastUpgradeable.sol\":{\"keccak256\":\"0xcef50f95b43b038aa40aed25b62fc45906c681a5c1d504a4fdcf3bc6330a8d4b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef883699a00970d5469e502514e2854704cd53d7a49825078aa807a2f056315c\",\"dweb:/ipfs/QmRjpN9oxgw6zHCVjfWNB9MzaYpNPPgqu7Rrwqwabmhpis\"]},\"lib/openzeppelin-contracts-v4.9.0/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"lib/openzeppelin-contracts-v4.9.0/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"lib/openzeppelin-contracts-v4.9.0/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278\",\"dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH\"]},\"lib/openzeppelin-contracts-v4.9.0/contracts/utils/structs/DoubleEndedQueue.sol\":{\"keccak256\":\"0xb5fbb623dec53bb9b6c1b738b4ab6540a04ac5dc2ac94d95fa3ebfd22898559c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a6e7f26c0c688a987c19c8b0997c7e47c33f7717b6293a487afe8429d95b8e7\",\"dweb:/ipfs/QmVrmXcQ7KLM5fw4PWeJ8j4nnmfHkjpFPariMMh5UvsEVD\"]},\"lib/openzeppelin-contracts-v4.9.0/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x9f4357008a8f7d8c8bf5d48902e789637538d8c016be5766610901b4bba81514\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20bf19b2b851f58a4c24543de80ae70b3e08621f9230eb335dc75e2d4f43f5df\",\"dweb:/ipfs/QmSYuH1AhvJkPK8hNvoPqtExBcgTB42pPRHgTHkS5c5zYW\"]},\"src/contracts/core/AllocationManager.sol\":{\"keccak256\":\"0x062e744730030ead1cd554260858b08c3fa102115da8dae63e736804883938b8\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://43b5073f39c37d23b1454c848214940aa2dfdcfe15df8e5ff20e7c4a94296449\",\"dweb:/ipfs/QmcwyXyhfZS5GiA5kqh3Lz5mMCai73ry36sny6vkG1VkmB\"]},\"src/contracts/core/AllocationManagerStorage.sol\":{\"keccak256\":\"0xd9175ab361845f9c684af6bea50340d0a7cb408a27941c88865e0762f329ec8d\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://a61d6b5f64197e2be5edc08d360dc72b1652f32b15c430968b81b73a32418929\",\"dweb:/ipfs/QmYk6awVxcEEky9WkhPzwANpLWRht1mPSP5VwwR5GTUYY8\"]},\"src/contracts/interfaces/IAVSRegistrar.sol\":{\"keccak256\":\"0x3849ea6d0ec5bcc3315fb359dd98bb0d9bb9e2e5f4dd1c6be4753402af5909b3\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://1246544c6741420365a96dbe4ec13a57a14f3ffcad13edba69176a98826ce505\",\"dweb:/ipfs/QmRdt4FZHS3oXKun2mDpzGErfmnDNSnJm8WKctkjd2sbaW\"]},\"src/contracts/interfaces/IAllocationManager.sol\":{\"keccak256\":\"0x68f1cc9fcb33237a49977fa1b16891d6fcbdc1421ccfbee77c219811bc9206e5\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://c8ddef2761c75bb1118f61aa3fb86009d29b3988842ad8c49cdee98a4c8bc7e9\",\"dweb:/ipfs/Qmcrm1QubPp8bUNpF8ERgEcxV4VS4e49hRf8hAE3wucYht\"]},\"src/contracts/interfaces/IDelegationManager.sol\":{\"keccak256\":\"0x95093989fb52a3544c2296c8da36223247cab1cf4e788af25f9b4ec482c4526f\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://f5e15fd4da8e17789a8cd2162d70b8a878d8e412442214a25eb01229f4635cbe\",\"dweb:/ipfs/QmRzPvMhmX9FBt1oLZCjNutGZpy4YRg9TU9nVgVMEqhKut\"]},\"src/contracts/interfaces/IPausable.sol\":{\"keccak256\":\"0x0404f1db44005929899e00dcc50d553175951ff26c215c87215bbd92b4ebfde3\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://cdb88bff60663f3418d271c7db93c2867d767e31ec592690e7b2e1f1ba1589e8\",\"dweb:/ipfs/QmQfsZCiEqWYEFopZB5LvL9pq47Qba9EeMzeZcHN2e9ypc\"]},\"src/contracts/interfaces/IPauserRegistry.sol\":{\"keccak256\":\"0x705c371129ac08b9b035c1c1a1572a5e3a61b48dda8b7d8d974a7bfb88ecb7fc\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://bdb894c26fcf1b83024d006b0573663286e50d857c5dea89a9149552a971da72\",\"dweb:/ipfs/QmdqWnSPmeF9mV96uWMSN8AhVi64U818GRwFEqr6dP3UMD\"]},\"src/contracts/interfaces/IPermissionController.sol\":{\"keccak256\":\"0xe9ec992f04d55c32e96b41767e901e83c6c2410c691e5fe73a43ba0f2a753f8b\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://6a470a04c09d3471eefb3e7639591920ad23c1db775038277f432389cbc1f7b8\",\"dweb:/ipfs/QmRYhe8D32HarNkbNY4BtepWAGeawwn8h9WhW3A2NX8iX8\"]},\"src/contracts/interfaces/ISignatureUtils.sol\":{\"keccak256\":\"0x5164971b2648837bc100798df3633080b0f8076692a5c900f6b1aacc342241de\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://2b1676f5d44cf9680c12e56b569ed876ca3038ee266c3a6c37dddf9cb2b3d87b\",\"dweb:/ipfs/QmVp4JbR9SYHDaBjfGfTh1gqoiKf2rhwV78kRPSHhjddcq\"]},\"src/contracts/interfaces/IStrategy.sol\":{\"keccak256\":\"0x601384e7910d2edcbaf58e4480261d0c11996256e810736377f37844bea3cac3\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://dcfec053867cd3a4454d7c9f07d8a7c74abbae12aed45524c8bf40e8cf8e57d4\",\"dweb:/ipfs/QmbXGprDnnsvDyMcEkfZPAb5QBnzbJdnRjutfRLuPeh8V8\"]},\"src/contracts/libraries/OperatorSetLib.sol\":{\"keccak256\":\"0xac130991039e2a885fa0f820397e80354af115d9580be357ea0c76f30e59bcec\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://4528c14d2b0bc84fe13996bdd299aa71235c49a3412c1073d73b5eef502305c5\",\"dweb:/ipfs/QmReiQ95MHLrj3tvP8xdSkq4UAkmQzH6KijZqX1Hzijy6S\"]},\"src/contracts/libraries/SlashingLib.sol\":{\"keccak256\":\"0xb5bfa03e58ee71e8672bf93c2c8f4067950f8fb61f4c5a699efbd00f96317401\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://c7569fab9522bc239e3954b36f6000b7767a319ae05ad44831ebca51515103b5\",\"dweb:/ipfs/QmSnBpbagyoj3FRLDMvtoo7NiNNo6du2D5oiQZE4zeTJpZ\"]},\"src/contracts/libraries/Snapshots.sol\":{\"keccak256\":\"0x27e0e9ed30a530ebeb197254d4a7e5a47bfcb1fc2863d0033f853a997dd231c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f0627df417303e2cdae3df24026798bda09926846dba07e5228893559684e8b\",\"dweb:/ipfs/QmboVLG81jcuXYjr2aygnQM2aPUiT6jQkHWMajftoxaMZY\"]},\"src/contracts/mixins/PermissionControllerMixin.sol\":{\"keccak256\":\"0xf915f1e416725ffd08686afab272bd7bda4c302c4fcde76769bfcdb3fbb01e67\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://4e9142d737ff326018272c71c79367322576a81edf08251fd5b36b7df15cd6d0\",\"dweb:/ipfs/QmPztJGoM4fkBK3ZnmHymuZUkUPkw112VdR2g25Q55Fiva\"]},\"src/contracts/permissions/Pausable.sol\":{\"keccak256\":\"0xd9e0b8239183be72b9ef8157aa43c15620f1e99854f79be4e6d8db57b9e61666\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://e4ec5135765bf89125f1eb9c1c187ba9fd8a7c460e5dd1788c41e84f13f611cd\",\"dweb:/ipfs/QmcHtkMKos4hdmpStEnqvwviKFuNArTdzafFjSa9okCFNh\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.27+commit.40a35a09"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract IDelegationManager",
              "name": "_delegation",
              "type": "address"
            },
            {
              "internalType": "contract IPauserRegistry",
              "name": "_pauserRegistry",
              "type": "address"
            },
            {
              "internalType": "contract IPermissionController",
              "name": "_permissionController",
              "type": "address"
            },
            {
              "internalType": "uint32",
              "name": "_DEALLOCATION_DELAY",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "_ALLOCATION_CONFIGURATION_DELAY",
              "type": "uint32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "AlreadyMemberOfSet"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CurrentlyPaused"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Empty"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InputAddressZero"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InputArrayLengthMismatch"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InsufficientMagnitude"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidAVSRegistrar"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidAVSWithNoMetadataRegistered"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidCaller"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidNewPausedStatus"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidOperator"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidOperatorSet"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidPermissions"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidSnapshotOrdering"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidWadToSlash"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ModificationAlreadyPending"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NotMemberOfSet"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OnlyPauser"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OnlyUnpauser"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OperatorNotSlashable"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OutOfBounds"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SameMagnitude"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "StrategiesMustBeInAscendingOrder"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "StrategyAlreadyInOperatorSet"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "StrategyNotInOperatorSet"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "UninitializedAllocationDelay"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "avs",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "string",
              "name": "metadataURI",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AVSMetadataURIUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "avs",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "contract IAVSRegistrar",
              "name": "registrar",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AVSRegistrarSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint32",
              "name": "delay",
              "type": "uint32",
              "indexed": false
            },
            {
              "internalType": "uint32",
              "name": "effectBlock",
              "type": "uint32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AllocationDelaySet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ],
              "indexed": false
            },
            {
              "internalType": "contract IStrategy",
              "name": "strategy",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint64",
              "name": "magnitude",
              "type": "uint64",
              "indexed": false
            },
            {
              "internalType": "uint32",
              "name": "effectBlock",
              "type": "uint32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AllocationUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "contract IStrategy",
              "name": "strategy",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint64",
              "name": "encumberedMagnitude",
              "type": "uint64",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "EncumberedMagnitudeUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "contract IStrategy",
              "name": "strategy",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint64",
              "name": "maxMagnitude",
              "type": "uint64",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "MaxMagnitudeUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "OperatorAddedToOperatorSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "OperatorRemovedFromOperatorSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "OperatorSetCreated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ],
              "indexed": false
            },
            {
              "internalType": "contract IStrategy[]",
              "name": "strategies",
              "type": "address[]",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "wadSlashed",
              "type": "uint256[]",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "OperatorSlashed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "newPausedStatus",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Paused",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ],
              "indexed": false
            },
            {
              "internalType": "contract IStrategy",
              "name": "strategy",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "StrategyAddedToOperatorSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ],
              "indexed": false
            },
            {
              "internalType": "contract IStrategy",
              "name": "strategy",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "StrategyRemovedFromOperatorSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "newPausedStatus",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Unpaused",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "ALLOCATION_CONFIGURATION_DELAY",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DEALLOCATION_DELAY",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "avs",
              "type": "address"
            },
            {
              "internalType": "uint32",
              "name": "operatorSetId",
              "type": "uint32"
            },
            {
              "internalType": "contract IStrategy[]",
              "name": "strategies",
              "type": "address[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addStrategiesToOperatorSet"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "contract IStrategy[]",
              "name": "strategies",
              "type": "address[]"
            },
            {
              "internalType": "uint16[]",
              "name": "numToClear",
              "type": "uint16[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "clearDeallocationQueue"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "avs",
              "type": "address"
            },
            {
              "internalType": "struct IAllocationManagerTypes.CreateSetParams[]",
              "name": "params",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "uint32",
                  "name": "operatorSetId",
                  "type": "uint32"
                },
                {
                  "internalType": "contract IStrategy[]",
                  "name": "strategies",
                  "type": "address[]"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "createOperatorSets"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "delegation",
          "outputs": [
            {
              "internalType": "contract IDelegationManager",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct IAllocationManagerTypes.DeregisterParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32[]",
                  "name": "operatorSetIds",
                  "type": "uint32[]"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deregisterFromOperatorSets"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "contract IStrategy",
              "name": "strategy",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "encumberedMagnitude",
          "outputs": [
            {
              "internalType": "uint64",
              "name": "",
              "type": "uint64"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "avs",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getAVSRegistrar",
          "outputs": [
            {
              "internalType": "contract IAVSRegistrar",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "contract IStrategy",
              "name": "strategy",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getAllocatableMagnitude",
          "outputs": [
            {
              "internalType": "uint64",
              "name": "",
              "type": "uint64"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getAllocatedSets",
          "outputs": [
            {
              "internalType": "struct OperatorSet[]",
              "name": "",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getAllocatedStrategies",
          "outputs": [
            {
              "internalType": "contract IStrategy[]",
              "name": "",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ]
            },
            {
              "internalType": "contract IStrategy",
              "name": "strategy",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getAllocation",
          "outputs": [
            {
              "internalType": "struct IAllocationManagerTypes.Allocation",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint64",
                  "name": "currentMagnitude",
                  "type": "uint64"
                },
                {
                  "internalType": "int128",
                  "name": "pendingDiff",
                  "type": "int128"
                },
                {
                  "internalType": "uint32",
                  "name": "effectBlock",
                  "type": "uint32"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getAllocationDelay",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            },
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "operators",
              "type": "address[]"
            },
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ]
            },
            {
              "internalType": "contract IStrategy",
              "name": "strategy",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getAllocations",
          "outputs": [
            {
              "internalType": "struct IAllocationManagerTypes.Allocation[]",
              "name": "",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "uint64",
                  "name": "currentMagnitude",
                  "type": "uint64"
                },
                {
                  "internalType": "int128",
                  "name": "pendingDiff",
                  "type": "int128"
                },
                {
                  "internalType": "uint32",
                  "name": "effectBlock",
                  "type": "uint32"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "contract IStrategy",
              "name": "strategy",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getMaxMagnitude",
          "outputs": [
            {
              "internalType": "uint64",
              "name": "",
              "type": "uint64"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "operators",
              "type": "address[]"
            },
            {
              "internalType": "contract IStrategy",
              "name": "strategy",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getMaxMagnitudes",
          "outputs": [
            {
              "internalType": "uint64[]",
              "name": "",
              "type": "uint64[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "contract IStrategy[]",
              "name": "strategies",
              "type": "address[]"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getMaxMagnitudes",
          "outputs": [
            {
              "internalType": "uint64[]",
              "name": "",
              "type": "uint64[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "contract IStrategy[]",
              "name": "strategies",
              "type": "address[]"
            },
            {
              "internalType": "uint32",
              "name": "blockNumber",
              "type": "uint32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getMaxMagnitudesAtBlock",
          "outputs": [
            {
              "internalType": "uint64[]",
              "name": "",
              "type": "uint64[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getMemberCount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getMembers",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ]
            },
            {
              "internalType": "address[]",
              "name": "operators",
              "type": "address[]"
            },
            {
              "internalType": "contract IStrategy[]",
              "name": "strategies",
              "type": "address[]"
            },
            {
              "internalType": "uint32",
              "name": "futureBlock",
              "type": "uint32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getMinimumSlashableStake",
          "outputs": [
            {
              "internalType": "uint256[][]",
              "name": "slashableStake",
              "type": "uint256[][]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "avs",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getOperatorSetCount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRegisteredSets",
          "outputs": [
            {
              "internalType": "struct OperatorSet[]",
              "name": "",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getStrategiesInOperatorSet",
          "outputs": [
            {
              "internalType": "contract IStrategy[]",
              "name": "",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "contract IStrategy",
              "name": "strategy",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getStrategyAllocations",
          "outputs": [
            {
              "internalType": "struct OperatorSet[]",
              "name": "",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ]
            },
            {
              "internalType": "struct IAllocationManagerTypes.Allocation[]",
              "name": "",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "uint64",
                  "name": "currentMagnitude",
                  "type": "uint64"
                },
                {
                  "internalType": "int128",
                  "name": "pendingDiff",
                  "type": "int128"
                },
                {
                  "internalType": "uint32",
                  "name": "effectBlock",
                  "type": "uint32"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "initialOwner",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "initialPausedStatus",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isMemberOfOperatorSet",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct OperatorSet",
              "name": "operatorSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "id",
                  "type": "uint32"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isOperatorSet",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "struct IAllocationManagerTypes.AllocateParams[]",
              "name": "params",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "struct OperatorSet",
                  "name": "operatorSet",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "avs",
                      "type": "address"
                    },
                    {
                      "internalType": "uint32",
                      "name": "id",
                      "type": "uint32"
                    }
                  ]
                },
                {
                  "internalType": "contract IStrategy[]",
                  "name": "strategies",
                  "type": "address[]"
                },
                {
                  "internalType": "uint64[]",
                  "name": "newMagnitudes",
                  "type": "uint64[]"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "modifyAllocations"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "newPausedStatus",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "pause"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "pauseAll"
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "index",
              "type": "uint8"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "paused",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "paused",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "pauserRegistry",
          "outputs": [
            {
              "internalType": "contract IPauserRegistry",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "permissionController",
          "outputs": [
            {
              "internalType": "contract IPermissionController",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "struct IAllocationManagerTypes.RegisterParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "avs",
                  "type": "address"
                },
                {
                  "internalType": "uint32[]",
                  "name": "operatorSetIds",
                  "type": "uint32[]"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "registerForOperatorSets"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "avs",
              "type": "address"
            },
            {
              "internalType": "uint32",
              "name": "operatorSetId",
              "type": "uint32"
            },
            {
              "internalType": "contract IStrategy[]",
              "name": "strategies",
              "type": "address[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "removeStrategiesFromOperatorSet"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "avs",
              "type": "address"
            },
            {
              "internalType": "contract IAVSRegistrar",
              "name": "registrar",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setAVSRegistrar"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "uint32",
              "name": "delay",
              "type": "uint32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setAllocationDelay"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "avs",
              "type": "address"
            },
            {
              "internalType": "struct IAllocationManagerTypes.SlashingParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "operatorSetId",
                  "type": "uint32"
                },
                {
                  "internalType": "contract IStrategy[]",
                  "name": "strategies",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "wadsToSlash",
                  "type": "uint256[]"
                },
                {
                  "internalType": "string",
                  "name": "description",
                  "type": "string"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "slashOperator"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "newPausedStatus",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unpause"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "avs",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "metadataURI",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateAVSMetadataURI"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "addStrategiesToOperatorSet(address,uint32,address[])": {
            "details": "Strategies MUST NOT already exist in the operator set",
            "params": {
              "avs": "the avs to set strategies for",
              "operatorSetId": "the operator set to add strategies to",
              "strategies": "the strategies to add"
            }
          },
          "clearDeallocationQueue(address,address[],uint16[])": {
            "details": "can be called permissionlessly by anyone",
            "params": {
              "numToClear": "a list of number of pending deallocations to clear for each strategy",
              "operator": "address to clear deallocations for",
              "strategies": "a list of strategies to clear deallocations for"
            }
          },
          "constructor": {
            "details": "Initializes the DelegationManager address, the deallocation delay, and the allocation configuration delay."
          },
          "deregisterFromOperatorSets((address,address,uint32[]))": {
            "details": "After deregistering within the ALM, this method calls the AVS Registrar's `IAVSRegistrar. deregisterOperator` method to complete deregistration. This call MUST succeed in order for deregistration to be successful."
          },
          "getAllocatableMagnitude(address,address)": {
            "params": {
              "operator": "the operator to query",
              "strategy": "the strategy to get allocatable magnitude for"
            },
            "returns": {
              "_0": "magnitude available to be allocated to an operator set"
            }
          },
          "getAllocatedSets(address)": {
            "params": {
              "operator": "the operator to query"
            },
            "returns": {
              "_0": "the list of operator sets the operator has current or pending allocations/deallocations in"
            }
          },
          "getAllocatedStrategies(address,(address,uint32))": {
            "params": {
              "operator": "the operator to query",
              "operatorSet": "the operator set to query"
            },
            "returns": {
              "_0": "the list of strategies"
            }
          },
          "getAllocation(address,(address,uint32),address)": {
            "params": {
              "operator": "the operator to query",
              "operatorSet": "the operator set to query",
              "strategy": "the strategy to query"
            },
            "returns": {
              "_0": "the current/pending stake allocation"
            }
          },
          "getAllocationDelay(address)": {
            "details": "The operator must have a configured delay before allocating magnitude",
            "params": {
              "operator": "The operator to query"
            },
            "returns": {
              "_0": "Whether the operator has configured a delay",
              "_1": "The time in blocks between allocating magnitude and magnitude becoming slashable"
            }
          },
          "getAllocations(address[],(address,uint32),address)": {
            "params": {
              "operatorSet": "the operator set to query",
              "operators": "the operators to query",
              "strategy": "the strategy to query"
            },
            "returns": {
              "_0": "each operator's allocation"
            }
          },
          "getMaxMagnitude(address,address)": {
            "details": "The max magnitude of an operator starts at WAD (1e18), and is decreased anytime the operator is slashed. This value acts as a cap on the max magnitude of the operator.",
            "params": {
              "operator": "the operator to query",
              "strategy": "the strategy to get the max magnitude for"
            },
            "returns": {
              "_0": "the max magnitude for the strategy"
            }
          },
          "getMaxMagnitudes(address,address[])": {
            "details": "The max magnitude of an operator starts at WAD (1e18), and is decreased anytime the operator is slashed. This value acts as a cap on the max magnitude of the operator.",
            "params": {
              "operator": "the operator to query",
              "strategies": "the strategies to get the max magnitudes for"
            },
            "returns": {
              "_0": "the max magnitudes for each strategy"
            }
          },
          "getMaxMagnitudes(address[],address)": {
            "details": "The max magnitude of an operator starts at WAD (1e18), and is decreased anytime the operator is slashed. This value acts as a cap on the max magnitude of the operator.",
            "params": {
              "operators": "the operators to query",
              "strategy": "the strategy to get the max magnitudes for"
            },
            "returns": {
              "_0": "the max magnitudes for each operator"
            }
          },
          "getMaxMagnitudesAtBlock(address,address[],uint32)": {
            "details": "The max magnitude of an operator starts at WAD (1e18), and is decreased anytime the operator is slashed. This value acts as a cap on the max magnitude of the operator.",
            "params": {
              "blockNumber": "the blockNumber at which to check the max magnitudes",
              "operator": "the operator to query",
              "strategies": "the strategies to get the max magnitudes for"
            },
            "returns": {
              "_0": "the max magnitudes for each strategy"
            }
          },
          "getMemberCount((address,uint32))": {
            "params": {
              "operatorSet": "The operatorSet to get the member count for"
            }
          },
          "getMembers((address,uint32))": {
            "params": {
              "operatorSet": "The operatorSet to query."
            }
          },
          "getMinimumSlashableStake((address,uint32),address[],address[],uint32)": {
            "details": "This method queries actual delegated stakes in the DelegationManager and applies each operator's allocation to the stake to produce the slashable stake each allocation represents.This minimum takes into account `futureBlock`, and will omit any pending magnitude diffs that will not be in effect as of `futureBlock`. NOTE that in order to get the true minimum slashable stake as of some future block, `futureBlock` MUST be greater than block.numberNOTE that `futureBlock` should be fewer than `DEALLOCATION_DELAY` blocks in the future, or the values returned from this method may not be accurate due to deallocations.",
            "params": {
              "futureBlock": "the block at which to get allocation information. Should be a future block.",
              "operatorSet": "the operator set to query",
              "operators": "the list of operators whose slashable stakes will be returned",
              "strategies": "the strategies that each slashable stake corresponds to"
            },
            "returns": {
              "slashableStake": "a list of slashable stakes, indexed by [operator][strategy]"
            }
          },
          "getOperatorSetCount(address)": {
            "params": {
              "avs": "the AVS to query"
            }
          },
          "getRegisteredSets(address)": {
            "params": {
              "operator": "The operator address to query."
            }
          },
          "getStrategiesInOperatorSet((address,uint32))": {
            "params": {
              "operatorSet": "The operatorSet to query."
            }
          },
          "getStrategyAllocations(address,address)": {
            "details": "Note that this returns a list of ALL operator sets the operator has allocations in. This means some of the returned allocations may be zero.",
            "params": {
              "operator": "the operator to query",
              "strategy": "the strategy to query"
            },
            "returns": {
              "_0": "the list of all operator sets the operator has allocations for",
              "_1": "the corresponding list of allocations from the specific `strategy`"
            }
          },
          "initialize(address,uint256)": {
            "details": "Initializes the initial owner and paused status."
          },
          "isMemberOfOperatorSet(address,(address,uint32))": {
            "params": {
              "operator": "The operator to query",
              "operatorSet": "The operator set to query"
            }
          },
          "modifyAllocations(address,((address,uint32),address[],uint64[])[])": {
            "details": "Updates encumberedMagnitude for the updated strategies",
            "params": {
              "operator": "the operator to modify allocations for",
              "params": "array of magnitude adjustments for one or more operator sets"
            }
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "pause(uint256)": {
            "details": "This function can only pause functionality, and thus cannot 'unflip' any bit in `_paused` from 1 to 0.",
            "params": {
              "newPausedStatus": "represents the new value for `_paused` to take, which means it may flip several bits at once."
            }
          },
          "registerForOperatorSets(address,(address,uint32[],bytes))": {
            "details": "After registering within the ALM, this method calls the AVS Registrar's `IAVSRegistrar. registerOperator` method to complete registration. This call MUST succeed in order for registration to be successful."
          },
          "removeStrategiesFromOperatorSet(address,uint32,address[])": {
            "details": "Strategies MUST already exist in the operator set",
            "params": {
              "avs": "the avs to remove strategies for",
              "operatorSetId": "the operator set to remove strategies from",
              "strategies": "the strategies to remove"
            }
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
          },
          "setAVSRegistrar(address,address)": {
            "params": {
              "registrar": "the new registrar address"
            }
          },
          "setAllocationDelay(address,uint32)": {
            "params": {
              "delay": "the allocation delay in blocks",
              "operator": "The operator to set the delay on behalf of."
            }
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          },
          "unpause(uint256)": {
            "details": "This function can only unpause functionality, and thus cannot 'flip' any bit in `_paused` from 0 to 1.",
            "params": {
              "newPausedStatus": "represents the new value for `_paused` to take, which means it may flip several bits at once."
            }
          },
          "updateAVSMetadataURI(address,string)": {
            "details": "Note that the `metadataURI` is *never stored* and is only emitted in the `AVSMetadataURIUpdated` event.",
            "params": {
              "metadataURI": "The URI for metadata associated with an AVS."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "ALLOCATION_CONFIGURATION_DELAY()": {
            "notice": "Delay before alloaction delay modifications take effect."
          },
          "DEALLOCATION_DELAY()": {
            "notice": "Delay before deallocations are clearable and can be added back into freeMagnitude In this window, deallocations still remain slashable by the operatorSet they were allocated to."
          },
          "addStrategiesToOperatorSet(address,uint32,address[])": {
            "notice": "Allows an AVS to add strategies to an operator set"
          },
          "clearDeallocationQueue(address,address[],uint16[])": {
            "notice": "This function takes a list of strategies and for each strategy, removes from the deallocationQueue all clearable deallocations up to max `numToClear` number of deallocations, updating the encumberedMagnitude of the operator as needed."
          },
          "createOperatorSets(address,(uint32,address[])[])": {
            "notice": "Allows an AVS to create new operator sets, defining strategies that the operator set uses"
          },
          "delegation()": {
            "notice": "The DelegationManager contract for EigenLayer"
          },
          "deregisterFromOperatorSets((address,address,uint32[]))": {
            "notice": "Allows an operator or AVS to deregister the operator from one or more of the AVS's operator sets. If the operator has any slashable stake allocated to the AVS, it remains slashable until the DEALLOCATION_DELAY has passed."
          },
          "getAVSRegistrar(address)": {
            "notice": "Returns the address that handles registration/deregistration for the AVS If not set, defaults to the input address (`avs`)"
          },
          "getAllocatableMagnitude(address,address)": {
            "notice": "For a strategy, get the amount of magnitude not currently allocated to any operator set"
          },
          "getAllocatedSets(address)": {
            "notice": "Returns the list of operator sets the operator has current or pending allocations/deallocations in"
          },
          "getAllocatedStrategies(address,(address,uint32))": {
            "notice": "Returns the list of strategies an operator has current or pending allocations/deallocations from given a specific operator set."
          },
          "getAllocation(address,(address,uint32),address)": {
            "notice": "Returns the current/pending stake allocation an operator has from a strategy to an operator set"
          },
          "getAllocationDelay(address)": {
            "notice": "Returns the time in blocks between an operator allocating slashable magnitude and the magnitude becoming slashable. If the delay has not been set, `isSet` will be false."
          },
          "getAllocations(address[],(address,uint32),address)": {
            "notice": "Returns the current/pending stake allocations for multiple operators from a strategy to an operator set"
          },
          "getMaxMagnitude(address,address)": {
            "notice": "Returns the maximum magnitude an operator can allocate for the given strategy"
          },
          "getMaxMagnitudes(address,address[])": {
            "notice": "Returns the maximum magnitude an operator can allocate for the given strategies"
          },
          "getMaxMagnitudes(address[],address)": {
            "notice": "Returns the maximum magnitudes each operator can allocate for the given strategy"
          },
          "getMaxMagnitudesAtBlock(address,address[],uint32)": {
            "notice": "Returns the maximum magnitude an operator can allocate for the given strategies at a given block number"
          },
          "getMemberCount((address,uint32))": {
            "notice": "Returns the number of operators registered to an operatorSet."
          },
          "getMembers((address,uint32))": {
            "notice": "Returns all the operators registered to an operator set"
          },
          "getMinimumSlashableStake((address,uint32),address[],address[],uint32)": {
            "notice": "Returns the minimum amount of stake that will be slashable as of some future block, according to each operator's allocation from each strategy to the operator set."
          },
          "getOperatorSetCount(address)": {
            "notice": "Returns the number of operator sets for the AVS"
          },
          "getRegisteredSets(address)": {
            "notice": "Returns a list of all operator sets the operator is registered for"
          },
          "getStrategiesInOperatorSet((address,uint32))": {
            "notice": "Returns an array of strategies in the operatorSet."
          },
          "getStrategyAllocations(address,address)": {
            "notice": "Given a strategy, returns a list of operator sets and corresponding stake allocations."
          },
          "isMemberOfOperatorSet(address,(address,uint32))": {
            "notice": "Returns whether the operator is registered for the operator set"
          },
          "isOperatorSet((address,uint32))": {
            "notice": "Returns whether the operator set exists"
          },
          "modifyAllocations(address,((address,uint32),address[],uint64[])[])": {
            "notice": "Modifies the proportions of slashable stake allocated to an operator set from a list of strategies Note that deallocations remain slashable for DEALLOCATION_DELAY blocks therefore when they are cleared they may free up less allocatable magnitude than initially deallocated."
          },
          "pause(uint256)": {
            "notice": "This function is used to pause an EigenLayer contract's functionality. It is permissioned to the `pauser` address, which is expected to be a low threshold multisig."
          },
          "pauseAll()": {
            "notice": "Alias for `pause(type(uint256).max)`."
          },
          "paused()": {
            "notice": "Returns the current paused status as a uint256."
          },
          "paused(uint8)": {
            "notice": "Returns 'true' if the `indexed`th bit of `_paused` is 1, and 'false' otherwise"
          },
          "pauserRegistry()": {
            "notice": "Address of the `PauserRegistry` contract that this contract defers to for determining access control (for pausing)."
          },
          "permissionController()": {
            "notice": "Pointer to the permission controller contract."
          },
          "registerForOperatorSets(address,(address,uint32[],bytes))": {
            "notice": "Allows an operator to register for one or more operator sets for an AVS. If the operator has any stake allocated to these operator sets, it immediately becomes slashable."
          },
          "removeStrategiesFromOperatorSet(address,uint32,address[])": {
            "notice": "Allows an AVS to remove strategies from an operator set"
          },
          "setAVSRegistrar(address,address)": {
            "notice": "Called by an AVS to configure the address that is called when an operator registers or is deregistered from the AVS's operator sets. If not set (or set to 0), defaults to the AVS's address. The registrar address must support the avs via checking `supportsAVS`"
          },
          "setAllocationDelay(address,uint32)": {
            "notice": "Called by the delegation manager OR an operator to set an operator's allocation delay. This is set when the operator first registers, and is the number of blocks between an operator allocating magnitude to an operator set, and the magnitude becoming slashable."
          },
          "slashOperator(address,(address,uint32,address[],uint256[],string))": {
            "notice": "Called by an AVS to slash an operator in a given operator set"
          },
          "unpause(uint256)": {
            "notice": "This function is used to unpause an EigenLayer contract's functionality. It is permissioned to the `unpauser` address, which is expected to be a high threshold multisig or governance contract."
          },
          "updateAVSMetadataURI(address,string)": {
            "notice": "Called by an AVS to emit an `AVSMetadataURIUpdated` event indicating the information has updated."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin-upgrades/=lib/openzeppelin-contracts-upgradeable-v4.9.0/",
        "@openzeppelin/=lib/openzeppelin-contracts-v4.9.0/",
        "ds-test/=lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts-upgradeable-v4.9.0/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable-v4.9.0/=lib/openzeppelin-contracts-upgradeable-v4.9.0/",
        "openzeppelin-contracts-v4.9.0/=lib/openzeppelin-contracts-v4.9.0/",
        "openzeppelin/=lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/",
        "zeus-templates/=lib/zeus-templates/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/contracts/core/AllocationManager.sol": "AllocationManager"
      },
      "evmVersion": "cancun",
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/access/OwnableUpgradeable.sol": {
        "keccak256": "0x4075622496acc77fd6d4de4cc30a8577a744d5c75afad33fdeacf1704d6eda98",
        "urls": [
          "bzz-raw://99c8cb3cd19a44bbfb6612605affb7d8b06cee1f6aa9362a37a8672b4f7eeaf8",
          "dweb:/ipfs/QmasyxFDBUp7k5KFgfDWEzM8PYSKEq7GVznzMJ1VxVRF4B"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794",
        "urls": [
          "bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e",
          "dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/security/ReentrancyGuardUpgradeable.sol": {
        "keccak256": "0xb82ef33f43b6b96109687d91b39c94573fdccaaa423fe28e8ba0977b31c023e0",
        "urls": [
          "bzz-raw://ec9c629f63e66379f9c868a74f971064701cc6e30583872aa653f8b932518025",
          "dweb:/ipfs/QmY4MnZF2VMFwJkAwpdQwxEWA3KcGbNBKEmAVYePMVQWUR"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422",
        "urls": [
          "bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b",
          "dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/math/MathUpgradeable.sol": {
        "keccak256": "0x2bc0007987c229ae7624eb29be6a9b84f6a6a5872f76248b15208b131ea41c4e",
        "urls": [
          "bzz-raw://2b2835c737d073ef8b82a4cc246495a9740f43e7ff2cf130906b2449ff9bfb91",
          "dweb:/ipfs/QmSCWfNoSvvTN57ic7o1RW6NqSxxGAqbBTnLKc7QHe27qB"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/math/SafeCastUpgradeable.sol": {
        "keccak256": "0xcef50f95b43b038aa40aed25b62fc45906c681a5c1d504a4fdcf3bc6330a8d4b",
        "urls": [
          "bzz-raw://ef883699a00970d5469e502514e2854704cd53d7a49825078aa807a2f056315c",
          "dweb:/ipfs/QmRjpN9oxgw6zHCVjfWNB9MzaYpNPPgqu7Rrwqwabmhpis"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-v4.9.0/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
        "urls": [
          "bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
          "dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-v4.9.0/contracts/utils/math/Math.sol": {
        "keccak256": "0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3",
        "urls": [
          "bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c",
          "dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-v4.9.0/contracts/utils/math/SafeCast.sol": {
        "keccak256": "0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad",
        "urls": [
          "bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278",
          "dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-v4.9.0/contracts/utils/structs/DoubleEndedQueue.sol": {
        "keccak256": "0xb5fbb623dec53bb9b6c1b738b4ab6540a04ac5dc2ac94d95fa3ebfd22898559c",
        "urls": [
          "bzz-raw://4a6e7f26c0c688a987c19c8b0997c7e47c33f7717b6293a487afe8429d95b8e7",
          "dweb:/ipfs/QmVrmXcQ7KLM5fw4PWeJ8j4nnmfHkjpFPariMMh5UvsEVD"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-v4.9.0/contracts/utils/structs/EnumerableSet.sol": {
        "keccak256": "0x9f4357008a8f7d8c8bf5d48902e789637538d8c016be5766610901b4bba81514",
        "urls": [
          "bzz-raw://20bf19b2b851f58a4c24543de80ae70b3e08621f9230eb335dc75e2d4f43f5df",
          "dweb:/ipfs/QmSYuH1AhvJkPK8hNvoPqtExBcgTB42pPRHgTHkS5c5zYW"
        ],
        "license": "MIT"
      },
      "src/contracts/core/AllocationManager.sol": {
        "keccak256": "0x062e744730030ead1cd554260858b08c3fa102115da8dae63e736804883938b8",
        "urls": [
          "bzz-raw://43b5073f39c37d23b1454c848214940aa2dfdcfe15df8e5ff20e7c4a94296449",
          "dweb:/ipfs/QmcwyXyhfZS5GiA5kqh3Lz5mMCai73ry36sny6vkG1VkmB"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/core/AllocationManagerStorage.sol": {
        "keccak256": "0xd9175ab361845f9c684af6bea50340d0a7cb408a27941c88865e0762f329ec8d",
        "urls": [
          "bzz-raw://a61d6b5f64197e2be5edc08d360dc72b1652f32b15c430968b81b73a32418929",
          "dweb:/ipfs/QmYk6awVxcEEky9WkhPzwANpLWRht1mPSP5VwwR5GTUYY8"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/IAVSRegistrar.sol": {
        "keccak256": "0x3849ea6d0ec5bcc3315fb359dd98bb0d9bb9e2e5f4dd1c6be4753402af5909b3",
        "urls": [
          "bzz-raw://1246544c6741420365a96dbe4ec13a57a14f3ffcad13edba69176a98826ce505",
          "dweb:/ipfs/QmRdt4FZHS3oXKun2mDpzGErfmnDNSnJm8WKctkjd2sbaW"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/IAllocationManager.sol": {
        "keccak256": "0x68f1cc9fcb33237a49977fa1b16891d6fcbdc1421ccfbee77c219811bc9206e5",
        "urls": [
          "bzz-raw://c8ddef2761c75bb1118f61aa3fb86009d29b3988842ad8c49cdee98a4c8bc7e9",
          "dweb:/ipfs/Qmcrm1QubPp8bUNpF8ERgEcxV4VS4e49hRf8hAE3wucYht"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/IDelegationManager.sol": {
        "keccak256": "0x95093989fb52a3544c2296c8da36223247cab1cf4e788af25f9b4ec482c4526f",
        "urls": [
          "bzz-raw://f5e15fd4da8e17789a8cd2162d70b8a878d8e412442214a25eb01229f4635cbe",
          "dweb:/ipfs/QmRzPvMhmX9FBt1oLZCjNutGZpy4YRg9TU9nVgVMEqhKut"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/IPausable.sol": {
        "keccak256": "0x0404f1db44005929899e00dcc50d553175951ff26c215c87215bbd92b4ebfde3",
        "urls": [
          "bzz-raw://cdb88bff60663f3418d271c7db93c2867d767e31ec592690e7b2e1f1ba1589e8",
          "dweb:/ipfs/QmQfsZCiEqWYEFopZB5LvL9pq47Qba9EeMzeZcHN2e9ypc"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/IPauserRegistry.sol": {
        "keccak256": "0x705c371129ac08b9b035c1c1a1572a5e3a61b48dda8b7d8d974a7bfb88ecb7fc",
        "urls": [
          "bzz-raw://bdb894c26fcf1b83024d006b0573663286e50d857c5dea89a9149552a971da72",
          "dweb:/ipfs/QmdqWnSPmeF9mV96uWMSN8AhVi64U818GRwFEqr6dP3UMD"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/IPermissionController.sol": {
        "keccak256": "0xe9ec992f04d55c32e96b41767e901e83c6c2410c691e5fe73a43ba0f2a753f8b",
        "urls": [
          "bzz-raw://6a470a04c09d3471eefb3e7639591920ad23c1db775038277f432389cbc1f7b8",
          "dweb:/ipfs/QmRYhe8D32HarNkbNY4BtepWAGeawwn8h9WhW3A2NX8iX8"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/ISignatureUtils.sol": {
        "keccak256": "0x5164971b2648837bc100798df3633080b0f8076692a5c900f6b1aacc342241de",
        "urls": [
          "bzz-raw://2b1676f5d44cf9680c12e56b569ed876ca3038ee266c3a6c37dddf9cb2b3d87b",
          "dweb:/ipfs/QmVp4JbR9SYHDaBjfGfTh1gqoiKf2rhwV78kRPSHhjddcq"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/IStrategy.sol": {
        "keccak256": "0x601384e7910d2edcbaf58e4480261d0c11996256e810736377f37844bea3cac3",
        "urls": [
          "bzz-raw://dcfec053867cd3a4454d7c9f07d8a7c74abbae12aed45524c8bf40e8cf8e57d4",
          "dweb:/ipfs/QmbXGprDnnsvDyMcEkfZPAb5QBnzbJdnRjutfRLuPeh8V8"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/libraries/OperatorSetLib.sol": {
        "keccak256": "0xac130991039e2a885fa0f820397e80354af115d9580be357ea0c76f30e59bcec",
        "urls": [
          "bzz-raw://4528c14d2b0bc84fe13996bdd299aa71235c49a3412c1073d73b5eef502305c5",
          "dweb:/ipfs/QmReiQ95MHLrj3tvP8xdSkq4UAkmQzH6KijZqX1Hzijy6S"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/libraries/SlashingLib.sol": {
        "keccak256": "0xb5bfa03e58ee71e8672bf93c2c8f4067950f8fb61f4c5a699efbd00f96317401",
        "urls": [
          "bzz-raw://c7569fab9522bc239e3954b36f6000b7767a319ae05ad44831ebca51515103b5",
          "dweb:/ipfs/QmSnBpbagyoj3FRLDMvtoo7NiNNo6du2D5oiQZE4zeTJpZ"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/libraries/Snapshots.sol": {
        "keccak256": "0x27e0e9ed30a530ebeb197254d4a7e5a47bfcb1fc2863d0033f853a997dd231c6",
        "urls": [
          "bzz-raw://8f0627df417303e2cdae3df24026798bda09926846dba07e5228893559684e8b",
          "dweb:/ipfs/QmboVLG81jcuXYjr2aygnQM2aPUiT6jQkHWMajftoxaMZY"
        ],
        "license": "MIT"
      },
      "src/contracts/mixins/PermissionControllerMixin.sol": {
        "keccak256": "0xf915f1e416725ffd08686afab272bd7bda4c302c4fcde76769bfcdb3fbb01e67",
        "urls": [
          "bzz-raw://4e9142d737ff326018272c71c79367322576a81edf08251fd5b36b7df15cd6d0",
          "dweb:/ipfs/QmPztJGoM4fkBK3ZnmHymuZUkUPkw112VdR2g25Q55Fiva"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/permissions/Pausable.sol": {
        "keccak256": "0xd9e0b8239183be72b9ef8157aa43c15620f1e99854f79be4e6d8db57b9e61666",
        "urls": [
          "bzz-raw://e4ec5135765bf89125f1eb9c1c187ba9fd8a7c460e5dd1788c41e84f13f611cd",
          "dweb:/ipfs/QmcHtkMKos4hdmpStEnqvwviKFuNArTdzafFjSa9okCFNh"
        ],
        "license": "BUSL-1.1"
      }
    },
    "version": 1
  },
  "id": 147
}